{
    "a10_server": {
      "prefix": "a10_server-1",
      "body": [
        "- a10_server:",
        "\t\thost: a10.mydomain.com",
        "\t\tusername: myadmin",
        "\t\tpassword: mypassword",
        "\t\tpartition: mypartition",
        "\t\tserver: test",
        "\t\tserver_ip: 1.1.1.100",
        "\t\tserver_ports:",
        "\t\t\t- port_num: 8080",
        "\t\t\t\tprotocol: tcp",
        "\t\t\t- port_num: 8443",
        "\t\t\t\tprotocol: TCP",
        ""
      ]
    },
    "a10_server_axapi3": {
      "prefix": "a10_server_axapi3-1",
      "body": [
        "- a10_server:",
        "\t\thost: a10.mydomain.com",
        "\t\tusername: myadmin",
        "\t\tpassword: mypassword",
        "\t\tserver: test",
        "\t\tserver_ip: 1.1.1.100",
        "\t\tvalidate_certs: false",
        "\t\tserver_status: enable",
        "\t\twrite_config: 'yes'",
        "\t\toperation: create",
        "\t\tserver_ports:",
        "\t\t\t- port-number: 8080",
        "\t\t\t\tprotocol: tcp",
        "\t\t\t\taction: enable",
        "\t\t\t- port-number: 8443",
        "\t\t\t\tprotocol: TCP",
        ""
      ]
    },
    "a10_service_group": {
      "prefix": "a10_service_group-1",
      "body": [
        "- a10_service_group:",
        "\t\thost: a10.mydomain.com",
        "\t\tusername: myadmin",
        "\t\tpassword: mypassword",
        "\t\tpartition: mypartition",
        "\t\tservice_group: sg-80-tcp",
        "\t\tservers:",
        "\t\t\t- server: foo1.mydomain.com",
        "\t\t\t\tport: 8080",
        "\t\t\t- server: foo2.mydomain.com",
        "\t\t\t\tport: 8080",
        "\t\t\t- server: foo3.mydomain.com",
        "\t\t\t\tport: 8080",
        "\t\t\t- server: foo4.mydomain.com",
        "\t\t\t\tport: 8080",
        "\t\t\t\tstatus: disabled",
        ""
      ]
    },
    "a10_virtual_server": {
      "prefix": "a10_virtual_server-1",
      "body": [
        "- a10_virtual_server:",
        "\t\thost: a10.mydomain.com",
        "\t\tusername: myadmin",
        "\t\tpassword: mypassword",
        "\t\tpartition: mypartition",
        "\t\tvirtual_server: vserver1",
        "\t\tvirtual_server_ip: 1.1.1.1",
        "\t\tvirtual_server_ports:",
        "\t\t\t- port: 80",
        "\t\t\t\tprotocol: TCP",
        "\t\t\t\tservice_group: sg-80-tcp",
        "\t\t\t- port: 443",
        "\t\t\t\tprotocol: HTTPS",
        "\t\t\t\tservice_group: sg-443-https",
        "\t\t\t- port: 8080",
        "\t\t\t\tprotocol: http",
        "\t\t\t\tstatus: disabled",
        ""
      ]
    },
    "aci_aep": {
      "prefix": "aci_aep-4",
      "description": "Query all AEPs",
      "body": [
        "- name: Query all AEPs",
        "\taci_aep:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\tstate: query",
        ""
      ]
    },
    "aci_ap": {
      "prefix": "aci_ap-4",
      "description": "Query all APs",
      "body": [
        "- name: Query all APs",
        "\taci_ap:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\tstate: query",
        ""
      ]
    },
    "aci_bd": {
      "prefix": "aci_bd-6",
      "description": "Delete a Bridge Domain",
      "body": [
        "- name: Delete a Bridge Domain",
        "\taci_bd:",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tvalidate_certs: true",
        "\t\tstate: absent",
        "\t\ttenant: prod",
        "\t\tbd: web_servers",
        ""
      ]
    },
    "aci_config_rollback": {
      "prefix": "aci_config_rollback-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "aci_config_snapshot": {
      "prefix": "aci_config_snapshot-4",
      "description": "Delete a Snapshot",
      "body": [
        "- name: Delete a Snapshot",
        "\taci_config_snapshot:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\tstate: absent",
        "\t\texport_policy: config_backup",
        "\t\tsnapshot: run-2017-08-24T17-20-05",
        ""
      ]
    },
    "aci_contract": {
      "prefix": "aci_contract-1",
      "body": [
        "- aci_contract:",
        "\t\thostname: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tcontract: '{{ contract }}'",
        "\t\tdescription: '{{ descr }}'",
        "\t\ttenant: '{{ tenant }}'",
        "\t\tscope: '{{ scope }}'",
        "\t\tpriority: '{{ priority }}'",
        "\t\ttarget: '{{ target }}'",
        ""
      ]
    },
    "aci_contract_subject": {
      "prefix": "aci_contract_subject-4",
      "description": "Query all contract subjects",
      "body": [
        "- name: Query all contract subjects",
        "\taci_contract_subject:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\tstate: query",
        ""
      ]
    },
    "aci_contract_subject_to_filter": {
      "prefix": "aci_contract_subject_to_filter-1",
      "body": [
        "- aci_subject_filter_binding:",
        "\t\thostname: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\ttenant: '{{ tenant }}'",
        "\t\tcontract: '{{ contract }}'",
        "\t\tsubject: '{{ subject }}'",
        "\t\tfilter: '{{ filter }}'",
        "\t\tlog: '{{ log }}'",
        ""
      ]
    },
    "aci_epg": {
      "prefix": "aci_epg-1",
      "description": "Add a new EPG",
      "body": [
        "- name: Add a new EPG",
        "\taci_epg:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\ttenant: production",
        "\t\tap: intranet",
        "\t\tepg: web_epg",
        "\t\tdescription: Web Intranet EPG",
        "\t\tbd: prod_bd",
        ""
      ]
    },
    "aci_epg_monitoring_policy": {
      "prefix": "aci_epg_monitoring_policy-1",
      "body": [
        "- aci_epg_monitoring_policy:",
        "\t\thostname: '{{ hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tmonitoring_policy: '{{ monitoring_policy }}'",
        "\t\tdescription: '{{ description }}'",
        "\t\ttenant: '{{ tenant }}'",
        ""
      ]
    },
    "aci_filter": {
      "prefix": "aci_filter-4",
      "description": "Query all filters for a tenant",
      "body": [
        "- name: Query all filters for a tenant",
        "\taci_filter:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\ttenant: production",
        "\t\tstate: query",
        ""
      ]
    },
    "aci_filter_entry": {
      "prefix": "aci_filter_entry-1",
      "body": [
        "- aci_filter_entry:",
        "\t\taction: '{{ action }}'",
        "\t\tentry: '{{ entry }}'",
        "\t\ttenant: '{{ tenant }}'",
        "\t\tether_name: '{{\tether_name }}'",
        "\t\ticmp_msg_type: '{{ icmp_msg_type }}'",
        "\t\tfilter: '{{ filter }}'",
        "\t\tdescr: '{{ descr }}'",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ user }}'",
        "\t\tpassword: '{{ pass }}'",
        "\t\tprotocol: '{{ protocol }}'",
        ""
      ]
    },
    "aci_intf_policy_fc": {
      "prefix": "aci_intf_policy_fc-1",
      "body": [
        "- aci_intf_policy_fc:",
        "\t\thostname: '{{ hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tfc_policy: '{{ fc_policy }}'",
        "\t\tport_mode: '{{ port_mode }}'",
        "\t\tdescription: '{{ description }}'",
        "\t\tstate: present",
        ""
      ]
    },
    "aci_intf_policy_l2": {
      "prefix": "aci_intf_policy_l2-1",
      "body": [
        "- aci_intf_policy_l2:",
        "\t\thostname: '{{ hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tl2_policy: '{{ l2_policy }}'",
        "\t\tvlan_scope: '{{ vlan_policy }}'",
        "\t\tdescription: '{{ description }}'",
        ""
      ]
    },
    "aci_intf_policy_lldp": {
      "prefix": "aci_intf_policy_lldp-1",
      "body": [
        "- aci_intf_policy_lldp:",
        "\t\thostname: '{{ hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tlldp_policy: '{{ lldp_policy }}'",
        "\t\tdescription: '{{ description }}'",
        "\t\treceive_state: '{{ receive_state }}'",
        "\t\ttransmit_state: '{{ transmit_state }}'",
        ""
      ]
    },
    "aci_intf_policy_mcp": {
      "prefix": "aci_intf_policy_mcp-1",
      "body": [
        "- aci_mcp:",
        "\t\thostname: '{{ hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tmcp: '{{ mcp }}'",
        "\t\tdescription: '{{ descr }}'",
        "\t\tadmin_state: '{{ admin_state }}'",
        ""
      ]
    },
    "aci_intf_policy_port_channel": {
      "prefix": "aci_intf_policy_port_channel-1",
      "body": [
        "- aci_intf_policy_port_channel:",
        "\t\thostname: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tport_channel: '{{ port_channel }}'",
        "\t\tdescription: '{{ description }}'",
        "\t\tmin_links: '{{ min_links }}'",
        "\t\tmax_links: '{{ max_links }}'",
        "\t\tmode: '{{ mode }}'",
        ""
      ]
    },
    "aci_intf_policy_port_security": {
      "prefix": "aci_intf_policy_port_security-1",
      "body": [
        "- aci_intf_policy_port_security:",
        "\t\thostname: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tport_security: '{{ port_security }}'",
        "\t\tdescription: '{{ descr }}'",
        "\t\tmax_end_points: '{{ max_end_points }}'",
        ""
      ]
    },
    "aci_l3out_route_tag_policy": {
      "prefix": "aci_l3out_route_tag_policy-1",
      "body": [
        "- aci_l3out_route_tag_policy:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\trtp: '{{ rtp_name }}'",
        "\t\ttenant: production",
        "\t\ttag: '{{ tag }}'",
        "\t\tdescription: '{{ description }}'",
        ""
      ]
    },
    "aci_rest": {
      "prefix": "aci_rest-8",
      "description": "Wait for all controllers to become ready",
      "body": [
        "- name: Wait for all controllers to become ready",
        "\taci_rest:",
        "\t\thostname: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ aci_username }}'",
        "\t\tpassword: '{{ aci_password }}'",
        "\t\tvalidate_certs: 'no'",
        "\t\tpath: >-",
        "\t\t\t/api/node/class/topSystem.json?query-target-filter=eq(topSystem.role,\"controller\")",
        "\tregister: apics",
        "\tuntil: '''totalCount'' in apics and apics.totalCount|int >= groups[''apic'']|count'",
        "\tretries: 120",
        "\tdelay: 30",
        "\tdelegate_to: localhost",
        "\trun_once: 'yes'",
        ""
      ]
    },
    "aci_taboo_contract": {
      "prefix": "aci_taboo_contract-1",
      "body": [
        "- aci_taboo_contract:",
        "\t\thostname: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\ttaboo_contract: '{{ taboo_contract }}'",
        "\t\tdescription: '{{ descr }}'",
        "\t\ttenant: '{{ tenant }}'",
        ""
      ]
    },
    "aci_tenant": {
      "prefix": "aci_tenant-4",
      "description": "Query all tenants",
      "body": [
        "- name: Query all tenants",
        "\taci_tenant:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\tstate: query",
        ""
      ]
    },
    "aci_tenant_action_rule_profile": {
      "prefix": "aci_tenant_action_rule_profile-1",
      "body": [
        "- aci_tenant_action_rule_profile:",
        "\t\thostname: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\taction_rule: '{{ action_rule }}'",
        "\t\tdescription: '{{ descr }}'",
        "\t\ttenant: '{{ tenant }}'",
        ""
      ]
    },
    "aci_tenant_ep_retention_policy": {
      "prefix": "aci_tenant_ep_retention_policy-4",
      "description": "Query all EPR policies",
      "body": [
        "- name: Query all EPR policies",
        "\taci_epr_policy:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\tstate: query",
        ""
      ]
    },
    "aci_tenant_span_dst_group": {
      "prefix": "aci_tenant_span_dst_group-1",
      "body": [
        "- aci_tenant_span_dst_group:",
        "\t\thostname: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tdst_group: '{{ dst_group }}'",
        "\t\tdescription: '{{ descr }}'",
        "\t\ttenant: '{{ tenant }}'",
        ""
      ]
    },
    "aci_tenant_span_src_group": {
      "prefix": "aci_tenant_span_src_group-1",
      "body": [
        "- aci_tenant_span_src_group: >-",
        "\t\ttenant:\"{{ tenant }}\" src_group:\"{{ src_group }}\" dst_group:\"{{ dst_group",
        "\t\t}}\" admin_state:\"{{ admin_state }}\" description:\"{{ description }}\" host:\"{{",
        "\t\tinventory_hostname }}\" username:\"{{ username }}\" password:\"{{ password }}\"",
        ""
      ]
    },
    "aci_tenant_span_src_group_to_dst_group": {
      "prefix": "aci_tenant_span_src_group_to_dst_group-1",
      "body": [
        "- aci_tenant_span_src_group_to_dst_group: >-",
        "\t\ttenant:\"{{ tenant }}\" src_group:\"{{ src_group }}\" dst_group:\"{{ dst_group",
        "\t\t}}\" description:\"{{ description }}\" host:\"{{ inventory_hostname }}\"",
        "\t\tusername:\"{{ username }}\" password:\"{{ password }}\"",
        ""
      ]
    },
    "aci_vrf": {
      "prefix": "aci_vrf-4",
      "description": "Query all VRFs",
      "body": [
        "- name: Query all VRFs",
        "\taci_vrf:",
        "\t\thostname: apic",
        "\t\tusername: admin",
        "\t\tpassword: SomeSecretPassword",
        "\t\tstate: query",
        ""
      ]
    },
    "acl": {
      "prefix": "acl-5",
      "body": [
        "- acl:",
        "\t\tpath: /etc/foo.conf",
        "\tregister: acl_info",
        ""
      ]
    },
    "add_host": {
      "prefix": "add_host-4",
      "body": [
        "- add_host:",
        "\t\thostname: '{{ new_ip }}'",
        "\t\tansible_host: '{{ inventory_hostname }}'",
        "\t\tansible_port: '{{ new_port }}'",
        ""
      ]
    },
    "airbrake_deployment": {
      "prefix": "airbrake_deployment-1",
      "body": [
        "- airbrake_deployment:",
        "\t\ttoken: AAAAAA",
        "\t\tenvironment: staging",
        "\t\tuser: ansible",
        "\t\trevision: '4.2'",
        ""
      ]
    },
    "aireos_config": {
      "prefix": "aireos_config-3",
      "description": "load new acl into device",
      "body": [
        "- name: load new acl into device",
        "\taireos_config:",
        "\t\tlines:",
        "\t\t\t- acl create testACL",
        "\t\t\t- acl rule protocol testACL 1 any",
        "\t\t\t- acl rule direction testACL 3 in",
        "\t\tbefore: acl delete testACL",
        ""
      ]
    },
    "aix_inittab": {
      "prefix": "aix_inittab-3",
      "description": "remove startmyservice from inittab",
      "body": [
        "- name: remove startmyservice from inittab",
        "\taix_inittab:",
        "\t\tname: startmyservice",
        "\t\trunlevel: 2",
        "\t\taction: wait",
        "\t\tcommand: echo hello",
        "\t\tstate: absent",
        "\tbecome: 'yes'",
        ""
      ]
    },
    "aix_lvol": {
      "prefix": "aix_lvol-7",
      "description": "Remove the logical volume",
      "body": [
        "- name: Remove the logical volume",
        "\taix_lvol:",
        "\t\tvg: testvg",
        "\t\tlv: testlv",
        "\t\tstate: absent",
        ""
      ]
    },
    "alternatives": {
      "prefix": "alternatives-3",
      "description": "make java 32 bit an alternative with low priority",
      "body": [
        "- name: make java 32 bit an alternative with low priority",
        "\talternatives:",
        "\t\tname: java",
        "\t\tpath: /usr/lib/jvm/java-7-openjdk-i386/jre/bin/java",
        "\t\tpriority: -10",
        ""
      ]
    },
    "aos_asn_pool": {
      "prefix": "aos_asn_pool-3",
      "description": "Save ASN Pool into a file in YAML",
      "body": [
        "- name: Save ASN Pool into a file in YAML",
        "\tcopy:",
        "\t\tcontent: '{{ asnpool.value | to_nice_yaml }}'",
        "\t\tdest: resources/asn_pool_saved.yaml",
        ""
      ]
    },
    "aos_blueprint": {
      "prefix": "aos_blueprint-4",
      "description": "Await blueprint build-ready, and obtain contents",
      "body": [
        "- name: 'Await blueprint build-ready, and obtain contents'",
        "\taos_blueprint:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tname: '{{ blueprint_name }}'",
        "\t\tstate: build-ready",
        "\tregister: bp",
        ""
      ]
    },
    "aos_blueprint_param": {
      "prefix": "aos_blueprint_param-4",
      "description": "Get list of all supported Params for a blueprint",
      "body": [
        "- name: Get list of all supported Params for a blueprint",
        "\taos_blueprint_param:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tblueprint: my-blueprint-l2",
        "\t\tget_param_list: 'yes'",
        "\tregister: params_list",
        ""
      ]
    },
    "aos_blueprint_virtnet": {
      "prefix": "aos_blueprint_virtnet-3",
      "description": "Create Virtual Network",
      "body": [
        "- name: Create Virtual Network",
        "\taos_blueprint_virtnet:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tblueprint: my-blueprint-l2",
        "\t\tcontent: '{{ lookup(''file'', ''resources/virtual-network-02.json'') }}'",
        "\t\tstate: present",
        ""
      ]
    },
    "aos_device": {
      "prefix": "aos_device-1",
      "description": "Approve a new device",
      "body": [
        "- name: Approve a new device",
        "\taos_device:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tname: D2060B2F105429GDABCD123",
        "\t\tstate: normal",
        "\t\tapprove: true",
        "\t\tlocation: 'rack-45, ru-18'",
        ""
      ]
    },
    "aos_external_router": {
      "prefix": "aos_external_router-9",
      "description": "Load External Router from a YAML file",
      "body": [
        "- name: Load External Router from a YAML file",
        "\taos_external_router:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tcontent: '{{ lookup(''file'', ''resources/external_router_saved.yaml'') }}'",
        "\t\tstate: present",
        ""
      ]
    },
    "aos_ip_pool": {
      "prefix": "aos_ip_pool-5",
      "description": "Delete an IP pool by id",
      "body": [
        "- name: Delete an IP pool by id",
        "\taos_ip_pool:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tid: 45ab26fc-c2ed-4307-b330-0870488fa13e",
        "\t\tstate: absent",
        ""
      ]
    },
    "aos_logical_device": {
      "prefix": "aos_logical_device-2",
      "description": "Delete a Logical Device by id",
      "body": [
        "- name: Delete a Logical Device by id",
        "\taos_logical_device:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tid: 45ab26fc-c2ed-4307-b330-0870488fa13e",
        "\t\tstate: absent",
        ""
      ]
    },
    "aos_logical_device_map": {
      "prefix": "aos_logical_device_map-5",
      "description": "Delete an Logical Device Map by id",
      "body": [
        "- name: Delete an Logical Device Map by id",
        "\taos_logical_device_map:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tid: 45ab26fc-c2ed-4307-b330-0870488fa13e",
        "\t\tstate: absent",
        ""
      ]
    },
    "aos_login": {
      "prefix": "aos_login-2",
      "description": "Use the newly created session (register is not mandatory)",
      "body": [
        "- name: Use the newly created session (register is not mandatory)",
        "\taos_ip_pool:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tname: my_ip_pool",
        "\t\tstate: present",
        ""
      ]
    },
    "aos_rack_type": {
      "prefix": "aos_rack_type-2",
      "description": "Delete a Rack Type by id",
      "body": [
        "- name: Delete a Rack Type by id",
        "\taos_rack_type:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tid: 45ab26fc-c2ed-4307-b330-0870488fa13e",
        "\t\tstate: absent",
        ""
      ]
    },
    "aos_template": {
      "prefix": "aos_template-5",
      "description": "Access Template 1/3",
      "body": [
        "- name: Access Template 1/3",
        "\taos_template:",
        "\t\tsession: '{{ aos_session }}'",
        "\t\tname: my-template",
        "\t\tstate: present",
        "\tregister: template",
        ""
      ]
    },
    "apache2_mod_proxy": {
      "prefix": "apache2_mod_proxy-3",
      "body": [
        "- apache2_mod_proxy:",
        "\t\tbalancer_vhost: '{{ myloadbalancer_host }}'",
        "\tregister: result",
        ""
      ]
    },
    "apache2_module": {
      "prefix": "apache2_module-4",
      "body": [
        "- apache2_module:",
        "\t\tstate: absent",
        "\t\tname: mpm_worker",
        "\t\tignore_configcheck: true",
        ""
      ]
    },
    "apk": {
      "prefix": "apk-12",
      "body": [
        "- apk:",
        "\t\tname: foo",
        "\t\tstate: latest",
        "\t\tupdate_cache: 'yes'",
        "\t\trepository: 'http://dl-3.alpinelinux.org/alpine/edge/main'",
        ""
      ]
    },
    "apt": {
      "prefix": "apt-16",
      "description": "Remove dependencies that are no longer required",
      "body": [
        "- name: Remove dependencies that are no longer required",
        "\tapt:",
        "\t\tautoremove: 'yes'",
        ""
      ]
    },
    "apt_key": {
      "prefix": "apt_key-7",
      "description": "Add Apt signing key on remote server to keyring",
      "body": [
        "- name: Add Apt signing key on remote server to keyring",
        "\tapt_key:",
        "\t\tid: 473041FA",
        "\t\tfile: /tmp/apt.gpg",
        "\t\tstate: present",
        ""
      ]
    },
    "apt_repository": {
      "prefix": "apt_repository-6",
      "body": [
        "- apt_repository:",
        "\t\trepo: 'ppa:nginx/stable'",
        "\t\tcodename: trusty",
        ""
      ]
    },
    "apt_rpm": {
      "prefix": "apt_rpm-4",
      "body": [
        "- apt_rpm:",
        "\t\tname: bar",
        "\t\tstate: present",
        "\t\tupdate_cache: 'yes'",
        ""
      ]
    },
    "archive": {
      "prefix": "archive-4",
      "body": [
        "- archive:",
        "\t\tpath:",
        "\t\t\t- /path/to/foo",
        "\t\t\t- /path/wong/foo",
        "\t\tdest: /path/file.tar.bz2",
        "\t\tformat: bz2",
        ""
      ]
    },
    "aruba_config": {
      "prefix": "aruba_config-4",
      "description": "load new acl into device",
      "body": [
        "- name: load new acl into device",
        "\taruba_config:",
        "\t\tlines:",
        "\t\t\t- permit host 10.10.10.10",
        "\t\t\t- 'ipv6 permit host fda9:97d6:32a3:3e59::3333'",
        "\t\tparents: ip access-list standard 1",
        "\t\tbefore: no ip access-list standard 1",
        "\t\tmatch: exact",
        ""
      ]
    },
    "asa_acl": {
      "prefix": "asa_acl-1",
      "description": "# Note: examples below use the following provider dict to handle#       transport and authentication to the node.",
      "body": [
        "null",
        ""
      ]
    },
    "asa_command": {
      "prefix": "asa_command-1",
      "description": "# Note: examples below use the following provider dict to handle#       transport and authentication to the node.",
      "body": [
        "null",
        ""
      ]
    },
    "asa_config": {
      "prefix": "asa_config-1",
      "description": "# Note: examples below use the following provider dict to handle#       transport and authentication to the node.",
      "body": [
        "null",
        ""
      ]
    },
    "assemble": {
      "prefix": "assemble-3",
      "body": [
        "- assemble:",
        "\t\tsrc: /etc/ssh/conf.d/",
        "\t\tdest: /etc/ssh/sshd_config",
        "\t\tvalidate: /usr/sbin/sshd -t -f %s",
        ""
      ]
    },
    "assert": {
      "prefix": "assert-3",
      "body": [
        "- assert:",
        "\t\tthat:",
        "\t\t\t- my_param <= 100",
        "\t\t\t- my_param >= 0",
        "\t\tmsg: '''my_param'' must be between 0 and 100'",
        ""
      ]
    },
    "at": {
      "prefix": "at-3",
      "body": [
        "- at:",
        "\t\tcommand: ls -d / > /dev/null",
        "\t\tunique: true",
        "\t\tcount: 20",
        "\t\tunits: minutes",
        ""
      ]
    },
    "atomic_container": {
      "prefix": "atomic_container-2",
      "body": [
        "- atomic_container:",
        "\t\tname: etcd",
        "\t\timage: rhel/etcd",
        "\t\tbackend: ostree",
        "\t\tstate: absent",
        "\t\tsystem: true",
        ""
      ]
    },
    "atomic_host": {
      "prefix": "atomic_host-2",
      "body": [
        "- atomic_host:",
        "\t\trevision: 23.13",
        ""
      ]
    },
    "atomic_image": {
      "prefix": "atomic_image-2",
      "body": [
        "- atomic_image:",
        "\t\tname: busybox",
        "\t\tstate: latest",
        "\t\tbackend: ostree",
        ""
      ]
    },
    "authorized_key": {
      "prefix": "authorized_key-8",
      "description": "Set authorized key for user ubuntu copying it from current user",
      "body": [
        "- name: Set authorized key for user ubuntu copying it from current user",
        "\tauthorized_key:",
        "\t\tuser: ubuntu",
        "\t\tstate: present",
        "\t\tkey: '{{ lookup(''file'', lookup(''env'',''HOME'') + ''/.ssh/id_rsa.pub'') }}'",
        ""
      ]
    },
    "avi_actiongroupconfig": {
      "prefix": "avi_actiongroupconfig-1",
      "description": "Example to create ActionGroupConfig object",
      "body": [
        "- name: Example to create ActionGroupConfig object",
        "\tavi_actiongroupconfig:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_actiongroupconfig",
        ""
      ]
    },
    "avi_alertconfig": {
      "prefix": "avi_alertconfig-1",
      "description": "Example to create AlertConfig object",
      "body": [
        "- name: Example to create AlertConfig object",
        "\tavi_alertconfig:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_alertconfig",
        ""
      ]
    },
    "avi_alertemailconfig": {
      "prefix": "avi_alertemailconfig-1",
      "description": "Example to create AlertEmailConfig object",
      "body": [
        "- name: Example to create AlertEmailConfig object",
        "\tavi_alertemailconfig:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_alertemailconfig",
        ""
      ]
    },
    "avi_alertscriptconfig": {
      "prefix": "avi_alertscriptconfig-1",
      "description": "",
      "body": [
        "- name: Create Alert Script to perform AWS server autoscaling",
        "    avi_alertscriptconfig:",
        "      username: ''",
        "      controller: ''",
        "      password: ''",
        "      action_script: \"echo Hello\"",
        "      name: AWS-Launch-Script",
        "      tenant_ref: Demo"
      ]
    },
    "avi_alertsyslogconfig": {
      "prefix": "avi_alertsyslogconfig-1",
      "description": "",
      "body": [
        "- name: Create Alert Syslog object to forward all events to external syslog server",
        "    avi_alertsyslogconfig:",
        "      controller: ''",
        "      name: Roberts-syslog",
        "      password: ''",
        "      syslog_servers:",
        "      - syslog_server: 10.10.0.100",
        "        syslog_server_port: 514",
        "        udp: true",
        "      tenant_ref: admin",
        "      username: ''"
      ]
    },
    "avi_analyticsprofile": {
      "prefix": "avi_analyticsprofile-1",
      "description": "",
      "body": [
        "- name: Create a custom Analytics profile object",
        "    avi_analyticsprofile:",
        "      controller: ''",
        "      username: ''",
        "      password: ''",
        "      apdex_response_threshold: 500",
        "      apdex_response_tolerated_factor: 4.0",
        "      apdex_rtt_threshold: 250",
        "      apdex_rtt_tolerated_factor: 4.0",
        "      apdex_rum_threshold: 5000",
        "      apdex_rum_tolerated_factor: 4.0",
        "      apdex_server_response_threshold: 400",
        "      apdex_server_response_tolerated_factor: 4.0",
        "      apdex_server_rtt_threshold: 125",
        "      apdex_server_rtt_tolerated_factor: 4.0",
        "      conn_lossy_ooo_threshold: 50",
        "      conn_lossy_timeo_rexmt_threshold: 20",
        "      conn_lossy_total_rexmt_threshold: 50",
        "      conn_lossy_zero_win_size_event_threshold: 2",
        "      conn_server_lossy_ooo_threshold: 50",
        "      conn_server_lossy_timeo_rexmt_threshold: 20",
        "      conn_server_lossy_total_rexmt_threshold: 50",
        "      conn_server_lossy_zero_win_size_event_threshold: 2",
        "      disable_se_analytics: false",
        "      disable_server_analytics: false",
        "      exclude_client_close_before_request_as_error: false",
        "      exclude_persistence_change_as_error: false",
        "      exclude_server_tcp_reset_as_error: false",
        "      exclude_syn_retransmit_as_error: false",
        "      exclude_tcp_reset_as_error: false",
        "      hs_event_throttle_window: 1209600",
        "      hs_max_anomaly_penalty: 10",
        "      hs_max_resources_penalty: 25",
        "      hs_max_security_penalty: 100",
        "      hs_min_dos_rate: 1000",
        "      hs_performance_boost: 20",
        "      hs_pscore_traffic_threshold_l4_client: 10.0",
        "      hs_pscore_traffic_threshold_l4_server: 10.0",
        "      hs_security_certscore_expired: 0.0",
        "      hs_security_certscore_gt30d: 5.0",
        "      hs_security_certscore_le07d: 2.0",
        "      hs_security_certscore_le30d: 4.0",
        "      hs_security_chain_invalidity_penalty: 1.0",
        "      hs_security_cipherscore_eq000b: 0.0",
        "      hs_security_cipherscore_ge128b: 5.0",
        "      hs_security_cipherscore_lt128b: 3.5",
        "      hs_security_encalgo_score_none: 0.0",
        "      hs_security_encalgo_score_rc4: 2.5",
        "      hs_security_hsts_penalty: 0.0",
        "      hs_security_nonpfs_penalty: 1.0",
        "      hs_security_selfsignedcert_penalty: 1.0",
        "      hs_security_ssl30_score: 3.5",
        "      hs_security_tls10_score: 5.0",
        "      hs_security_tls11_score: 5.0",
        "      hs_security_tls12_score: 5.0",
        "      hs_security_weak_signature_algo_penalty: 1.0",
        "      name: jason-analytics-profile",
        "      tenant_ref: Demo"
      ]
    },
    "avi_api_session": {
      "prefix": "avi_api_session-1",
      "description": "",
      "body": [
        "- name: Get Pool Information using avi_api_session",
        "    avi_api_session:",
        "      controller: \"{{ controller }}\"",
        "      username: \"{{ username }}\"",
        "      password: \"{{ password }}\"",
        "      http_method: get",
        "      path: pool",
        "      params:",
        "        name: \"{{ pool_name }}\"",
        "      api_version: 16.4",
        "    register: pool_results"
      ]
    },
    "avi_applicationpersistenceprofile": {
      "prefix": "avi_applicationpersistenceprofile-1",
      "description": "",
      "body": [
        "- name: Create an Application Persistence setting using http cookie.",
        "    avi_applicationpersistenceprofile:",
        "      controller: ''",
        "      username: ''",
        "      password: ''",
        "      http_cookie_persistence_profile:",
        "        always_send_cookie: false",
        "        cookie_name: My-HTTP",
        "        key:",
        "        - aes_key: ShYGZdMks8j6Bpvm2sCvaXWzvXms2Z9ob+TTjRy46lQ=",
        "          name: c1276819-550c-4adf-912d-59efa5fd7269",
        "        - aes_key: OGsyVk84VCtyMENFOW0rMnRXVnNrb0RzdG5mT29oamJRb0dlbHZVSjR1az0=",
        "          name: a080de57-77c3-4580-a3ea-e7a6493c14fd",
        "        - aes_key: UVN0cU9HWmFUM2xOUzBVcmVXaHFXbnBLVUUxMU1VSktSVU5HWjJOWmVFMTBUMUV4UmxsNk4xQmFZejA9",
        "          name: 60478846-33c6-484d-868d-bbc324fce4a5",
        "        timeout: 15",
        "      name: My-HTTP-Cookie",
        "      persistence_type: PERSISTENCE_TYPE_HTTP_COOKIE",
        "      server_hm_down_recovery: HM_DOWN_PICK_NEW_SERVER",
        "      tenant_ref: Demo"
      ]
    },
    "avi_applicationprofile": {
      "prefix": "avi_applicationprofile-1",
      "description": "",
      "body": [
        "- name: Create an Application Profile for HTTP application enabled for SSL traffic",
        "    avi_applicationprofile:",
        "      controller: ''",
        "      username: ''",
        "      password: ''",
        "      http_profile:",
        "        cache_config:",
        "          age_header: true",
        "          aggressive: false",
        "          date_header: true",
        "          default_expire: 600",
        "          enabled: false",
        "          heuristic_expire: false",
        "          max_cache_size: 0",
        "          max_object_size: 4194304",
        "          mime_types_group_refs:",
        "          - admin:System-Cacheable-Resource-Types",
        "          min_object_size: 100",
        "          query_cacheable: false",
        "          xcache_header: true",
        "        client_body_timeout: 0",
        "        client_header_timeout: 10000",
        "        client_max_body_size: 0",
        "        client_max_header_size: 12",
        "        client_max_request_size: 48",
        "        compression_profile:",
        "          compressible_content_ref: admin:System-Compressible-Content-Types",
        "          compression: false",
        "          remove_accept_encoding_header: true",
        "          type: AUTO_COMPRESSION",
        "        connection_multiplexing_enabled: true",
        "        hsts_enabled: false",
        "        hsts_max_age: 365",
        "        http_to_https: false",
        "        httponly_enabled: false",
        "        keepalive_header: false",
        "        keepalive_timeout: 30000",
        "        max_bad_rps_cip: 0",
        "        max_bad_rps_cip_uri: 0",
        "        max_bad_rps_uri: 0",
        "        max_rps_cip: 0",
        "        max_rps_cip_uri: 0",
        "        max_rps_unknown_cip: 0",
        "        max_rps_unknown_uri: 0",
        "        max_rps_uri: 0",
        "        post_accept_timeout: 30000",
        "        secure_cookie_enabled: false",
        "        server_side_redirect_to_https: false",
        "        spdy_enabled: false",
        "        spdy_fwd_proxy_mode: false",
        "        ssl_client_certificate_mode: SSL_CLIENT_CERTIFICATE_NONE",
        "        ssl_everywhere_enabled: false",
        "        websockets_enabled: true",
        "        x_forwarded_proto_enabled: false",
        "        xff_alternate_name: X-Forwarded-For",
        "        xff_enabled: true",
        "      name: System-HTTP",
        "      tenant_ref: admin",
        "      type: APPLICATION_PROFILE_TYPE_HTTP"
      ]
    },
    "avi_authprofile": {
      "prefix": "avi_authprofile-1",
      "description": "",
      "body": [
        "- name: Create user authorization profile based on the LDAP",
        "    avi_authprofile:",
        "      controller: ''",
        "      password: ''",
        "      username: ''",
        "      http:",
        "        cache_expiration_time: 5",
        "        group_member_is_full_dn: false",
        "      ldap:",
        "        base_dn: dc=avi,dc=local",
        "        bind_as_administrator: true",
        "        port: 389",
        "        security_mode: AUTH_LDAP_SECURE_NONE",
        "        server:",
        "        - 10.10.0.100",
        "        settings:",
        "          admin_bind_dn: user@avi.local",
        "          group_filter: (objectClass=*)",
        "          group_member_attribute: member",
        "          group_member_is_full_dn: true",
        "          group_search_dn: dc=avi,dc=local",
        "          group_search_scope: AUTH_LDAP_SCOPE_SUBTREE",
        "          ignore_referrals: true",
        "          password: password",
        "          user_id_attribute: samAccountname",
        "          user_search_dn: dc=avi,dc=local",
        "          user_search_scope: AUTH_LDAP_SCOPE_ONE",
        "      name: ProdAuth",
        "      tenant_ref: admin",
        "      type: AUTH_PROFILE_LDAP"
      ]
    },
    "avi_backup": {
      "prefix": "avi_backup-1",
      "description": "Example to create Backup object",
      "body": [
        "- name: Example to create Backup object",
        "\tavi_backup:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_backup",
        ""
      ]
    },
    "avi_backupconfiguration": {
      "prefix": "avi_backupconfiguration-1",
      "description": "Example to create BackupConfiguration object",
      "body": [
        "- name: Example to create BackupConfiguration object",
        "\tavi_backupconfiguration:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_backupconfiguration",
        ""
      ]
    },
    "avi_certificatemanagementprofile": {
      "prefix": "avi_certificatemanagementprofile-1",
      "description": "Example to create CertificateManagementProfile object",
      "body": [
        "- name: Example to create CertificateManagementProfile object",
        "\tavi_certificatemanagementprofile:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_certificatemanagementprofile",
        ""
      ]
    },
    "avi_cloud": {
      "prefix": "avi_cloud-1",
      "description": "",
      "body": [
        "- name: Create a VMware cloud with write access mode",
        "    avi_cloud:",
        "      username: ''",
        "      controller: ''",
        "      password: ''",
        "      apic_mode: false",
        "      dhcp_enabled: true",
        "      enable_vip_static_routes: false",
        "      license_type: LIC_CORES",
        "      mtu: 1500",
        "      name: VCenter Cloud",
        "      prefer_static_routes: false",
        "      tenant_ref: admin",
        "      vcenter_configuration:",
        "        datacenter_ref: /api/vimgrdcruntime/datacenter-2-10.10.20.100",
        "        management_network: /api/vimgrnwruntime/dvportgroup-103-10.10.20.100",
        "        password: password",
        "        privilege: WRITE_ACCESS",
        "        username: user",
        "        vcenter_url: 10.10.20.100",
        "      vtype: CLOUD_VCENTER"
      ]
    },
    "avi_cloudconnectoruser": {
      "prefix": "avi_cloudconnectoruser-1",
      "description": "",
      "body": [
        "- name: Create a Cloud connector user that is used for integration into cloud platforms",
        "    avi_cloudconnectoruser:",
        "      controller: ''",
        "      name: root",
        "      password: ''",
        "      private_key: |",
        "        -----BEGIN RSA PRIVATE KEY-----",
        "        -----END RSA PRIVATE KEY-----'",
        "      public_key: 'ssh-rsa ...'",
        "      tenant_ref: admin",
        "      username: ''"
      ]
    },
    "avi_cloudproperties": {
      "prefix": "avi_cloudproperties-1",
      "description": "Example to create CloudProperties object",
      "body": [
        "- name: Example to create CloudProperties object",
        "\tavi_cloudproperties:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_cloudproperties",
        ""
      ]
    },
    "avi_cluster": {
      "prefix": "avi_cluster-1",
      "description": "Example to create Cluster object",
      "body": [
        "- name: Example to create Cluster object",
        "\tavi_cluster:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_cluster",
        ""
      ]
    },
    "avi_controllerproperties": {
      "prefix": "avi_controllerproperties-1",
      "description": "Example to create ControllerProperties object",
      "body": [
        "- name: Example to create ControllerProperties object",
        "\tavi_controllerproperties:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_controllerproperties",
        ""
      ]
    },
    "avi_dnspolicy": {
      "prefix": "avi_dnspolicy-1",
      "description": "Example to create DnsPolicy object",
      "body": [
        "- name: Example to create DnsPolicy object",
        "\tavi_dnspolicy:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_dnspolicy",
        ""
      ]
    },
    "avi_gslb": {
      "prefix": "avi_gslb-1",
      "description": "Example to create Gslb object",
      "body": [
        "- name: Example to create Gslb object",
        "\tavi_gslb:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_gslb",
        ""
      ]
    },
    "avi_gslbapplicationpersistenceprofile": {
      "prefix": "avi_gslbapplicationpersistenceprofile-1",
      "description": "Example to create GslbApplicationPersistenceProfile object",
      "body": [
        "- name: Example to create GslbApplicationPersistenceProfile object",
        "\tavi_gslbapplicationpersistenceprofile:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_gslbapplicationpersistenceprofile",
        ""
      ]
    },
    "avi_gslbgeodbprofile": {
      "prefix": "avi_gslbgeodbprofile-1",
      "description": "Example to create GslbGeoDbProfile object",
      "body": [
        "- name: Example to create GslbGeoDbProfile object",
        "\tavi_gslbgeodbprofile:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_gslbgeodbprofile",
        ""
      ]
    },
    "avi_gslbhealthmonitor": {
      "prefix": "avi_gslbhealthmonitor-1",
      "description": "Example to create GslbHealthMonitor object",
      "body": [
        "- name: Example to create GslbHealthMonitor object",
        "\tavi_gslbhealthmonitor:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_gslbhealthmonitor",
        ""
      ]
    },
    "avi_gslbservice": {
      "prefix": "avi_gslbservice-1",
      "description": "Example to create GslbService object",
      "body": [
        "- name: Example to create GslbService object",
        "\tavi_gslbservice:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_gslbservice",
        ""
      ]
    },
    "avi_hardwaresecuritymodulegroup": {
      "prefix": "avi_hardwaresecuritymodulegroup-1",
      "description": "Example to create HardwareSecurityModuleGroup object",
      "body": [
        "- name: Example to create HardwareSecurityModuleGroup object",
        "\tavi_hardwaresecuritymodulegroup:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_hardwaresecuritymodulegroup",
        ""
      ]
    },
    "avi_healthmonitor": {
      "prefix": "avi_healthmonitor-1",
      "description": "Create a HTTPS health monitor",
      "body": [
        "- name: Create a HTTPS health monitor",
        "\tavi_healthmonitor:",
        "\t\tcontroller: 10.10.27.90",
        "\t\tusername: admin",
        "\t\tpassword: AviNetworks123!",
        "\t\thttps_monitor:",
        "\t\t\thttp_request: HEAD / HTTP/1.0",
        "\t\t\thttp_response_code:",
        "\t\t\t\t- HTTP_2XX",
        "\t\t\t\t- HTTP_3XX",
        "\t\treceive_timeout: 4",
        "\t\tfailed_checks: 3",
        "\t\tsend_interval: 10",
        "\t\tsuccessful_checks: 3",
        "\t\ttype: HEALTH_MONITOR_HTTPS",
        "\t\tname: MyWebsite-HTTPS",
        ""
      ]
    },
    "avi_httppolicyset": {
      "prefix": "avi_httppolicyset-1",
      "description": "Create a HTTP Policy set two switch between testpool1 and testpool2",
      "body": [
        "- name: Create a HTTP Policy set two switch between testpool1 and testpool2",
        "\tavi_httppolicyset:",
        "\t\tcontroller: 10.10.27.90",
        "\t\tusername: admin",
        "\t\tpassword: AviNetworks123!",
        "\t\tname: test-HTTP-Policy-Set",
        "\t\ttenant_ref: admin",
        "\t\thttp_request_policy: null",
        "\t\trules:",
        "\t\t\t- index: 1",
        "\t\t\t\tenable: true",
        "\t\t\t\tname: test-test1",
        "\t\t\t\tmatch:",
        "\t\t\t\t\tpath:",
        "\t\t\t\t\t\tmatch_case: INSENSITIVE",
        "\t\t\t\t\t\tmatch_str:",
        "\t\t\t\t\t\t\t- /test1",
        "\t\t\t\t\t\tmatch_criteria: EQUALS",
        "\t\t\t\tswitching_action:",
        "\t\t\t\t\taction: HTTP_SWITCHING_SELECT_POOL",
        "\t\t\t\t\tstatus_code: HTTP_LOCAL_RESPONSE_STATUS_CODE_200",
        "\t\t\t\t\tpool_ref: /api/pool?name=testpool1",
        "\t\t\t- index: 2",
        "\t\t\t\tenable: true",
        "\t\t\t\tname: test-test2",
        "\t\t\t\tmatch:",
        "\t\t\t\t\tpath:",
        "\t\t\t\t\t\tmatch_case: INSENSITIVE",
        "\t\t\t\t\t\tmatch_str:",
        "\t\t\t\t\t\t\t- /test2",
        "\t\t\t\t\t\tmatch_criteria: CONTAINS",
        "\t\t\t\tswitching_action:",
        "\t\t\t\t\taction: HTTP_SWITCHING_SELECT_POOL",
        "\t\t\t\t\tstatus_code: HTTP_LOCAL_RESPONSE_STATUS_CODE_200",
        "\t\t\t\t\tpool_ref: /api/pool?name=testpool2",
        "\t\tis_internal_policy: false",
        ""
      ]
    },
    "avi_ipaddrgroup": {
      "prefix": "avi_ipaddrgroup-1",
      "description": "",
      "body": [
        "- name: Create an IP Address Group configuration",
        "    avi_ipaddrgroup:",
        "      controller: ''",
        "      username: ''",
        "      password: ''",
        "      name: Client-Source-Block",
        "      prefixes:",
        "      - ip_addr:",
        "          addr: 10.0.0.0",
        "          type: V4",
        "        mask: 8",
        "      - ip_addr:",
        "          addr: 172.16.0.0",
        "          type: V4",
        "        mask: 12",
        "      - ip_addr:",
        "          addr: 192.168.0.0",
        "          type: V4",
        "        mask: 16"
      ]
    },
    "avi_ipamdnsproviderprofile": {
      "prefix": "avi_ipamdnsproviderprofile-1",
      "description": "",
      "body": [
        "- name: Create IPAM DNS provider setting",
        "    avi_ipamdnsproviderprofile:",
        "      controller: ''",
        "      username: ''",
        "      password: ''",
        "      internal_profile:",
        "        dns_service_domain:",
        "        - domain_name: ashish.local",
        "          num_dns_ip: 1",
        "          pass_through: true",
        "          record_ttl: 100",
        "        - domain_name: guru.local",
        "          num_dns_ip: 1",
        "          pass_through: true",
        "          record_ttl: 200",
        "        ttl: 300",
        "      name: Ashish-DNS",
        "      tenant_ref: Demo",
        "      type: IPAMDNS_TYPE_INTERNAL"
      ]
    },
    "avi_microservicegroup": {
      "prefix": "avi_microservicegroup-1",
      "description": "",
      "body": [
        "- name: Create a Microservice Group that can be used for setting up Network security policy",
        "    avi_microservicegroup:",
        "      controller: ''",
        "      username: ''",
        "      password: ''",
        "      description: Group created by my Secure My App UI.",
        "      name: vs-msg-marketing",
        "      tenant_ref: admin"
      ]
    },
    "avi_network": {
      "prefix": "avi_network-1",
      "description": "Example to create Network object",
      "body": [
        "- name: Example to create Network object",
        "\tavi_network:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_network",
        ""
      ]
    },
    "avi_networkprofile": {
      "prefix": "avi_networkprofile-1",
      "description": "",
      "body": [
        "- name: Create a network profile for an UDP application",
        "    avi_networkprofile:",
        "      controller: ''",
        "      username: ''",
        "      password: ''",
        "      name: System-UDP-Fast-Path",
        "      profile:",
        "        type: PROTOCOL_TYPE_UDP_FAST_PATH",
        "        udp_fast_path_profile:",
        "          per_pkt_loadbalance: false",
        "          session_idle_timeout: 10",
        "          snat: true",
        "      tenant_ref: admin"
      ]
    },
    "avi_networksecuritypolicy": {
      "prefix": "avi_networksecuritypolicy-1",
      "description": "",
      "body": [
        "- name: Create a network security policy to block clients represented by ip group known_attackers",
        "    avi_networksecuritypolicy:",
        "      controller: ''",
        "      username: ''",
        "      password: ''",
        "      name: vs-gurutest-ns",
        "      rules:",
        "      - action: NETWORK_SECURITY_POLICY_ACTION_TYPE_DENY",
        "        age: 0",
        "        enable: true",
        "        index: 1",
        "        log: false",
        "        match:",
        "          client_ip:",
        "            group_refs:",
        "            - Demo:known_attackers",
        "            match_criteria: IS_IN",
        "        name: Rule 1",
        "      tenant_ref: Demo"
      ]
    },
    "avi_pkiprofile": {
      "prefix": "avi_pkiprofile-1",
      "description": "Example to create PKIProfile object",
      "body": [
        "- name: Example to create PKIProfile object",
        "\tavi_pkiprofile:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_pkiprofile",
        ""
      ]
    },
    "avi_pool": {
      "prefix": "avi_pool-1",
      "description": "Create a Pool with two servers and HTTP monitor",
      "body": [
        "- name: Create a Pool with two servers and HTTP monitor",
        "\tavi_pool:",
        "\t\tcontroller: 10.10.1.20",
        "\t\tusername: avi_user",
        "\t\tpassword: avi_password",
        "\t\tname: testpool1",
        "\t\tdescription: testpool1",
        "\t\tstate: present",
        "\t\thealth_monitor_refs:",
        "\t\t\t- /api/healthmonitor?name=System-HTTP",
        "\t\tservers:",
        "\t\t\t- ip:",
        "\t\t\t\t\taddr: 10.10.2.20",
        "\t\t\t\t\ttype: V4",
        "\t\t\t- ip:",
        "\t\t\t\t\taddr: 10.10.2.21",
        "\t\t\t\t\ttype: V4",
        ""
      ]
    },
    "avi_poolgroup": {
      "prefix": "avi_poolgroup-1",
      "description": "Example to create PoolGroup object",
      "body": [
        "- name: Example to create PoolGroup object",
        "\tavi_poolgroup:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_poolgroup",
        ""
      ]
    },
    "avi_poolgroupdeploymentpolicy": {
      "prefix": "avi_poolgroupdeploymentpolicy-1",
      "description": "Example to create PoolGroupDeploymentPolicy object",
      "body": [
        "- name: Example to create PoolGroupDeploymentPolicy object",
        "\tavi_poolgroupdeploymentpolicy:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_poolgroupdeploymentpolicy",
        ""
      ]
    },
    "avi_prioritylabels": {
      "prefix": "avi_prioritylabels-1",
      "description": "Example to create PriorityLabels object",
      "body": [
        "- name: Example to create PriorityLabels object",
        "\tavi_prioritylabels:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_prioritylabels",
        ""
      ]
    },
    "avi_role": {
      "prefix": "avi_role-1",
      "description": "Example to create Role object",
      "body": [
        "- name: Example to create Role object",
        "\tavi_role:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_role",
        ""
      ]
    },
    "avi_scheduler": {
      "prefix": "avi_scheduler-1",
      "description": "Example to create Scheduler object",
      "body": [
        "- name: Example to create Scheduler object",
        "\tavi_scheduler:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_scheduler",
        ""
      ]
    },
    "avi_seproperties": {
      "prefix": "avi_seproperties-1",
      "description": "Example to create SeProperties object",
      "body": [
        "- name: Example to create SeProperties object",
        "\tavi_seproperties:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_seproperties",
        ""
      ]
    },
    "avi_serverautoscalepolicy": {
      "prefix": "avi_serverautoscalepolicy-1",
      "description": "Example to create ServerAutoScalePolicy object",
      "body": [
        "- name: Example to create ServerAutoScalePolicy object",
        "\tavi_serverautoscalepolicy:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_serverautoscalepolicy",
        ""
      ]
    },
    "avi_serviceengine": {
      "prefix": "avi_serviceengine-1",
      "description": "Example to create ServiceEngine object",
      "body": [
        "- name: Example to create ServiceEngine object",
        "\tavi_serviceengine:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_serviceengine",
        ""
      ]
    },
    "avi_serviceenginegroup": {
      "prefix": "avi_serviceenginegroup-1",
      "description": "Example to create ServiceEngineGroup object",
      "body": [
        "- name: Example to create ServiceEngineGroup object",
        "\tavi_serviceenginegroup:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_serviceenginegroup",
        ""
      ]
    },
    "avi_snmptrapprofile": {
      "prefix": "avi_snmptrapprofile-1",
      "description": "Example to create SnmpTrapProfile object",
      "body": [
        "- name: Example to create SnmpTrapProfile object",
        "\tavi_snmptrapprofile:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_snmptrapprofile",
        ""
      ]
    },
    "avi_sslkeyandcertificate": {
      "prefix": "avi_sslkeyandcertificate-1",
      "description": "Create a SSL Key and Certificate",
      "body": [
        "- name: Create a SSL Key and Certificate",
        "\tavi_sslkeyandcertificate:",
        "\t\tcontroller: 10.10.27.90",
        "\t\tusername: admin",
        "\t\tpassword: AviNetworks123!",
        "\t\tkey: |",
        "\t\t\t-----BEGIN PRIVATE KEY-----",
        "\t\t\t....",
        "\t\t\t-----END PRIVATE KEY-----",
        "\t\tcertificate:",
        "\t\t\tself_signed: true",
        "\t\t\tcertificate: |",
        "\t\t\t\t-----BEGIN CERTIFICATE-----",
        "\t\t\t\t....",
        "\t\t\t\t-----END CERTIFICATE-----",
        "\t\ttype: SSL_CERTIFICATE_TYPE_VIRTUALSERVICE",
        "\t\tname: MyTestCert",
        ""
      ]
    },
    "avi_sslprofile": {
      "prefix": "avi_sslprofile-1",
      "description": "",
      "body": [
        "- name: Create SSL profile with list of allowed ciphers",
        "    avi_sslprofile:",
        "      controller: ''",
        "      username: ''",
        "      password: ''",
        "      accepted_ciphers: >",
        "        ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:",
        "        ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:",
        "        AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:",
        "        AES256-SHA:DES-CBC3-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:",
        "        ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA",
        "      accepted_versions:",
        "      - type: SSL_VERSION_TLS1",
        "      - type: SSL_VERSION_TLS1_1",
        "      - type: SSL_VERSION_TLS1_2",
        "      cipher_enums:",
        "      - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
        "      - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
        "      - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
        "      - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
        "      - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
        "      - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
        "      - TLS_RSA_WITH_AES_128_GCM_SHA256",
        "      - TLS_RSA_WITH_AES_256_GCM_SHA384",
        "      - TLS_RSA_WITH_AES_128_CBC_SHA256",
        "      - TLS_RSA_WITH_AES_256_CBC_SHA256",
        "      - TLS_RSA_WITH_AES_128_CBC_SHA",
        "      - TLS_RSA_WITH_AES_256_CBC_SHA",
        "      - TLS_RSA_WITH_3DES_EDE_CBC_SHA",
        "      - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
        "      - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
        "      - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
        "      - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
        "      - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
        "      - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
        "      name: PFS-BOTH-RSA-EC",
        "      send_close_notify: true",
        "      ssl_rating:",
        "        compatibility_rating: SSL_SCORE_EXCELLENT",
        "        performance_rating: SSL_SCORE_EXCELLENT",
        "        security_score: '100.0'",
        "      tenant_ref: Demo"
      ]
    },
    "avi_stringgroup": {
      "prefix": "avi_stringgroup-1",
      "description": "",
      "body": [
        "- name: Create a string group configuration",
        "    avi_stringgroup:",
        "      controller: ''",
        "      password: ''",
        "      username: ''",
        "      kv:",
        "      - key: text/html",
        "      - key: text/xml",
        "      - key: text/plain",
        "      - key: text/css",
        "      - key: text/javascript",
        "      - key: application/javascript",
        "      - key: application/x-javascript",
        "      - key: application/xml",
        "      - key: application/pdf",
        "      name: System-Compressible-Content-Types",
        "      tenant_ref: admin",
        "      type: SG_TYPE_STRING"
      ]
    },
    "avi_systemconfiguration": {
      "prefix": "avi_systemconfiguration-1",
      "description": "Example to create SystemConfiguration object",
      "body": [
        "- name: Example to create SystemConfiguration object",
        "\tavi_systemconfiguration:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_systemconfiguration",
        ""
      ]
    },
    "avi_tenant": {
      "prefix": "avi_tenant-1",
      "description": "",
      "body": [
        "- name: Create Tenant using Service Engines in provider mode",
        "    avi_tenant:",
        "      controller: ''",
        "      password: ''",
        "      username: ''",
        "      config_settings:",
        "        se_in_provider_context: false",
        "        tenant_access_to_provider_se: true",
        "        tenant_vrf: false",
        "      description: VCenter, Open Stack, AWS Virtual services",
        "      local: true",
        "      name: Demo"
      ]
    },
    "avi_trafficcloneprofile": {
      "prefix": "avi_trafficcloneprofile-1",
      "description": "Example to create TrafficCloneProfile object",
      "body": [
        "- name: Example to create TrafficCloneProfile object",
        "\tavi_trafficcloneprofile:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_trafficcloneprofile",
        ""
      ]
    },
    "avi_useraccountprofile": {
      "prefix": "avi_useraccountprofile-1",
      "description": "Example to create UserAccountProfile object",
      "body": [
        "- name: Example to create UserAccountProfile object",
        "\tavi_useraccountprofile:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_useraccountprofile",
        ""
      ]
    },
    "avi_virtualservice": {
      "prefix": "avi_virtualservice-1",
      "description": "Create SSL Virtual Service using Pool testpool2",
      "body": [
        "- name: Create SSL Virtual Service using Pool testpool2",
        "\tavi_virtualservice:",
        "\t\tcontroller: 10.10.27.90",
        "\t\tusername: admin",
        "\t\tpassword: AviNetworks123!",
        "\t\tname: newtestvs",
        "\t\tstate: present",
        "\t\tperformance_limits: null",
        "\t\tmax_concurrent_connections: 1000",
        "\t\tservices:",
        "\t\t\t- port: 443",
        "\t\t\t\tenable_ssl: true",
        "\t\t\t- port: 80",
        "\t\tssl_profile_ref: /api/sslprofile?name=System-Standard",
        "\t\tapplication_profile_ref: /api/applicationprofile?name=System-Secure-HTTP",
        "\t\tssl_key_and_certificate_refs:",
        "\t\t\t- /api/sslkeyandcertificate?name=System-Default-Cert",
        "\t\tip_address: null",
        "\t\taddr: 10.90.131.103",
        "\t\ttype: V4",
        "\t\tpool_ref: /api/pool?name=testpool2",
        ""
      ]
    },
    "avi_vrfcontext": {
      "prefix": "avi_vrfcontext-1",
      "description": "Example to create VrfContext object",
      "body": [
        "- name: Example to create VrfContext object",
        "\tavi_vrfcontext:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_vrfcontext",
        ""
      ]
    },
    "avi_vsdatascriptset": {
      "prefix": "avi_vsdatascriptset-1",
      "description": "Example to create VSDataScriptSet object",
      "body": [
        "- name: Example to create VSDataScriptSet object",
        "\tavi_vsdatascriptset:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_vsdatascriptset",
        ""
      ]
    },
    "avi_vsvip": {
      "prefix": "avi_vsvip-1",
      "description": "Example to create VsVip object",
      "body": [
        "- name: Example to create VsVip object",
        "\tavi_vsvip:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_vsvip",
        ""
      ]
    },
    "avi_webhook": {
      "prefix": "avi_webhook-1",
      "description": "Example to create Webhook object",
      "body": [
        "- name: Example to create Webhook object",
        "\tavi_webhook:",
        "\t\tcontroller: 10.10.25.42",
        "\t\tusername: admin",
        "\t\tpassword: something",
        "\t\tstate: present",
        "\t\tname: sample_webhook",
        ""
      ]
    },
    "awall": {
      "prefix": "awall-3",
      "description": "Activate currently enabled firewall rules",
      "body": [
        "- name: Activate currently enabled firewall rules",
        "\tawall:",
        "\t\tactivate: true",
        ""
      ]
    },
    "aws_acm_facts": {
      "prefix": "aws_acm_facts-3",
      "description": "obtain all certificates pending validiation",
      "body": [
        "- name: obtain all certificates pending validiation",
        "\taws_acm_facts:",
        "\t\tstatuses:",
        "\t\t\t- PENDING_VALIDATION",
        ""
      ]
    },
    "aws_direct_connect_link_aggregation_group": {
      "prefix": "aws_direct_connect_link_aggregation_group-1",
      "body": [
        "- aws_direct_connect_link_aggregation_group: null",
        "\tstate: present",
        "\tlocation: EqDC2",
        "\tlag_id: dxlag-xxxxxxxx",
        "\tbandwidth: 1Gbps",
        ""
      ]
    },
    "aws_kms": {
      "prefix": "aws_kms-1",
      "description": "grant user-style access to production secrets",
      "body": [
        "- name: grant user-style access to production secrets",
        "\tkms: null",
        "\targs:",
        "\t\tmode: grant",
        "\t\tkey_alias: alias/my_production_secrets",
        "\t\trole_name: prod-appServerRole-1R5AQG2BSEL6L",
        "\t\tgrant_types: 'role,role grant'",
        ""
      ]
    },
    "aws_s3": {
      "prefix": "aws_s3-13",
      "description": "Delete an object from a bucket",
      "body": [
        "- name: Delete an object from a bucket",
        "\taws_s3:",
        "\t\tbucket: mybucket",
        "\t\tobject: /my/desired/key.txt",
        "\t\tmode: delobj",
        ""
      ]
    },
    "aws_waf_facts": {
      "prefix": "aws_waf_facts-2",
      "description": "obtain all facts for a single WAF",
      "body": [
        "- name: obtain all facts for a single WAF",
        "\taws_waf_facts:",
        "\t\tname: test_waf",
        ""
      ]
    },
    "azure_rm_aci": {
      "prefix": "azure_rm_aci-1",
      "description": "",
      "body": [
        "- name: Create sample container group",
        "    azure_rm_aci:",
        "    resource_group: testrg",
        "    name: mynewcontainergroup",
        "    os_type: linux",
        "    ip_address: public",
        "    ports:",
        "      - 80",
        "      - 81",
        "    containers:",
        "      - name: mycontainer1",
        "        image: httpd",
        "        memory: 1.5",
        "        ports:",
        "          - 80",
        "      - name: mycontainer2",
        "        image: httpd",
        "        memory: 1.5",
        "        ports:",
        "          - 81"
      ]
    },
    "azure_rm_acr": {
      "prefix": "azure_rm_acr-1",
      "description": "",
      "body": [
        "- name: Create an azure container registry",
        "      azure_rm_acr:",
        "        name: testacr1",
        "        location: eastus",
        "        resource_group: testrg",
        "        state: present",
        "        admin_user_enabled: True",
        "        sku: Premium",
        "        tags:",
        "            Release: beta1",
        "            Environment: Production"
      ]
    },
    "azure_rm_acs": {
      "prefix": "azure_rm_acs-1",
      "description": "",
      "body": [
        "- name: Create an azure container services instance running Kubernetes",
        "      azure_rm_acs:",
        "        name: acctestcontservice1",
        "        location: eastus",
        "        resource_group: Testing",
        "        orchestration_platform: Kubernetes",
        "        master_profile:",
        "            - count: 3",
        "              dns_prefix: acsk8smasterdns",
        "        linux_profile:",
        "            - admin_username: azureuser",
        "              ssh_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAA...",
        "        service_principal:",
        "            - client_id: \"cf72ca99-f6b9-4004-b0e0-bee10c521948\"",
        "              client_secret: \"mySPNp@ssw0rd!\"",
        "        agent_pool_profiles:",
        "            - name: default",
        "              count: 5",
        "              dns_prefix: acsk8sagent",
        "              vm_size: Standard_D2_v2",
        "        diagnostics_profile: false",
        "        tags:",
        "            Environment: Production"
      ]
    },
    "azure_rm_availabilityset": {
      "prefix": "azure_rm_availabilityset-1",
      "description": "",
      "body": [
        "- name: Create an availability set with default options",
        "      azure_rm_availabilityset:",
        "        name: myavailabilityset",
        "        location: eastus",
        "        resource_group: Testing"
      ]
    },
    "azure_rm_availabilityset_facts": {
      "prefix": "azure_rm_availabilityset_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one availability set",
        "      azure_rm_availabilityset_facts:",
        "        name: Testing",
        "        resource_group: TestRG"
      ]
    },
    "azure_rm_deployment": {
      "prefix": "azure_rm_deployment-3",
      "description": "# Create or update a template deployment based on a uri to the template and parameters specified inline.# This deploys a VM with SSH support for a given public key, then stores the result in 'azure_vms'. The result is then# used to create a new host group. This host group is then used to wait for each instance to respond to the public IP SSH.",
      "body": [
        "null",
        ""
      ]
    },
    "azure_rm_dnsrecordset": {
      "prefix": "azure_rm_dnsrecordset-6",
      "description": "create TXT record in a new record set",
      "body": [
        "- name: create TXT record in a new record set",
        "\tazure_rm_dnsrecordset:",
        "\t\tresource_group: Testing",
        "\t\trelative_name: mail.testing.com",
        "\t\tzone_name: testing.com",
        "\t\trecord_type: TXT",
        "\t\trecords:",
        "\t\t\t- entry: v=spf1 a -all",
        ""
      ]
    },
    "azure_rm_dnsrecordset_facts": {
      "prefix": "azure_rm_dnsrecordset_facts-1",
      "description": "Get facts for one Record Set",
      "body": [
        "- name: Get facts for one Record Set",
        "\tazure_rm_dnsrecordset_facts:",
        "\t\tresource_group: Testing",
        "\t\tzone_name: example.com",
        "\t\trelative_name: server10",
        "\t\trecord_type: A",
        ""
      ]
    },
    "azure_rm_dnszone": {
      "prefix": "azure_rm_dnszone-2",
      "description": "Delete a DNS zone",
      "body": [
        "- name: Delete a DNS zone",
        "\tazure_rm_dnszone:",
        "\t\tresource_group: Testing",
        "\t\tname: example.com",
        "\t\tstate: absent",
        ""
      ]
    },
    "azure_rm_dnszone_facts": {
      "prefix": "azure_rm_dnszone_facts-3",
      "description": "Get facts by tags",
      "body": [
        "- name: Get facts by tags",
        "\tazure_rm_dnszone_facts:",
        "\t\ttags:",
        "\t\t\t- testing",
        ""
      ]
    },
    "azure_rm_functionapp": {
      "prefix": "azure_rm_functionapp-3",
      "description": "delete a function app",
      "body": [
        "- name: delete a function app",
        "\tazure_rm_functionapp:",
        "\t\tname: myfunctionapp",
        "\t\tstate: absent",
        ""
      ]
    },
    "azure_rm_functionapp_facts": {
      "prefix": "azure_rm_functionapp_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one Function App",
        "      azure_rm_functionapp_facts:",
        "        resource_group: ansible-rg",
        "        name: myfunctionapp"
      ]
    },
    "azure_rm_loadbalancer": {
      "prefix": "azure_rm_loadbalancer-1",
      "description": "",
      "body": [
        "- name: Create a load balancer",
        "      azure_rm_loadbalancer:",
        "        name: myloadbalancer",
        "        location: eastus",
        "        resource_group: my-rg",
        "        public_ip: mypublicip",
        "        probe_protocol: Tcp",
        "        probe_port: 80",
        "        probe_interval: 10",
        "        probe_fail_count: 3",
        "        protocol: Tcp",
        "        load_distribution: Default",
        "        frontend_port: 80",
        "        backend_port: 8080",
        "        idle_timeout: 4",
        "        natpool_frontend_port_start: 1030",
        "        natpool_frontend_port_end: 1040",
        "        natpool_backend_port: 80",
        "        natpool_protocol: Tcp"
      ]
    },
    "azure_rm_loadbalancer_facts": {
      "prefix": "azure_rm_loadbalancer_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one load balancer",
        "      azure_rm_loadbalancer_facts:",
        "        name: Testing",
        "        resource_group: TestRG"
      ]
    },
    "azure_rm_managed_disk": {
      "prefix": "azure_rm_managed_disk-1",
      "description": "",
      "body": [
        "- name: Create managed disk",
        "      azure_rm_managed_disk:",
        "        name: mymanageddisk",
        "        location: eastus",
        "        resource_group: Testing",
        "        disk_size_gb: 4"
      ]
    },
    "azure_rm_managed_disk_facts": {
      "prefix": "azure_rm_managed_disk_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one managed disk",
        "      azure_rm_managed_disk_facts:",
        "        name: Testing",
        "        resource_group: TestRG"
      ]
    },
    "azure_rm_networkinterface": {
      "prefix": "azure_rm_networkinterface-1",
      "description": "",
      "body": [
        "- name: Create a network interface with minimal parameters",
        "      azure_rm_networkinterface:",
        "            name: nic001",
        "            resource_group: Testing",
        "            virtual_network_name: vnet001",
        "            subnet_name: subnet001"
      ]
    },
    "azure_rm_networkinterface_facts": {
      "prefix": "azure_rm_networkinterface_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one network interface",
        "      azure_rm_networkinterface_facts:",
        "        resource_group: Testing",
        "        name: nic001"
      ]
    },
    "azure_rm_publicipaddress": {
      "prefix": "azure_rm_publicipaddress-1",
      "description": "",
      "body": [
        "- name: Create a public ip address",
        "      azure_rm_publicipaddress:",
        "        resource_group: testing",
        "        name: my_public_ip",
        "        allocation_method: Static",
        "        domain_name: foobar"
      ]
    },
    "azure_rm_publicipaddress_facts": {
      "prefix": "azure_rm_publicipaddress_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one Public IP",
        "      azure_rm_publicip_facts:",
        "        resource_group: Testing",
        "        name: publicip001"
      ]
    },
    "azure_rm_resourcegroup": {
      "prefix": "azure_rm_resourcegroup-1",
      "description": "",
      "body": [
        "- name: Create a resource group",
        "      azure_rm_resourcegroup:",
        "        name: Testing",
        "        location: westus",
        "        tags:",
        "            testing: testing",
        "            delete: never"
      ]
    },
    "azure_rm_resourcegroup_facts": {
      "prefix": "azure_rm_resourcegroup_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one resource group",
        "      azure_rm_resourcegroup_facts:",
        "        name: Testing"
      ]
    },
    "azure_rm_securitygroup": {
      "prefix": "azure_rm_securitygroup-3",
      "body": [
        "- azure_rm_securitygroup:",
        "\t\tresource_group: mygroup",
        "\t\tname: mysecgroup",
        "\t\tstate: absent",
        ""
      ]
    },
    "azure_rm_securitygroup_facts": {
      "prefix": "azure_rm_securitygroup_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one security group",
        "      azure_rm_securitygroup_facts:",
        "        resource_group: Testing",
        "        name: secgroup001"
      ]
    },
    "azure_rm_storageaccount": {
      "prefix": "azure_rm_storageaccount-1",
      "description": "",
      "body": [
        "- name: remove account, if it exists",
        "      azure_rm_storageaccount:",
        "        resource_group: Testing",
        "        name: clh0002",
        "        state: absent"
      ]
    },
    "azure_rm_storageaccount_facts": {
      "prefix": "azure_rm_storageaccount_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one account",
        "      azure_rm_storageaccount_facts:",
        "        resource_group: Testing",
        "        name: clh0002"
      ]
    },
    "azure_rm_storageblob": {
      "prefix": "azure_rm_storageblob-3",
      "description": "Download the file",
      "body": [
        "- name: Download the file",
        "\tazure_rm_storageblob:",
        "\t\tresource_group: Testing",
        "\t\tstorage_account_name: clh0002",
        "\t\tcontainer: foo",
        "\t\tblob: graylog.png",
        "\t\tdest: ~/tmp/images/graylog.png",
        ""
      ]
    },
    "azure_rm_subnet": {
      "prefix": "azure_rm_subnet-1",
      "description": "",
      "body": [
        "- name: Create a subnet",
        "      azure_rm_subnet:",
        "        name: foobar",
        "        virtual_network_name: My_Virtual_Network",
        "        resource_group: Testing",
        "        address_prefix_cidr: \"10.1.0.0/24\""
      ]
    },
    "azure_rm_virtualmachine": {
      "prefix": "azure_rm_virtualmachine-10",
      "description": "remove vm and all resources except public ips",
      "body": [
        "- name: remove vm and all resources except public ips",
        "\tazure_rm_virtualmachine:",
        "\t\tresource_group: Testing",
        "\t\tname: testvm002",
        "\t\tstate: absent",
        "\t\tremove_on_absent:",
        "\t\t\t- network_interfaces",
        "\t\t\t- virtual_storage",
        ""
      ]
    },
    "azure_rm_virtualmachine_extension": {
      "prefix": "azure_rm_virtualmachine_extension-1",
      "description": "",
      "body": [
        "- name: Create VM Extension",
        "      azure_rm_virtualmachine_extension:",
        "        name: myvmextension",
        "        location: eastus",
        "        resource_group: Testing",
        "        virtual_machine_name: myvm",
        "        publisher: Microsoft.Azure.Extensions",
        "        virtual_machine_extension_type: CustomScript",
        "        type_handler_version: 2.0",
        "        settings: '{\"commandToExecute\": \"hostname\"}'",
        "        auto_upgrade_minor_version: true"
      ]
    },
    "azure_rm_virtualmachine_scaleset": {
      "prefix": "azure_rm_virtualmachine_scaleset-1",
      "description": "Create VMSS",
      "body": [
        "- name: Create VMSS",
        "\tazure_rm_virtualmachine_scaleset:",
        "\t\tresource_group: Testing",
        "\t\tname: testvmss",
        "\t\tvm_size: Standard_DS1_v2",
        "\t\tcapacity: 2",
        "\t\tvirtual_network_name: testvnet",
        "\t\tsubnet_name: testsubnet",
        "\t\tadmin_username: adminUser",
        "\t\tssh_password_enabled: false",
        "\t\tssh_public_keys:",
        "\t\t\t- path: /home/adminUser/.ssh/authorized_keys",
        "\t\t\t\tkey_data: < insert yor ssh public key here... >",
        "\t\tmanaged_disk_type: Standard_LRS",
        "\t\timage:",
        "\t\t\toffer: CoreOS",
        "\t\t\tpublisher: CoreOS",
        "\t\t\tsku: Stable",
        "\t\t\tversion: latest",
        "\t\tdata_disks:",
        "\t\t\t- lun: 0",
        "\t\t\t\tdisk_size_gb: 64",
        "\t\t\t\tcaching: ReadWrite",
        "\t\t\t\tmanaged_disk_type: Standard_LRS",
        ""
      ]
    },
    "azure_rm_virtualmachine_scaleset_facts": {
      "prefix": "azure_rm_virtualmachine_scaleset_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for a virtual machine scale set",
        "      azure_rm_virtualmachine_scaleset_facts:",
        "        resource_group: Testing",
        "        name: testvmss001"
      ]
    },
    "azure_rm_virtualmachineimage_facts": {
      "prefix": "azure_rm_virtualmachineimage_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for a specific image",
        "      azure_rm_virtualmachineimage_facts:",
        "        location: eastus",
        "        publisher: OpenLogic",
        "        offer: CentOS",
        "        sku: '7.1'",
        "        version: '7.1.20160308'"
      ]
    },
    "azure_rm_virtualnetwork": {
      "prefix": "azure_rm_virtualnetwork-1",
      "description": "",
      "body": [
        "- name: Create a virtual network",
        "      azure_rm_virtualnetwork:",
        "        name: foobar",
        "        resource_group: Testing",
        "        address_prefixes_cidr:",
        "            - \"10.1.0.0/16\"",
        "            - \"172.100.0.0/16\"",
        "        dns_servers:",
        "            - \"127.0.0.1\"",
        "            - \"127.0.0.2\"",
        "        tags:",
        "            testing: testing",
        "            delete: on-exit"
      ]
    },
    "azure_rm_virtualnetwork_facts": {
      "prefix": "azure_rm_virtualnetwork_facts-1",
      "description": "",
      "body": [
        "- name: Get facts for one virtual network",
        "      azure_rm_virtualnetwork_facts:",
        "        resource_group: Testing",
        "        name: secgroup001"
      ]
    },
    "bcf_switch": {
      "prefix": "bcf_switch-1",
      "description": "bcf leaf switch",
      "body": [
        "- name: bcf leaf switch",
        "\tbcf_switch:",
        "\t\tname: Rack1Leaf1",
        "\t\tfabric_role: leaf",
        "\t\tleaf_group: R1",
        "\t\tmac: '00:00:00:02:00:02'",
        "\t\tcontroller: '{{ inventory_hostname }}'",
        "\t\tstate: present",
        "\t\tvalidate_certs: false",
        ""
      ]
    },
    "beadm": {
      "prefix": "beadm-7",
      "description": "Activate ZFS boot environment",
      "body": [
        "- name: Activate ZFS boot environment",
        "\tbeadm:",
        "\t\tname: upgrade-be",
        "\t\tstate: activated",
        ""
      ]
    },
    "bearychat": {
      "prefix": "bearychat-2",
      "description": "Send notification message via BearyChat all options",
      "body": [
        "- name: Send notification message via BearyChat all options",
        "\tlocal_action:",
        "\t\tmodule: bearychat",
        "\t\turl: >",
        "\t\t\thttps://hook.bearychat.com/=ae2CF/incoming/e61bd5c57b164e04b11ac02e66f47f60",
        "\t\ttext: '{{ inventory_hostname }} completed'",
        "\t\tmarkdown: 'no'",
        "\t\tchannel: '#ansible'",
        "\t\tattachments:",
        "\t\t\t- title: 'Ansible on {{ inventory_hostname }}'",
        "\t\t\t\ttext: May the Force be with you.",
        "\t\t\t\tcolor: '#ffffff'",
        "\t\t\t\timages:",
        "\t\t\t\t\t- 'http://example.com/index.png'",
        ""
      ]
    },
    "bigip_command": {
      "prefix": "bigip_command-5",
      "description": "tmsh prefixes will automatically be handled",
      "body": [
        "- name: tmsh prefixes will automatically be handled",
        "\tbigip_command:",
        "\t\tcommands:",
        "\t\t\t- show sys version",
        "\t\t\t- tmsh list ltm virtual",
        "\t\tserver: lb.mydomain.com",
        "\t\tpassword: secret",
        "\t\tuser: admin",
        "\t\tvalidate_certs: 'no'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_config": {
      "prefix": "bigip_config-3",
      "description": "Load an SCF configuration",
      "body": [
        "- name: Load an SCF configuration",
        "\tbigip_config:",
        "\t\tmerge_content: '{{ lookup(''file'', ''/path/to/config.scf'') }}'",
        "\t\tserver: lb.mydomain.com",
        "\t\tpassword: secret",
        "\t\tuser: admin",
        "\t\tvalidate_certs: 'no'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_configsync_action": {
      "prefix": "bigip_configsync_action-3",
      "description": "Perform an initial sync of a device to a new device group",
      "body": [
        "- name: Perform an initial sync of a device to a new device group",
        "\tbigip_configsync_actions:",
        "\t\tdevice_group: new-device-group",
        "\t\tsync_device_to_group: 'yes'",
        "\t\tserver: lb01.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tvalidate_certs: 'no'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_configsync_actions": {
      "prefix": "bigip_configsync_actions-3",
      "description": "Perform an initial sync of a device to a new device group",
      "body": [
        "- name: Perform an initial sync of a device to a new device group",
        "\tbigip_configsync_actions:",
        "\t\tdevice_group: new-device-group",
        "\t\tsync_device_to_group: 'yes'",
        "\t\tserver: lb01.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tvalidate_certs: 'no'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_device_dns": {
      "prefix": "bigip_device_dns-1",
      "description": "Set the DNS settings on the BIG-IP",
      "body": [
        "- name: Set the DNS settings on the BIG-IP",
        "\tbigip_device_dns:",
        "\t\tname_servers:",
        "\t\t\t- 208.67.222.222",
        "\t\t\t- 208.67.220.220",
        "\t\tsearch:",
        "\t\t\t- localdomain",
        "\t\t\t- lab.local",
        "\t\tstate: present",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tvalidate_certs: 'no'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_device_ntp": {
      "prefix": "bigip_device_ntp-2",
      "description": "Set timezone",
      "body": [
        "- name: Set timezone",
        "\tbigip_device_ntp:",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\ttimezone: America/Los_Angeles",
        "\t\tuser: admin",
        "\t\tvalidate_certs: 'no'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_device_sshd": {
      "prefix": "bigip_device_sshd-3",
      "description": "Set the SSHD service to run on port 2222",
      "body": [
        "- name: Set the SSHD service to run on port 2222",
        "\tbigip_device_sshd:",
        "\t\tpassword: secret",
        "\t\tport: 2222",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_facts": {
      "prefix": "bigip_facts-1",
      "description": "Collect BIG-IP facts",
      "body": [
        "- name: Collect BIG-IP facts",
        "\tbigip_facts:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tinclude: 'interface,vlan'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_gtm_datacenter": {
      "prefix": "bigip_gtm_datacenter-1",
      "description": "Create data center \"New York\"",
      "body": [
        "- name: Create data center \"New York\"",
        "\tbigip_gtm_datacenter:",
        "\t\tserver: big-ip",
        "\t\tname: New York",
        "\t\tlocation: 222 West 23rd",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_gtm_facts": {
      "prefix": "bigip_gtm_facts-1",
      "description": "Get pool facts",
      "body": [
        "- name: Get pool facts",
        "\tbigip_gtm_facts:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tinclude: pool",
        "\t\tfilter: my_pool",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_gtm_pool": {
      "prefix": "bigip_gtm_pool-2",
      "description": "Disable pool",
      "body": [
        "- name: Disable pool",
        "\tbigip_gtm_pool:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tstate: disabled",
        "\t\tname: my_pool",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_gtm_virtual_server": {
      "prefix": "bigip_gtm_virtual_server-1",
      "description": "",
      "body": [
        "- name: Enable virtual server",
        "    local_action: >",
        "      bigip_gtm_virtual_server",
        "      server=192.0.2.1",
        "      user=admin",
        "      password=mysecret",
        "      virtual_server_name=myname",
        "      virtual_server_server=myserver",
        "      state=enabled"
      ]
    },
    "bigip_gtm_wide_ip": {
      "prefix": "bigip_gtm_wide_ip-1",
      "description": "Set lb method",
      "body": [
        "- name: Set lb method",
        "\tbigip_gtm_wide_ip:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tlb_method: round-robin",
        "\t\tname: my-wide-ip.example.com",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_hostname": {
      "prefix": "bigip_hostname-1",
      "description": "Set the hostname of the BIG-IP",
      "body": [
        "- name: Set the hostname of the BIG-IP",
        "\tbigip_hostname:",
        "\t\thostname: bigip.localhost.localdomain",
        "\t\tpassword: admin",
        "\t\tserver: bigip.localhost.localdomain",
        "\t\tuser: admin",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_iapp_service": {
      "prefix": "bigip_iapp_service-4",
      "description": "Re-configure a service whose underlying iApp was updated in place",
      "body": [
        "- name: Re-configure a service whose underlying iApp was updated in place",
        "\tbigip_iapp_service:",
        "\t\tname: tests",
        "\t\ttemplate: web_frontends",
        "\t\tpassword: admin",
        "\t\tforce: 'yes'",
        "\t\tserver: '{{ inventory_hostname }}'",
        "\t\tserver_port: '{{ bigip_port }}'",
        "\t\tvalidate_certs: '{{ validate_certs }}'",
        "\t\tstate: present",
        "\t\tuser: admin",
        "\t\tparameters:",
        "\t\t\tvariables:",
        "\t\t\t\t- name: var__vs_address",
        "\t\t\t\t\tvalue: 1.1.1.1",
        "\t\t\t\t- name: pm__apache_servers_for_http",
        "\t\t\t\t\tvalue: '2.2.2.1:80'",
        "\t\t\t\t- name: pm__apache_servers_for_https",
        "\t\t\t\t\tvalue: '2.2.2.2:80'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_iapp_template": {
      "prefix": "bigip_iapp_template-3",
      "description": "Update a template in place that has existing services created from it.",
      "body": [
        "- name: Update a template in place that has existing services created from it.",
        "\tbigip_iapp_template:",
        "\t\tcontent: '{{ lookup(''template'', ''iapp-new.tmpl'') }}'",
        "\t\tforce: 'yes'",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\tstate: present",
        "\t\tuser: admin",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_irule": {
      "prefix": "bigip_irule-2",
      "description": "Add the iRule contained in static file irule.tcl to the LTM module",
      "body": [
        "- name: Add the iRule contained in static file irule.tcl to the LTM module",
        "\tbigip_irule:",
        "\t\tmodule: ltm",
        "\t\tname: MyiRule",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\tsrc: irule.tcl",
        "\t\tstate: present",
        "\t\tuser: admin",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_monitor_http": {
      "prefix": "bigip_monitor_http-2",
      "description": "BIGIP F5 | Remove HTTP Monitor",
      "body": [
        "- name: BIGIP F5 | Remove HTTP Monitor",
        "\tbigip_monitor_http:",
        "\t\tstate: absent",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tname: my_http_monitor",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_monitor_tcp": {
      "prefix": "bigip_monitor_tcp-2",
      "description": "Remove TCP Monitor",
      "body": [
        "- name: Remove TCP Monitor",
        "\tbigip_monitor_tcp:",
        "\t\tstate: absent",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tname: my_tcp_monitor",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_monitor_tcp_echo": {
      "prefix": "bigip_monitor_tcp_echo-2",
      "description": "Remove TCP Echo Monitor",
      "body": [
        "- name: Remove TCP Echo Monitor",
        "\tbigip_monitor_tcp_echo:",
        "\t\tstate: absent",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tname: my_tcp_monitor",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_monitor_tcp_half_open": {
      "prefix": "bigip_monitor_tcp_half_open-2",
      "description": "Remove TCP Monitor",
      "body": [
        "- name: Remove TCP Monitor",
        "\tbigip_monitor_tcp_half_open:",
        "\t\tstate: absent",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tname: my_tcp_monitor",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_node": {
      "prefix": "bigip_node-1",
      "description": "Add node",
      "body": [
        "- name: Add node",
        "\tbigip_node:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tstate: present",
        "\t\tpartition: Common",
        "\t\thost: 10.20.30.40",
        "\t\tname: 10.20.30.40",
        ""
      ]
    },
    "bigip_partition": {
      "prefix": "bigip_partition-5",
      "description": "Delete the \"foo\" partition",
      "body": [
        "- name: Delete the \"foo\" partition",
        "\tbigip_partition:",
        "\t\tname: foo",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tstate: absent",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_pool": {
      "prefix": "bigip_pool-5",
      "description": "Delete pool",
      "body": [
        "- name: Delete pool",
        "\tbigip_pool:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tstate: absent",
        "\t\tname: my-pool",
        "\t\tpartition: Common",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_pool_member": {
      "prefix": "bigip_pool_member-3",
      "description": "Remove pool member from pool",
      "body": [
        "- name: Remove pool member from pool",
        "\tbigip_pool_member:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tstate: absent",
        "\t\tpool: my-pool",
        "\t\tpartition: Common",
        "\t\thost: '{{ ansible_default_ipv4[''address''] }}'",
        "\t\tport: 80",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_provision": {
      "prefix": "bigip_provision-2",
      "description": "Provision a dedicated SWG. This will unprovision every other module",
      "body": [
        "- name: Provision a dedicated SWG. This will unprovision every other module",
        "\tbigip_provision:",
        "\t\tserver: lb.mydomain.com",
        "\t\tmodule: swg",
        "\t\tpassword: secret",
        "\t\tlevel: dedicated",
        "\t\tuser: admin",
        "\t\tvalidate_certs: 'no'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_qkview": {
      "prefix": "bigip_qkview-1",
      "description": "Fetch a qkview from the remote device",
      "body": [
        "- name: Fetch a qkview from the remote device",
        "\tbigip_qkview:",
        "\t\tasm_request_log: 'yes'",
        "\t\texclude:",
        "\t\t\t- audit",
        "\t\t\t- secure",
        "\t\tdest: /tmp/localhost.localdomain.qkview",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_routedomain": {
      "prefix": "bigip_routedomain-2",
      "description": "Set VLANs on the route domain",
      "body": [
        "- name: Set VLANs on the route domain",
        "\tbigip_routedomain:",
        "\t\tid: '1234'",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\tstate: present",
        "\t\tuser: admin",
        "\t\tvlans:",
        "\t\t\t- net1",
        "\t\t\t- foo",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_selfip": {
      "prefix": "bigip_selfip-8",
      "description": "Allow all TCP, but no other protocols access to this Self IP",
      "body": [
        "- name: 'Allow all TCP, but no other protocols access to this Self IP'",
        "\tbigip_selfip:",
        "\t\tname: self1",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\tstate: absent",
        "\t\tuser: admin",
        "\t\tvalidate_certs: 'no'",
        "\t\tallow_service:",
        "\t\t\t- 'tcp:0'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_snat_pool": {
      "prefix": "bigip_snat_pool-4",
      "description": "Remove the SNAT pool 'my-snat-pool'",
      "body": [
        "- name: Remove the SNAT pool 'my-snat-pool'",
        "\tbigip_snat_pool:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tname: johnd",
        "\t\tstate: absent",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_snmp": {
      "prefix": "bigip_snmp-2",
      "description": "Set snmp location",
      "body": [
        "- name: Set snmp location",
        "\tbigip_snmp:",
        "\t\tlocation: US West 1",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tvalidate_certs: 'false'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_snmp_trap": {
      "prefix": "bigip_snmp_trap-2",
      "description": "Create snmp v2 trap",
      "body": [
        "- name: Create snmp v2 trap",
        "\tbigip_snmp_trap:",
        "\t\tcommunity: general",
        "\t\tdestination: 5.6.7.8",
        "\t\tname: my-trap2",
        "\t\tnetwork: default",
        "\t\tport: '7000'",
        "\t\tsnmp_version: 2c",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_ssl_certificate": {
      "prefix": "bigip_ssl_certificate-3",
      "description": "Delete Certificate",
      "body": [
        "- name: Delete Certificate",
        "\tbigip_ssl_certificate:",
        "\t\tname: certificate-name",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tstate: absent",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_sys_db": {
      "prefix": "bigip_sys_db-3",
      "description": "Reset the initial setup screen",
      "body": [
        "- name: Reset the initial setup screen",
        "\tbigip_sys_db:",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\tkey: setup.run",
        "\t\tstate: reset",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_sys_global": {
      "prefix": "bigip_sys_global-1",
      "description": "Disable the setup utility",
      "body": [
        "- name: Disable the setup utility",
        "\tbigip_sys_global:",
        "\t\tgui_setup: disabled",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tstate: present",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_ucs": {
      "prefix": "bigip_ucs-6",
      "description": "Remove uploaded UCS file",
      "body": [
        "- name: Remove uploaded UCS file",
        "\tbigip_ucs:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tucs: bigip.localhost.localdomain.ucs",
        "\t\tstate: absent",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_user": {
      "prefix": "bigip_user-6",
      "description": "Change the Admin password",
      "body": [
        "- name: Change the Admin password",
        "\tbigip_user:",
        "\t\tserver: lb.mydomain.com",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tstate: present",
        "\t\tusername_credential: admin",
        "\t\tpassword_credential: NewSecretPassword",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_virtual_address": {
      "prefix": "bigip_virtual_address-2",
      "description": "Enable route advertisement on the virtual address",
      "body": [
        "- name: Enable route advertisement on the virtual address",
        "\tbigip_virtual_address:",
        "\t\tserver: lb.mydomain.net",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tstate: present",
        "\t\taddress: 10.10.10.10",
        "\t\tuse_route_advertisement: 'yes'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_virtual_server": {
      "prefix": "bigip_virtual_server-3",
      "description": "Delete virtual server",
      "body": [
        "- name: Delete virtual server",
        "\tbigip_virtual_server:",
        "\t\tserver: lb.mydomain.net",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tstate: absent",
        "\t\tpartition: MyPartition",
        "\t\tname: myvirtualserver",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigip_vlan": {
      "prefix": "bigip_vlan-4",
      "description": "Add VLAN 1234 as tagged to interfaces 1.1 and 1.2",
      "body": [
        "- name: Add VLAN 1234 as tagged to interfaces 1.1 and 1.2",
        "\tbigip_vlan:",
        "\t\ttagged_interfaces:",
        "\t\t\t- 1.1",
        "\t\t\t- 1.2",
        "\t\tname: net1",
        "\t\tpassword: secret",
        "\t\tserver: lb.mydomain.com",
        "\t\ttag: '1234'",
        "\t\tuser: admin",
        "\t\tvalidate_certs: 'no'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "bigmon_chain": {
      "prefix": "bigmon_chain-1",
      "description": "bigmon inline service chain",
      "body": [
        "- name: bigmon inline service chain",
        "\tbigmon_chain:",
        "\t\tname: MyChain",
        "\t\tcontroller: '{{ inventory_hostname }}'",
        "\t\tstate: present",
        "\t\tvalidate_certs: false",
        ""
      ]
    },
    "bigmon_policy": {
      "prefix": "bigmon_policy-1",
      "description": "policy to aggregate filter and deliver data center (DC) 1 traffic",
      "body": [
        "- name: policy to aggregate filter and deliver data center (DC) 1 traffic",
        "\tbigmon_policy:",
        "\t\tname: policy1",
        "\t\tpolicy_description: DC 1 traffic policy",
        "\t\taction: drop",
        "\t\tcontroller: '{{ inventory_hostname }}'",
        "\t\tstate: present",
        "\t\tvalidate_certs: false",
        ""
      ]
    },
    "bigpanda": {
      "prefix": "bigpanda-4",
      "body": [
        "- bigpanda:",
        "\t\tcomponent: '{{ deployment.component }}'",
        "\t\tversion: '{{ deployment.version }}'",
        "\t\ttoken: '{{ deployment.token }}'",
        "\t\tstate: finished",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "blockinfile": {
      "prefix": "blockinfile-6",
      "description": "Add mappings to /etc/hosts",
      "body": [
        "- name: Add mappings to /etc/hosts",
        "\tblockinfile:",
        "\t\tpath: /etc/hosts",
        "\t\tblock: |",
        "\t\t\t{{ item.ip }} {{ item.name }}",
        "\t\tmarker: '# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}'",
        "\twith_items:",
        "\t\t- name: host1",
        "\t\t\tip: 10.10.1.10",
        "\t\t- name: host2",
        "\t\t\tip: 10.10.1.11",
        "\t\t- name: host3",
        "\t\t\tip: 10.10.1.12",
        ""
      ]
    },
    "boundary_meter": {
      "prefix": "boundary_meter-2",
      "description": "Delete meter",
      "body": [
        "- name: Delete meter",
        "\tboundary_meter:",
        "\t\tapiid: AAAAAA",
        "\t\tapikey: BBBBBB",
        "\t\tstate: absent",
        "\t\tname: '{{ inventory_hostname }}'",
        ""
      ]
    },
    "bower": {
      "prefix": "bower-6",
      "body": [
        "- npm:",
        "\t\tpath: /app/location",
        "\t\tname: bower",
        "\t\tglobal: 'no'",
        ""
      ]
    },
    "bundler": {
      "prefix": "bundler-5",
      "body": [
        "- bundler:",
        "\t\tstate: latest",
        "\t\tchdir: ~/rails_project",
        ""
      ]
    },
    "bzr": {
      "prefix": "bzr-1",
      "body": [
        "- bzr:",
        "\t\tname: 'bzr+ssh://foosball.example.org/path/to/branch'",
        "\t\tdest: /srv/checkout",
        "\t\tversion: 22",
        ""
      ]
    },
    "campfire": {
      "prefix": "campfire-2",
      "body": [
        "- campfire:",
        "\t\tsubscription: foo",
        "\t\ttoken: 12345",
        "\t\troom: 123",
        "\t\tnotify: loggins",
        "\t\tmsg: Task completed ... with feeling.",
        ""
      ]
    },
    "capabilities": {
      "prefix": "capabilities-2",
      "body": [
        "- capabilities:",
        "\t\tpath: /bar",
        "\t\tcapability: cap_net_bind_service",
        "\t\tstate: absent",
        ""
      ]
    },
    "catapult": {
      "prefix": "catapult-2",
      "description": "Send a sms to a single user",
      "body": [
        "- name: Send a sms to a single user",
        "\tcatapult:",
        "\t\tsrc: '+15035555555'",
        "\t\tdest: '+12018994225'",
        "\t\tmsg: Consider yourself notified",
        "\t\tuser_id: '{{ user_id }}'",
        "\t\tapi_token: '{{ api_token }}'",
        "\t\tapi_secret: '{{ api_secret }}'",
        ""
      ]
    },
    "ce_aaa_server": {
      "prefix": "ce_aaa_server-1",
      "description": "AAA server test",
      "body": [
        "- name: AAA server test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_aaa_server_host": {
      "prefix": "ce_aaa_server_host-1",
      "description": "AAA server host test",
      "body": [
        "- name: AAA server host test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_acl": {
      "prefix": "ce_acl-1",
      "description": "CloudEngine acl test",
      "body": [
        "- name: CloudEngine acl test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_acl_advance": {
      "prefix": "ce_acl_advance-1",
      "description": "CloudEngine advance acl test",
      "body": [
        "- name: CloudEngine advance acl test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_acl_interface": {
      "prefix": "ce_acl_interface-1",
      "description": "CloudEngine acl interface test",
      "body": [
        "- name: CloudEngine acl interface test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_bfd_global": {
      "prefix": "ce_bfd_global-1",
      "description": "bfd global module test",
      "body": [
        "- name: bfd global module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_bfd_session": {
      "prefix": "ce_bfd_session-1",
      "description": "bfd session module test",
      "body": [
        "- name: bfd session module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_bfd_view": {
      "prefix": "ce_bfd_view-1",
      "description": "bfd view module test",
      "body": [
        "- name: bfd view module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_bgp": {
      "prefix": "ce_bgp-1",
      "description": "CloudEngine BGP test",
      "body": [
        "- name: CloudEngine BGP test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_bgp_af": {
      "prefix": "ce_bgp_af-1",
      "description": "CloudEngine BGP address family test",
      "body": [
        "- name: CloudEngine BGP address family test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_bgp_neighbor": {
      "prefix": "ce_bgp_neighbor-1",
      "description": "CloudEngine BGP neighbor test",
      "body": [
        "- name: CloudEngine BGP neighbor test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_bgp_neighbor_af": {
      "prefix": "ce_bgp_neighbor_af-1",
      "description": "CloudEngine BGP neighbor address family test",
      "body": [
        "- name: CloudEngine BGP neighbor address family test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_dldp": {
      "prefix": "ce_dldp-1",
      "description": "DLDP test",
      "body": [
        "- name: DLDP test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_dldp_interface": {
      "prefix": "ce_dldp_interface-1",
      "description": "DLDP interface test",
      "body": [
        "- name: DLDP interface test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_eth_trunk": {
      "prefix": "ce_eth_trunk-1",
      "description": "eth_trunk module test",
      "body": [
        "- name: eth_trunk module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_evpn_bd_vni": {
      "prefix": "ce_evpn_bd_vni-1",
      "description": "EVPN BD VNI test",
      "body": [
        "- name: EVPN BD VNI test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_evpn_bgp": {
      "prefix": "ce_evpn_bgp-1",
      "description": "evpn bgp module test",
      "body": [
        "- name: evpn bgp module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_evpn_bgp_rr": {
      "prefix": "ce_evpn_bgp_rr-1",
      "description": "BGP RR test",
      "body": [
        "- name: BGP RR test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_evpn_global": {
      "prefix": "ce_evpn_global-1",
      "description": "evpn global module test",
      "body": [
        "- name: evpn global module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_file_copy": {
      "prefix": "ce_file_copy-1",
      "description": "File copy test",
      "body": [
        "- name: File copy test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_info_center_debug": {
      "prefix": "ce_info_center_debug-1",
      "description": "CloudEngine info center debug test",
      "body": [
        "- name: CloudEngine info center debug test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_info_center_global": {
      "prefix": "ce_info_center_global-1",
      "description": "info center global module test",
      "body": [
        "- name: info center global module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_info_center_log": {
      "prefix": "ce_info_center_log-1",
      "description": "CloudEngine info center log test",
      "body": [
        "- name: CloudEngine info center log test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_info_center_trap": {
      "prefix": "ce_info_center_trap-1",
      "description": "CloudEngine info center trap test",
      "body": [
        "- name: CloudEngine info center trap test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_interface": {
      "prefix": "ce_interface-1",
      "description": "interface module test",
      "body": [
        "- name: interface module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_interface_ospf": {
      "prefix": "ce_interface_ospf-1",
      "description": "eth_trunk module test",
      "body": [
        "- name: eth_trunk module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_ip_interface": {
      "prefix": "ce_ip_interface-1",
      "description": "ip_interface module test",
      "body": [
        "- name: ip_interface module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_link_status": {
      "prefix": "ce_link_status-1",
      "description": "Link status test",
      "body": [
        "- name: Link status test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_mlag_config": {
      "prefix": "ce_mlag_config-1",
      "description": "mlag config module test",
      "body": [
        "- name: mlag config module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_mlag_interface": {
      "prefix": "ce_mlag_interface-1",
      "description": "mlag interface module test",
      "body": [
        "- name: mlag interface module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_mtu": {
      "prefix": "ce_mtu-1",
      "description": "Mtu test",
      "body": [
        "- name: Mtu test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_netconf": {
      "prefix": "ce_netconf-1",
      "description": "CloudEngine netconf test",
      "body": [
        "- name: CloudEngine netconf test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_netstream_aging": {
      "prefix": "ce_netstream_aging-1",
      "description": "netstream aging module test",
      "body": [
        "- name: netstream aging module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_netstream_export": {
      "prefix": "ce_netstream_export-1",
      "description": "netstream export module test",
      "body": [
        "- name: netstream export module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_netstream_global": {
      "prefix": "ce_netstream_global-1",
      "description": "netstream global module test",
      "body": [
        "- name: netstream global module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_netstream_template": {
      "prefix": "ce_netstream_template-1",
      "description": "netstream template module test",
      "body": [
        "- name: netstream template module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_ntp": {
      "prefix": "ce_ntp-1",
      "description": "NTP test",
      "body": [
        "- name: NTP test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_ntp_auth": {
      "prefix": "ce_ntp_auth-1",
      "description": "NTP AUTH test",
      "body": [
        "- name: NTP AUTH test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_ospf": {
      "prefix": "ce_ospf-1",
      "description": "ospf module test",
      "body": [
        "- name: ospf module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_ospf_vrf": {
      "prefix": "ce_ospf_vrf-1",
      "description": "ospf vrf module test",
      "body": [
        "- name: ospf vrf module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_reboot": {
      "prefix": "ce_reboot-1",
      "description": "reboot module test",
      "body": [
        "- name: reboot module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_rollback": {
      "prefix": "ce_rollback-1",
      "description": "rollback module test",
      "body": [
        "- name: rollback module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_sflow": {
      "prefix": "ce_sflow-2",
      "description": "sflow module test",
      "body": [
        "- name: sflow module test",
        "\thosts: ce128",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_snmp_community": {
      "prefix": "ce_snmp_community-1",
      "description": "CloudEngine snmp community test",
      "body": [
        "- name: CloudEngine snmp community test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_snmp_contact": {
      "prefix": "ce_snmp_contact-1",
      "description": "CloudEngine snmp contact test",
      "body": [
        "- name: CloudEngine snmp contact test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_snmp_location": {
      "prefix": "ce_snmp_location-1",
      "description": "CloudEngine snmp location test",
      "body": [
        "- name: CloudEngine snmp location test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_snmp_target_host": {
      "prefix": "ce_snmp_target_host-1",
      "description": "CloudEngine snmp target host test",
      "body": [
        "- name: CloudEngine snmp target host test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_snmp_traps": {
      "prefix": "ce_snmp_traps-1",
      "description": "CloudEngine snmp traps test",
      "body": [
        "- name: CloudEngine snmp traps test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_snmp_user": {
      "prefix": "ce_snmp_user-1",
      "description": "CloudEngine snmp user test",
      "body": [
        "- name: CloudEngine snmp user test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_startup": {
      "prefix": "ce_startup-1",
      "description": "startup module test",
      "body": [
        "- name: startup module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_static_route": {
      "prefix": "ce_static_route-1",
      "description": "static route module test",
      "body": [
        "- name: static route module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_stp": {
      "prefix": "ce_stp-1",
      "description": "CloudEngine stp test",
      "body": [
        "- name: CloudEngine stp test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_switchport": {
      "prefix": "ce_switchport-1",
      "description": "switchport module test",
      "body": [
        "- name: switchport module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vlan": {
      "prefix": "ce_vlan-1",
      "description": "vlan module test",
      "body": [
        "- name: vlan module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vrf": {
      "prefix": "ce_vrf-1",
      "description": "vrf module test",
      "body": [
        "- name: vrf module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vrf_af": {
      "prefix": "ce_vrf_af-1",
      "description": "vrf af module test",
      "body": [
        "- name: vrf af module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vrf_interface": {
      "prefix": "ce_vrf_interface-1",
      "description": "VRF interface test",
      "body": [
        "- name: VRF interface test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vrrp": {
      "prefix": "ce_vrrp-1",
      "description": "vrrp module test",
      "body": [
        "- name: vrrp module test",
        "\thosts: cloudengine",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vxlan_arp": {
      "prefix": "ce_vxlan_arp-1",
      "description": "vxlan arp module test",
      "body": [
        "- name: vxlan arp module test",
        "\thosts: ce128",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vxlan_gateway": {
      "prefix": "ce_vxlan_gateway-1",
      "description": "vxlan gateway module test",
      "body": [
        "- name: vxlan gateway module test",
        "\thosts: ce128",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vxlan_global": {
      "prefix": "ce_vxlan_global-1",
      "description": "vxlan global module test",
      "body": [
        "- name: vxlan global module test",
        "\thosts: ce128",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vxlan_tunnel": {
      "prefix": "ce_vxlan_tunnel-1",
      "description": "vxlan tunnel module test",
      "body": [
        "- name: vxlan tunnel module test",
        "\thosts: ce128",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "ce_vxlan_vap": {
      "prefix": "ce_vxlan_vap-1",
      "description": "vxlan vap module test",
      "body": [
        "- name: vxlan vap module test",
        "\thosts: ce128",
        "\tconnection: local",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tcli:",
        "\t\t\thost: '{{ inventory_hostname }}'",
        "\t\t\tport: '{{ ansible_ssh_port }}'",
        "\t\t\tusername: '{{ username }}'",
        "\t\t\tpassword: '{{ password }}'",
        "\t\t\ttransport: cli",
        ""
      ]
    },
    "circonus_annotation": {
      "prefix": "circonus_annotation-3",
      "body": [
        "- circonus_annotation:",
        "\t\tapi_key: XXXXXXXXXXXXXXXXX",
        "\t\ttitle: App Config Change",
        "\t\tdescription: This is a detailed description of the config change",
        "\t\tcategory: This category groups like annotations",
        "\t\tstart_time: 1395940006",
        "\t\tend_time: 1395954407",
        ""
      ]
    },
    "cl_bond": {
      "prefix": "cl_bond-4",
      "description": "# In vars file# ============",
      "body": [
        "null",
        ""
      ]
    },
    "cl_bridge": {
      "prefix": "cl_bridge-4",
      "description": "# In vars file# ============",
      "body": [
        "null",
        ""
      ]
    },
    "cl_img_install": {
      "prefix": "cl_img_install-1",
      "description": "Install image using using http url. Switch slots so the subsequent will load the new version",
      "body": [
        "- name: >-",
        "\t\tInstall image using using http url. Switch slots so the subsequent will load",
        "\t\tthe new version",
        "\tcl_img_install:",
        "\t\tversion: 2.0.1",
        "\t\tsrc: 'http://10.1.1.1/CumulusLinux-2.0.1.bin'",
        "\t\tswitch_slot: 'yes'",
        ""
      ]
    },
    "cl_interface": {
      "prefix": "cl_interface-6",
      "description": "# In vars file# ============",
      "body": [
        "null",
        ""
      ]
    },
    "clc_firewall_policy": {
      "prefix": "clc_firewall_policy-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "clc_loadbalancer": {
      "prefix": "clc_loadbalancer-5",
      "description": "Delete Loadbalancer",
      "body": [
        "- name: Delete Loadbalancer",
        "\thosts: localhost",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Actually Delete things",
        "\t\t\tclc_loadbalancer:",
        "\t\t\t\tname: test",
        "\t\t\t\tdescription: test",
        "\t\t\t\talias: TEST",
        "\t\t\t\tlocation: WA1",
        "\t\t\t\tport: 443",
        "\t\t\t\tnodes:",
        "\t\t\t\t\t- ipAddress: 10.11.22.123",
        "\t\t\t\t\t\tprivatePort: 80",
        "\t\t\t\tstate: absent",
        ""
      ]
    },
    "cloudflare_dns": {
      "prefix": "cloudflare_dns-7",
      "body": [
        "- cloudflare_dns:",
        "\t\tdomain: my.com",
        "\t\tservice: foo",
        "\t\tproto: tcp",
        "\t\tport: 3500",
        "\t\tpriority: 10",
        "\t\tweight: 20",
        "\t\ttype: SRV",
        "\t\tvalue: fooserver.my.com",
        ""
      ]
    },
    "cloudformation": {
      "prefix": "cloudformation-5",
      "description": "launch ansible cloudformation example with role assumption",
      "body": [
        "- name: launch ansible cloudformation example with role assumption",
        "\tcloudformation:",
        "\t\tstack_name: ansible-cloudformation",
        "\t\tstate: present",
        "\t\tregion: us-east-1",
        "\t\tdisable_rollback: true",
        "\t\ttemplate_url: 'https://s3.amazonaws.com/my-bucket/cloudformation.template'",
        "\t\trole_arn: 'arn:aws:iam::123456789012:role/cloudformation-iam-role'",
        "\targs:",
        "\t\ttemplate_parameters:",
        "\t\t\tKeyName: jmartin",
        "\t\t\tDiskType: ephemeral",
        "\t\t\tInstanceType: m1.small",
        "\t\t\tClusterSize: 3",
        "\t\ttags:",
        "\t\t\tStack: ansible-cloudformation",
        ""
      ]
    },
    "cloudscale_server": {
      "prefix": "cloudscale_server-5",
      "description": "Start server and wait for SSH host keys",
      "body": [
        "- name: Start server and wait for SSH host keys",
        "\tcloudscale_server:",
        "\t\tname: my-cloudscale-server-with-ssh-key",
        "\t\timage: debian-8",
        "\t\tflavor: flex-4",
        "\t\tssh_keys: ssh-rsa XXXXXXXXXXX ansible@cloudscale",
        "\t\tapi_token: xxxxxx",
        "\tregister: server",
        "\tuntil: server.ssh_fingerprints",
        "\tretries: 60",
        "\tdelay: 2",
        ""
      ]
    },
    "cloudtrail": {
      "prefix": "cloudtrail-4",
      "description": "delete a trail",
      "body": [
        "- name: delete a trail",
        "\tcloudtrail:",
        "\t\tstate: absent",
        "\t\tname: default",
        ""
      ]
    },
    "cloudwatchevent_rule": {
      "prefix": "cloudwatchevent_rule-3",
      "body": [
        "- cloudwatchevent_rule:",
        "\t\tname: MyCronTask",
        "\t\tstate: absent",
        ""
      ]
    },
    "command": {
      "prefix": "command-4",
      "description": "safely use templated variable to run command. Always use the quote filter to avoid injection issues.",
      "body": [
        "- name: >-",
        "\t\tsafely use templated variable to run command. Always use the quote filter to",
        "\t\tavoid injection issues.",
        "\tcommand: 'cat {{ myfile|quote }}'",
        "\tregister: myoutput",
        ""
      ]
    },
    "composer": {
      "prefix": "composer-4",
      "body": [
        "- composer:",
        "\t\tcommand: require",
        "\t\tglobal_command: 'yes'",
        "\t\targuments: my/package",
        ""
      ]
    },
    "consul": {
      "prefix": "consul-9",
      "description": "register an http check against a service that's already registered",
      "body": [
        "- name: register an http check against a service that's already registered",
        "\tconsul:",
        "\t\tcheck_name: nginx-check2",
        "\t\tcheck_id: nginx-check2",
        "\t\tservice_id: nginx",
        "\t\tinterval: 60s",
        "\t\thttp: 'http://localhost:80/morestatus'",
        ""
      ]
    },
    "consul_acl": {
      "prefix": "consul_acl-4",
      "description": "remove a token",
      "body": [
        "- name: remove a token",
        "\tconsul_acl:",
        "\t\thost: consul1.example.com",
        "\t\tmgmt_token: some_management_acl",
        "\t\ttoken: 172bd5c8-9fe9-11e4-b1b0-3c15c2c9fd5e",
        "\t\tstate: absent",
        ""
      ]
    },
    "consul_kv": {
      "prefix": "consul_kv-1",
      "description": "",
      "body": [
        "- name: add or update the value associated with a key in the key/value store",
        "    consul_kv:",
        "      key: somekey",
        "      value: somevalue"
      ]
    },
    "consul_session": {
      "prefix": "consul_session-5",
      "description": "retrieve active sessions",
      "body": [
        "- name: retrieve active sessions",
        "\tconsul_session: state=list",
        ""
      ]
    },
    "copy": {
      "prefix": "copy-7",
      "body": [
        "- hosts: all",
        "\ttasks:",
        "\t\t- copy:",
        "\t\t\t\tcontent: >",
        "\t\t\t\t\tHOSTNAME;IPADDRESS;FQDN;OSNAME;OSVERSION;PROCESSOR;ARCHITECTURE;MEMORY;",
        "",
        "\t\t\t\t\t{% for host in hostvars %}",
        "",
        "\t\t\t\t\t{%\t set vars = hostvars[host|string] %}",
        "",
        "\t\t\t\t\t{{ vars.ansible_hostname }};{{ vars.remote_host }};{{",
        "\t\t\t\t\tvars.ansible_fqdn }};{{ vars.ansible_distribution }};{{",
        "\t\t\t\t\tvars.ansible_distribution_version }};{{ vars.ansible_processor[1]",
        "\t\t\t\t\t}};{{ vars.ansible_architecture }};{{",
        "\t\t\t\t\t(vars.ansible_memtotal_mb/1024)|round|int }};\t# NOQA",
        "",
        "\t\t\t\t\t{% endfor %}",
        "\t\t\t\tdest: /some/path/systems.csv",
        "\t\t\t\tbackup: 'yes'",
        "\t\t\trun_once: 'yes'",
        "\t\t\tdelegate_to: localhost",
        ""
      ]
    },
    "cpanm": {
      "prefix": "cpanm-8",
      "body": [
        "- cpanm:",
        "\t\tname: Dancer",
        "\t\tversion: '1.0'",
        ""
      ]
    },
    "cron": {
      "prefix": "cron-8",
      "body": [
        "- cron:",
        "\t\tname: APP_HOME",
        "\t\tenv: 'yes'",
        "\t\tstate: absent",
        ""
      ]
    },
    "cronvar": {
      "prefix": "cronvar-3",
      "body": [
        "- cronvar:",
        "\t\tname: LOGFILE",
        "\t\tvalue: /var/log/yum-autoupdate.log",
        "\t\tuser: root",
        "\t\tcron_file: ansible_yum-autoupdate",
        ""
      ]
    },
    "crypttab": {
      "prefix": "crypttab-2",
      "description": "Add the 'discard' option to any existing options for all devices",
      "body": [
        "- name: Add the 'discard' option to any existing options for all devices",
        "\tcrypttab:",
        "\t\tname: '{{ item.device }}'",
        "\t\tstate: opts_present",
        "\t\topts: discard",
        "\twith_items: '{{ ansible_mounts }}'",
        "\twhen: '''/dev/mapper/luks-'' in {{ item.device }}'",
        ""
      ]
    },
    "cs_affinitygroup": {
      "prefix": "cs_affinitygroup-2",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_affinitygroup",
        "\t\tname: haproxy",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_cluster": {
      "prefix": "cs_cluster-4",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_cluster",
        "\t\tname: kvm-cluster-01",
        "\t\tzone: ch-zrh-ix-01",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_configuration": {
      "prefix": "cs_configuration-4",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_configuration",
        "\t\tname: allow.public.user.templates",
        "\t\tvalue: false",
        "\t\taccount: acme inc",
        "\t\tdomain: customers",
        ""
      ]
    },
    "cs_domain": {
      "prefix": "cs_domain-3",
      "description": "Remove a domain",
      "body": [
        "- name: Remove a domain",
        "\tlocal_action:",
        "\t\tmodule: cs_domain",
        "\t\tpath: ROOT/customers/xy",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_facts": {
      "prefix": "cs_facts-3",
      "description": "Gather cloudstack facts",
      "body": [
        "- name: Gather cloudstack facts",
        "\tcs_facts:",
        "\t\tfilter: cloudstack_instance_id",
        "\t\tmeta_data_host: 169.254.169.254",
        ""
      ]
    },
    "cs_firewall": {
      "prefix": "cs_firewall-5",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_firewall",
        "\t\tnetwork: my_network",
        "\t\ttype: egress",
        "\t\tport: 80",
        "\t\tcidr: 10.101.1.20",
        ""
      ]
    },
    "cs_host": {
      "prefix": "cs_host-4",
      "description": "Ensure a host is absent",
      "body": [
        "- name: Ensure a host is absent",
        "\tlocal_action:",
        "\t\tmodule: cs_host",
        "\t\tname: ix-pod01-esx01.example.com",
        "\t\tzone: ch-zrh-ix-01",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_instance": {
      "prefix": "cs_instance-7",
      "body": [
        "- cs_instance:",
        "\t\tname: web-vm-1",
        "\t\tstate: absent",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "cs_instance_facts": {
      "prefix": "cs_instance_facts-2",
      "body": [
        "- debug:",
        "\t\tvar: cloudstack_instance",
        ""
      ]
    },
    "cs_instance_nic": {
      "prefix": "cs_instance_nic-3",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_instance_nic",
        "\t\tvm: privnet",
        "\t\tstate: absent",
        "\t\tnetwork: privNetForBasicZone",
        ""
      ]
    },
    "cs_instance_nic_secondaryip": {
      "prefix": "cs_instance_nic_secondaryip-3",
      "description": "Remove a specific IP from the default NIC",
      "body": [
        "- name: Remove a specific IP from the default NIC",
        "\tlocal_action:",
        "\t\tmodule: cs_instance_nic_secondaryip",
        "\t\tvm: customer_xy",
        "\t\tvm_guest_ip: 10.10.10.10",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_instancegroup": {
      "prefix": "cs_instancegroup-2",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_instancegroup",
        "\t\tname: loadbalancers",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_ip_address": {
      "prefix": "cs_ip_address-2",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_ip_address",
        "\t\tip_address: 1.2.3.4",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_iso": {
      "prefix": "cs_iso-4",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_iso",
        "\t\tname: Debian 7 64-bit",
        "\t\tchecksum: 0b31bccccb048d20b551f70830bb7ad0",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_loadbalancer_rule": {
      "prefix": "cs_loadbalancer_rule-3",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_loadbalancer_rule",
        "\t\tname: balance_http",
        "\t\tpublic_ip: 1.2.3.4",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_loadbalancer_rule_member": {
      "prefix": "cs_loadbalancer_rule_member-3",
      "body": [
        "- hosts: webservers",
        "\tserial: 1",
        "\tpre_tasks:",
        "\t\t- name: Remove from load balancer",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: cs_loadbalancer_rule_member",
        "\t\t\t\tname: balance_http",
        "\t\t\t\tvm: '{{ ansible_hostname }}'",
        "\t\t\t\tstate: absent",
        "\ttasks: null",
        "\tpost_tasks:",
        "\t\t- name: Add to load balancer",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: cs_loadbalancer_rule_member",
        "\t\t\t\tname: balance_http",
        "\t\t\t\tvm: '{{ ansible_hostname }}'",
        "\t\t\t\tstate: present",
        ""
      ]
    },
    "cs_network": {
      "prefix": "cs_network-4",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_network",
        "\t\tname: my network",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_nic": {
      "prefix": "cs_nic-3",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_nic",
        "\t\tvm: customer_xy",
        "\t\tvm_guest_ip: 10.10.10.10",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_pod": {
      "prefix": "cs_pod-4",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_pod",
        "\t\tname: pod1",
        "\t\tzone: ch-zrh-ix-01",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_portforward": {
      "prefix": "cs_portforward-4",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_portforward",
        "\t\tip_address: 1.2.3.4",
        "\t\tpublic_port: 22",
        "\t\tprivate_port: 22",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_project": {
      "prefix": "cs_project-5",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_project",
        "\t\tname: web",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_role": {
      "prefix": "cs_role-3",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_role",
        "\t\tname: myrole_user",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_router": {
      "prefix": "cs_router-5",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_router",
        "\t\tname: r-40-VM",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_securitygroup": {
      "prefix": "cs_securitygroup-2",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_securitygroup",
        "\t\tname: default",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_securitygroup_rule": {
      "prefix": "cs_securitygroup_rule-6",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_securitygroup_rule",
        "\t\tsecurity_group: default",
        "\t\tport: 80",
        "\t\tuser_security_group: web",
        ""
      ]
    },
    "cs_snapshot_policy": {
      "prefix": "cs_snapshot_policy-5",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_snapshot_policy",
        "\t\tvolume: ROOT-478",
        "\t\tinterval_type: hourly",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_sshkeypair": {
      "prefix": "cs_sshkeypair-1",
      "body": [
        "- cs_sshkeypair:",
        "\t\tname: linus@example.com",
        "\tdelegate_to: localhost",
        "\tregister: key",
        ""
      ]
    },
    "cs_staticnat": {
      "prefix": "cs_staticnat-2",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_staticnat",
        "\t\tip_address: 1.2.3.4",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_storage_pool": {
      "prefix": "cs_storage_pool-4",
      "description": "ensure a storage_pool is absent",
      "body": [
        "- name: ensure a storage_pool is absent",
        "\tlocal_action:",
        "\t\tmodule: cs_storage_pool",
        "\t\tname: Ceph RBD",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_template": {
      "prefix": "cs_template-4",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_template",
        "\t\tname: systemvm-4.2",
        "\t\tcross_zones: 'yes'",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_vmsnapshot": {
      "prefix": "cs_vmsnapshot-3",
      "description": "Remove a VM snapshot after successful upgrade",
      "body": [
        "- name: Remove a VM snapshot after successful upgrade",
        "\tlocal_action:",
        "\t\tmodule: cs_vmsnapshot",
        "\t\tname: Snapshot before upgrade",
        "\t\tvm: web-01",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_volume": {
      "prefix": "cs_volume-4",
      "description": "remove volume",
      "body": [
        "- name: remove volume",
        "\tlocal_action:",
        "\t\tmodule: cs_volume",
        "\t\tname: web-vm-1-volume",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_vpc": {
      "prefix": "cs_vpc-3",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_vpc",
        "\t\tname: my_vpc",
        "\t\tstate: restarted",
        ""
      ]
    },
    "cs_vpn_gateway": {
      "prefix": "cs_vpn_gateway-2",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_vpn_gateway",
        "\t\tvpc: my VPC",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_zone": {
      "prefix": "cs_zone-4",
      "body": [
        "- local_action:",
        "\t\tmodule: cs_zone",
        "\t\tname: ch-zrh-ix-01",
        "\t\tstate: absent",
        ""
      ]
    },
    "cs_zone_facts": {
      "prefix": "cs_zone_facts-2",
      "body": [
        "- debug:",
        "\t\tvar: cloudstack_zone",
        ""
      ]
    },
    "cv_server_provision": {
      "prefix": "cv_server_provision-4",
      "description": "Add template with VLAN configuration to interface Ethernet2. Run task.",
      "body": [
        "- name: Add template with VLAN configuration to interface Ethernet2. Run task.",
        "\tcv_server_provision:",
        "\t\thost: cvp_node",
        "\t\tusername: cvp_user",
        "\t\tpassword: cvp_pass",
        "\t\tprotocol: https",
        "\t\tserver_name: new_server",
        "\t\tswitch_name: eos_switch_1",
        "\t\tswitch_port: 2",
        "\t\tport_vlan: 22",
        "\t\ttemplate: single_attached_vlan.j2",
        "\t\taction: add",
        "\t\tauto_run: true",
        ""
      ]
    },
    "cyberark_authentication": {
      "prefix": "cyberark_authentication-3",
      "description": "Logoff from CyberArk Vault",
      "body": [
        "- name: Logoff from CyberArk Vault",
        "\tcyberark_authentication:",
        "\t\tstate: absent",
        "\t\tcyberark_session: '{{ cyberark_session }}'",
        ""
      ]
    },
    "cyberark_user": {
      "prefix": "cyberark_user-4",
      "description": "Logoff from CyberArk Vault",
      "body": [
        "- name: Logoff from CyberArk Vault",
        "\tcyberark_authentication:",
        "\t\tstate: absent",
        "\t\tcyberark_session: '{{ cyberark_session }}'",
        ""
      ]
    },
    "datadog_event": {
      "prefix": "datadog_event-2",
      "body": [
        "- datadog_event:",
        "\t\ttitle: Testing from ansible",
        "\t\ttext: Test",
        "\t\tapi_key: 9775a026f1ca7d1c6c5af9d94d9595a4",
        "\t\tapp_key: j4JyCYfefWHhgFgiZUqRm63AXHNZQyPGBfJtAzmN",
        "\t\ttags: 'aa,bb,#host:{{ inventory_hostname }}'",
        ""
      ]
    },
    "dconf": {
      "prefix": "dconf-7",
      "description": "Disable desktop effects in Cinnamon",
      "body": [
        "- name: Disable desktop effects in Cinnamon",
        "\tdconf:",
        "\t\tkey: /org/cinnamon/desktop-effects",
        "\t\tvalue: 'false'",
        "\t\tstate: present",
        ""
      ]
    },
    "debconf": {
      "prefix": "debconf-4",
      "body": [
        "- debconf:",
        "\t\tname: tzdata",
        ""
      ]
    },
    "debug": {
      "prefix": "debug-5",
      "description": "Display all variables/facts known for a host",
      "body": [
        "- name: Display all variables/facts known for a host",
        "\tdebug:",
        "\t\tvar: 'hostvars[inventory_hostname]'",
        "\t\tverbosity: 4",
        ""
      ]
    },
    "dellos10_config": {
      "prefix": "dellos10_config-3",
      "body": [
        "- dellos10_config:",
        "\t\tlines:",
        "\t\t\t- 10 permit ip host 1.1.1.1 any log",
        "\t\t\t- 20 permit ip host 2.2.2.2 any log",
        "\t\t\t- 30 permit ip host 3.3.3.3 any log",
        "\t\t\t- 40 permit ip host 4.4.4.4 any log",
        "\t\tparents:",
        "\t\t\t- ip access-list test",
        "\t\tbefore:",
        "\t\t\t- no ip access-list test",
        "\t\treplace: block",
        "\t\tprovider: '{{ cli }}'",
        ""
      ]
    },
    "dellos10_facts": {
      "prefix": "dellos10_facts-3",
      "body": [
        "- dellos10_facts:",
        "\t\tgather_subset:",
        "\t\t\t- '!hardware'",
        ""
      ]
    },
    "dellos6_config": {
      "prefix": "dellos6_config-3",
      "body": [
        "- dellos6_config:",
        "\t\tlines:",
        "\t\t\t- 10 permit ip 1.1.1.1 any log",
        "\t\t\t- 20 permit ip 2.2.2.2 any log",
        "\t\t\t- 30 permit ip 3.3.3.3 any log",
        "\t\t\t- 40 permit ip 4.4.4.4 any log",
        "\t\tparents:",
        "\t\t\t- ip access-list test",
        "\t\tbefore:",
        "\t\t\t- no ip access-list test",
        "\t\treplace: block",
        "\t\tprovider: '{{ cli }}'",
        ""
      ]
    },
    "dellos6_facts": {
      "prefix": "dellos6_facts-3",
      "body": [
        "- dellos6_facts:",
        "\t\tgather_subset:",
        "\t\t\t- '!interfaces'",
        ""
      ]
    },
    "dellos9_config": {
      "prefix": "dellos9_config-3",
      "body": [
        "- dellos9_config:",
        "\t\tlines:",
        "\t\t\t- 10 permit ip host 1.1.1.1 any log",
        "\t\t\t- 20 permit ip host 2.2.2.2 any log",
        "\t\t\t- 30 permit ip host 3.3.3.3 any log",
        "\t\t\t- 40 permit ip host 4.4.4.4 any log",
        "\t\tparents:",
        "\t\t\t- ip access-list extended test",
        "\t\tbefore:",
        "\t\t\t- no ip access-list extended test",
        "\t\treplace: block",
        "\t\tprovider: '{{ cli }}'",
        ""
      ]
    },
    "dellos9_facts": {
      "prefix": "dellos9_facts-3",
      "body": [
        "- dellos9_facts:",
        "\t\tgather_subset:",
        "\t\t\t- '!hardware'",
        ""
      ]
    },
    "digital_ocean_block_storage": {
      "prefix": "digital_ocean_block_storage-4",
      "body": [
        "- digital_ocean_block_storage:",
        "\t\tstate: absent",
        "\t\tcommand: attach",
        "\t\tapi_token: <TOKEN>",
        "\t\tvolume_name: nyc1-block-storage",
        "\t\tregion: nyc1",
        "\t\tdroplet_id: <ID>",
        ""
      ]
    },
    "digital_ocean_floating_ip": {
      "prefix": "digital_ocean_floating_ip-3",
      "description": "Delete a Floating IP with ip 1.2.3.4",
      "body": [
        "- name: Delete a Floating IP with ip 1.2.3.4",
        "\tdigital_ocean_floating_ip:",
        "\t\tstate: absent",
        "\t\tip: 1.2.3.4",
        ""
      ]
    },
    "digital_ocean_sshkey": {
      "prefix": "digital_ocean_sshkey-2",
      "description": "Delete ssh key",
      "body": [
        "- name: Delete ssh key",
        "\tdigital_ocean_sshkey:",
        "\t\toauth_token: '{{ oauth_token }}'",
        "\t\tstate: absent",
        "\t\tfingerprint: '3b:16:bf:e4:8b:00:8b:b8:59:8c:a9:d3:f0:19:45:fa'",
        ""
      ]
    },
    "digital_ocean_tag": {
      "prefix": "digital_ocean_tag-4",
      "description": "remove a tag",
      "body": [
        "- name: remove a tag",
        "\tdigital_ocean_tag:",
        "\t\tname: dbserver",
        "\t\tstate: absent",
        ""
      ]
    },
    "dimensiondata_network": {
      "prefix": "dimensiondata_network-3",
      "body": [
        "- dimensiondata_network:",
        "\t\tregion: na",
        "\t\tlocation: NA1",
        "\t\tname: mynet",
        "\t\tstate: absent",
        ""
      ]
    },
    "django_manage": {
      "prefix": "django_manage-5",
      "body": [
        "- django_manage:",
        "\t\tcommand: createsuperuser --noinput --username=admin --email=admin@example.com",
        "\t\tapp_path: '{{ django_dir }}'",
        ""
      ]
    },
    "dladm_etherstub": {
      "prefix": "dladm_etherstub-2",
      "body": [
        "- dladm_etherstub:",
        "\t\tname: stub0",
        "\t\tstate: absent",
        ""
      ]
    },
    "dladm_vnic": {
      "prefix": "dladm_vnic-3",
      "body": [
        "- dladm_vnic:",
        "\t\tname: vnic0",
        "\t\tlink: bnx0",
        "\t\tstate: absent",
        ""
      ]
    },
    "dnf": {
      "prefix": "dnf-9",
      "description": "Uninstall httpd but keep its dependencies",
      "body": [
        "- name: Uninstall httpd but keep its dependencies",
        "\tdnf:",
        "\t\tname: httpd",
        "\t\tstate: absent",
        "\t\tautoremove: 'no'",
        ""
      ]
    },
    "dnsimple": {
      "prefix": "dnsimple-8",
      "body": [
        "- dnsimple:",
        "\t\tdomain: my.com",
        "\t\trecord: ''",
        "\t\ttype: CNAME",
        "\t\tvalue: example.com",
        "\t\tstate: absent",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "dnsmadeeasy": {
      "prefix": "dnsmadeeasy-12",
      "body": [
        "- dnsmadeeasy:",
        "\t\taccount_key: key",
        "\t\taccount_secret: secret",
        "\t\tdomain: my.com",
        "\t\tstate: present",
        "\t\trecord_name: test",
        "\t\trecord_type: A",
        "\t\trecord_value: 127.0.0.1",
        "\t\tmonitor: 'no'",
        ""
      ]
    },
    "docker_container": {
      "prefix": "docker_container-15",
      "description": "Remove container from all networks",
      "body": [
        "- name: Remove container from all networks",
        "\tdocker_container:",
        "\t\tname: sleepy",
        "\t\tpurge_networks: 'yes'",
        ""
      ]
    },
    "docker_image": {
      "prefix": "docker_image-8",
      "description": "Build image and with buildargs",
      "body": [
        "- name: Build image and with buildargs",
        "\tdocker_image:",
        "\t\tpath: /path/to/build/dir",
        "\t\tname: myimage",
        "\t\tbuildargs:",
        "\t\t\tlog_volume: /var/log/myapp",
        "\t\t\tlisten_port: 8080",
        ""
      ]
    },
    "docker_image_facts": {
      "prefix": "docker_image_facts-2",
      "description": "Inspect multiple images",
      "body": [
        "- name: Inspect multiple images",
        "\tdocker_image_facts:",
        "\t\tname:",
        "\t\t\t- pacur/centos-7",
        "\t\t\t- sinatra",
        ""
      ]
    },
    "docker_login": {
      "prefix": "docker_login-4",
      "description": "Log out of DockerHub",
      "body": [
        "- name: Log out of DockerHub",
        "\tdocker_login:",
        "\t\tstate: absent",
        "\t\temail: docker@docker.com",
        ""
      ]
    },
    "docker_network": {
      "prefix": "docker_network-6",
      "description": "Delete a network, disconnecting all containers",
      "body": [
        "- name: 'Delete a network, disconnecting all containers'",
        "\tdocker_network:",
        "\t\tname: network_one",
        "\t\tstate: absent",
        "\t\tforce: 'yes'",
        ""
      ]
    },
    "docker_secret": {
      "prefix": "docker_secret-7",
      "description": "Remove secret foo",
      "body": [
        "- name: Remove secret foo",
        "\tdocker_secret:",
        "\t\tname: foo",
        "\t\tstate: absent",
        ""
      ]
    },
    "docker_volume": {
      "prefix": "docker_volume-3",
      "description": "Create a volume with options",
      "body": [
        "- name: Create a volume with options",
        "\tdocker_volume:",
        "\t\tname: volume_two",
        "\t\tdriver_options:",
        "\t\t\ttype: btrfs",
        "\t\t\tdevice: /dev/sda2",
        ""
      ]
    },
    "dpkg_selections": {
      "prefix": "dpkg_selections-1",
      "body": [
        "- dpkg_selections:",
        "\t\tname: python",
        "\t\tselection: hold",
        ""
      ]
    },
    "dynamodb_table": {
      "prefix": "dynamodb_table-4",
      "body": [
        "- dynamodb_table:",
        "\t\tname: my-table",
        "\t\tregion: us-east-1",
        "\t\tstate: absent",
        ""
      ]
    },
    "dynamodb_ttl": {
      "prefix": "dynamodb_ttl-2",
      "description": "disable TTL on my cowfacts table",
      "body": [
        "- name: disable TTL on my cowfacts table",
        "\tdynamodb_ttl:",
        "\t\tstate: disable",
        "\t\ttable_name: cowfacts",
        "\t\tattribute_name: cow_deleted_date",
        ""
      ]
    },
    "easy_install": {
      "prefix": "easy_install-2",
      "body": [
        "- easy_install:",
        "\t\tname: bottle",
        "\t\tvirtualenv: /webapps/myapp/venv",
        ""
      ]
    },
    "ec2_ami": {
      "prefix": "ec2_ami-9",
      "body": [
        "- ec2_ami:",
        "\t\taws_access_key: xxxxxxxxxxxxxxxxxxxxxxx",
        "\t\taws_secret_key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "\t\tregion: xxxxxx",
        "\t\timage_id: '{{ instance.image_id }}'",
        "\t\tstate: present",
        "\t\tlaunch_permissions:",
        "\t\t\tuser_ids:",
        "\t\t\t\t- '123456789012'",
        ""
      ]
    },
    "ec2_ami_copy": {
      "prefix": "ec2_ami_copy-6",
      "body": [
        "- ec2_ami_copy:",
        "\t\tsource_region: us-east-1",
        "\t\tregion: eu-west-1",
        "\t\tsource_image_id: ami-xxxxxxx",
        "\t\tencrypted: 'yes'",
        "\t\tkms_key_id: >-",
        "\t\t\tarn:aws:kms:us-east-1:XXXXXXXXXXXX:key/746de6ea-50a4-4bcb-8fbc-e3b29f2d367b",
        ""
      ]
    },
    "ec2_ami_search": {
      "prefix": "ec2_ami_search-1",
      "description": "Launch an Ubuntu 12.04 (Precise Pangolin) EC2 instance",
      "body": [
        "- name: Launch an Ubuntu 12.04 (Precise Pangolin) EC2 instance",
        "\thosts: 127.0.0.1",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Get the Ubuntu precise AMI",
        "\t\t\tec2_ami_search:",
        "\t\t\t\tdistro: ubuntu",
        "\t\t\t\trelease: precise",
        "\t\t\t\tregion: us-west-1",
        "\t\t\t\tstore: instance-store",
        "\t\t\tregister: ubuntu_image",
        ""
      ]
    },
    "ec2_customer_gateway": {
      "prefix": "ec2_customer_gateway-2",
      "body": [
        "- ec2_customer_gateway:",
        "\t\tip_address: 1.2.3.4",
        "\t\tname: IndianapolisOffice",
        "\t\tstate: absent",
        "\t\tregion: us-east-1",
        "\tregister: cgw",
        ""
      ]
    },
    "ec2_group": {
      "prefix": "ec2_group-3",
      "description": "Delete group by its id",
      "body": [
        "- name: Delete group by its id",
        "\tec2_group:",
        "\t\tgroup_id: sg-33b4ee5b",
        "\t\tstate: absent",
        ""
      ]
    },
    "ec2_metadata_facts": {
      "prefix": "ec2_metadata_facts-2",
      "body": [
        "- debug:",
        "\t\tmsg: This instance is a t1.micro",
        "\twhen: ansible_ec2_instance_type == \"t1.micro\"",
        ""
      ]
    },
    "ec2_metric_alarm": {
      "prefix": "ec2_metric_alarm-1",
      "description": "",
      "body": [
        "- name: create alarm",
        "    ec2_metric_alarm:",
        "      state: present",
        "      region: ap-southeast-2",
        "      name: \"cpu-low\"",
        "      metric: \"CPUUtilization\"",
        "      namespace: \"AWS/EC2\"",
        "      statistic: Average",
        "      comparison: \"<=\"",
        "      threshold: 5.0",
        "      period: 300",
        "      evaluation_periods: 3",
        "      unit: \"Percent\"",
        "      description: \"This will alarm when a bamboo slave's cpu usage average is lower than 5% for 15 minutes \"",
        "      dimensions: {'InstanceId':'i-XXX'}",
        "      alarm_actions: [\"action1\",\"action2\"]"
      ]
    },
    "ec2_scaling_policy": {
      "prefix": "ec2_scaling_policy-1",
      "body": [
        "- ec2_scaling_policy:",
        "\t\tstate: present",
        "\t\tregion: US-XXX",
        "\t\tname: scaledown-policy",
        "\t\tadjustment_type: ChangeInCapacity",
        "\t\tasg_name: slave-pool",
        "\t\tscaling_adjustment: -1",
        "\t\tmin_adjustment_step: 1",
        "\t\tcooldown: 300",
        ""
      ]
    },
    "ec2_snapshot": {
      "prefix": "ec2_snapshot-5",
      "body": [
        "- local_action:",
        "\t\tmodule: ec2_snapshot",
        "\t\tvolume_id: vol-abcdef12",
        "\t\tlast_snapshot_min_age: 60",
        ""
      ]
    },
    "ec2_snapshot_copy": {
      "prefix": "ec2_snapshot_copy-5",
      "body": [
        "- ec2_snapshot_copy:",
        "\t\tsource_region: eu-central-1",
        "\t\tregion: eu-west-1",
        "\t\tsource_snapshot_id: snap-xxxxxxx",
        "\t\tencrypted: 'yes'",
        "\t\tkms_key_id: >-",
        "\t\t\tarn:aws:kms:eu-central-1:XXXXXXXXXXXX:key/746de6ea-50a4-4bcb-8fbc-e3b29f2d367b",
        ""
      ]
    },
    "ec2_tag": {
      "prefix": "ec2_tag-7",
      "description": "List tags, such as Name and env",
      "body": [
        "- name: 'List tags, such as Name and env'",
        "\tdebug:",
        "\t\tmsg: '{{ ec2_tags.tags.Name }} {{ ec2_tags.tags.env }}'",
        ""
      ]
    },
    "ec2_vol": {
      "prefix": "ec2_vol-4",
      "body": [
        "- ec2:",
        "\t\tkeypair: '{{ keypair }}'",
        "\t\timage: '{{ image }}'",
        "\t\twait: 'yes'",
        "\t\tcount: 3",
        "\tregister: ec2",
        ""
      ]
    },
    "ec2_vpc_dhcp_option": {
      "prefix": "ec2_vpc_dhcp_option-1",
      "body": [
        "- ec2_vpc_dhcp_option:",
        "\t\tdomain_name: foo.example.com",
        "\t\tregion: us-east-1",
        "\t\tdns_servers:",
        "\t\t\t- 10.0.0.1",
        "\t\t\t- 10.0.1.1",
        "\t\tntp_servers:",
        "\t\t\t- 10.0.0.2",
        "\t\t\t- 10.0.1.2",
        "\t\tnetbios_name_servers:",
        "\t\t\t- 10.0.0.1",
        "\t\t\t- 10.0.1.1",
        "\t\tnetbios_node_type: 2",
        "\t\tvpc_id: vpc-123456",
        "\t\tdelete_old: true",
        "\t\tinherit_existing: false",
        ""
      ]
    },
    "ec2_vpc_endpoint_facts": {
      "prefix": "ec2_vpc_endpoint_facts-4",
      "description": "Get details on specific endpoint",
      "body": [
        "- name: Get details on specific endpoint",
        "\tec2_vpc_endpoint_facts:",
        "\t\tquery: endpoints",
        "\t\tregion: ap-southeast-2",
        "\t\tvpc_endpoint_ids:",
        "\t\t\t- vpce-12345678",
        "\tregister: endpoint_details",
        ""
      ]
    },
    "ec2_vpc_nacl": {
      "prefix": "ec2_vpc_nacl-5",
      "description": "Delete nacl by its id",
      "body": [
        "- name: Delete nacl by its id",
        "\tec2_vpc_nacl:",
        "\t\tnacl_id: acl-33b4ee5b",
        "\t\tstate: absent",
        ""
      ]
    },
    "ec2_vpc_nat_gateway_facts": {
      "prefix": "ec2_vpc_nat_gateway_facts-5",
      "description": "Get nat gateways with specific filter",
      "body": [
        "- name: Get nat gateways with specific filter",
        "\tec2_vpc_nat_gateway_facts:",
        "\t\tregion: ap-southeast-2",
        "\t\tfilters:",
        "\t\t\tsubnet-id: subnet-12345678",
        "\t\t\tstate:",
        "\t\t\t\t- available",
        "\tregister: existing_nat_gateways",
        ""
      ]
    },
    "ec2_vpc_peer": {
      "prefix": "ec2_vpc_peer-4",
      "description": "delete a local VPC peering Connection",
      "body": [
        "- name: delete a local VPC peering Connection",
        "\tec2_vpc_peer:",
        "\t\tregion: ap-southeast-2",
        "\t\tpeering_id: '{{ vpc_peer.peering_id }}'",
        "\t\tstate: absent",
        "\tregister: vpc_peer",
        ""
      ]
    },
    "ec2_vpc_peering_facts": {
      "prefix": "ec2_vpc_peering_facts-4",
      "description": "Get all vpc peers with specific filters",
      "body": [
        "- name: Get all vpc peers with specific filters",
        "\tec2_vpc_peering_facts:",
        "\t\tregion: ap-southeast-2",
        "\t\tfilters:",
        "\t\t\tstatus-code:",
        "\t\t\t\t- pending-acceptance",
        "\tregister: pending_vpc_peers",
        ""
      ]
    },
    "ec2_vpc_vgw": {
      "prefix": "ec2_vpc_vgw-4",
      "description": "Remove a new vgw using the vpn_gateway_id",
      "body": [
        "- name: Remove a new vgw using the vpn_gateway_id",
        "\tec2_vpc_vgw:",
        "\t\tstate: absent",
        "\t\tregion: ap-southeast-2",
        "\t\tprofile: personal",
        "\t\tvpn_gateway_id: vgw-3a9aa123",
        "\tregister: deleted_vgw",
        ""
      ]
    },
    "ecs_ecr": {
      "prefix": "ecs_ecr-6",
      "description": "delete-policy",
      "body": [
        "- name: delete-policy",
        "\tecs_ecr:",
        "\t\tname: needs-no-policy",
        "\t\tdelete_policy: 'yes'",
        ""
      ]
    },
    "ecs_service": {
      "prefix": "ecs_service-4",
      "body": [
        "- ecs_service:",
        "\t\tstate: present",
        "\t\tname: test-service",
        "\t\tcluster: test-cluster",
        "\t\ttask_definition: test-task-definition",
        "\t\tdesired_count: 3",
        "\t\tdeployment_configuration:",
        "\t\t\tminimum_healthy_percent: 75",
        "\t\t\tmaximum_percent: 150",
        "\t\tplacement_constraints:",
        "\t\t\t- type: memberOf",
        "\t\t\t\texpression: 'attribute:flavor==test'",
        "\t\tplacement_strategy:",
        "\t\t\t- type: binpack",
        "\t\t\t\tfield: memory",
        ""
      ]
    },
    "ecs_task": {
      "prefix": "ecs_task-1",
      "description": "Run task",
      "body": [
        "- name: Run task",
        "\tecs_task:",
        "\t\toperation: run",
        "\t\tcluster: console-sample-app-static-cluster",
        "\t\ttask_definition: console-sample-app-static-taskdef",
        "\t\tcount: 1",
        "\t\tstarted_by: ansible_user",
        "\tregister: task_output",
        ""
      ]
    },
    "ecs_taskdefinition": {
      "prefix": "ecs_taskdefinition-1",
      "description": "Create task definition",
      "body": [
        "- name: Create task definition",
        "\tecs_taskdefinition:",
        "\t\tcontainers:",
        "\t\t\t- name: simple-app",
        "\t\t\t\tcpu: 10",
        "\t\t\t\tessential: true",
        "\t\t\t\timage: 'httpd:2.4'",
        "\t\t\t\tmemory: 300",
        "\t\t\t\tmountPoints:",
        "\t\t\t\t\t- containerPath: /usr/local/apache2/htdocs",
        "\t\t\t\t\t\tsourceVolume: my-vol",
        "\t\t\t\tportMappings:",
        "\t\t\t\t\t- containerPort: 80",
        "\t\t\t\t\t\thostPort: 80",
        "\t\t\t- name: busybox",
        "\t\t\t\tcommand:",
        "\t\t\t\t\t- >",
        "\t\t\t\t\t\t/bin/sh -c \"while true; do echo '<html><head><title>Amazon ECS",
        "\t\t\t\t\t\tSample App</title></head><body><div><h1>Amazon ECS Sample",
        "\t\t\t\t\t\tApp</h1><h2>Congratulations! </h2><p>Your application is now running",
        "\t\t\t\t\t\ton a container in Amazon ECS.</p>' > top; /bin/date > date ; echo",
        "\t\t\t\t\t\t'</div></body></html>' > bottom; cat top date bottom >",
        "\t\t\t\t\t\t/usr/local/apache2/htdocs/index.html ; sleep 1; done\"",
        "\t\t\t\tcpu: 10",
        "\t\t\t\tentryPoint:",
        "\t\t\t\t\t- sh",
        "\t\t\t\t\t- '-c'",
        "\t\t\t\tessential: false",
        "\t\t\t\timage: busybox",
        "\t\t\t\tmemory: 200",
        "\t\t\t\tvolumesFrom:",
        "\t\t\t\t\t- sourceContainer: simple-app",
        "\t\tvolumes:",
        "\t\t\t- name: my-vol",
        "\t\tfamily: test-cluster-taskdef",
        "\t\tstate: present",
        "\tregister: task_output",
        ""
      ]
    },
    "efs": {
      "prefix": "efs-3",
      "body": [
        "- efs:",
        "\t\tstate: absent",
        "\t\tname: myTestEFS",
        ""
      ]
    },
    "efs_facts": {
      "prefix": "efs_facts-4",
      "body": [
        "- efs_facts:",
        "\t\ttags:",
        "\t\t\tname: myTestNameTag",
        "\t\ttargets:",
        "\t\t\t- subnet-1a2b3c4d",
        "\t\t\t- sg-4d3c2b1a",
        ""
      ]
    },
    "elasticache_parameter_group": {
      "prefix": "elasticache_parameter_group-1",
      "description": "# Note: None of these examples set aws_access_key, aws_secret_key, or region.# It is assumed that their matching environment variables are set.",
      "body": [
        "null",
        ""
      ]
    },
    "elasticache_snapshot": {
      "prefix": "elasticache_snapshot-1",
      "description": "# Note: None of these examples set aws_access_key, aws_secret_key, or region.# It is assumed that their matching environment variables are set.",
      "body": [
        "null",
        ""
      ]
    },
    "elasticache_subnet_group": {
      "prefix": "elasticache_subnet_group-2",
      "body": [
        "- elasticache_subnet_group:",
        "\t\tstate: absent",
        "\t\tname: norwegian-blue",
        ""
      ]
    },
    "elasticsearch_plugin": {
      "prefix": "elasticsearch_plugin-4",
      "body": [
        "- elasticsearch_plugin:",
        "\t\tname: analysis-icu",
        "\t\tstate: present",
        ""
      ]
    },
    "eos_banner": {
      "prefix": "eos_banner-2",
      "description": "remove the motd banner",
      "body": [
        "- name: remove the motd banner",
        "\teos_banner:",
        "\t\tbanner: motd",
        "\t\tstate: absent",
        ""
      ]
    },
    "eos_command": {
      "prefix": "eos_command-5",
      "description": "run commands and specify the output format",
      "body": [
        "- name: run commands and specify the output format",
        "\teos_command:",
        "\t\tcommands:",
        "\t\t\t- command: show version",
        "\t\t\t\toutput: json",
        ""
      ]
    },
    "eos_config": {
      "prefix": "eos_config-5",
      "description": "diff the running config against a master config",
      "body": [
        "- name: diff the running config against a master config",
        "\teos_config:",
        "\t\tdiff_against: intended",
        "\t\tintended_config: '{{ lookup(''file'', ''master.cfg'') }}'",
        ""
      ]
    },
    "eos_eapi": {
      "prefix": "eos_eapi-3",
      "description": "Shutdown eAPI access",
      "body": [
        "- name: Shutdown eAPI access",
        "\teos_eapi:",
        "\t\tstate: stopped",
        ""
      ]
    },
    "eos_facts": {
      "prefix": "eos_facts-3",
      "body": [
        "- eos_facts:",
        "\t\tgather_subset:",
        "\t\t\t- '!hardware'",
        ""
      ]
    },
    "eos_logging": {
      "prefix": "eos_logging-6",
      "description": "Configure logging using aggregate",
      "body": [
        "- name: Configure logging using aggregate",
        "\teos_logging:",
        "\t\taggregate:",
        "\t\t\t- dest: console",
        "\t\t\t\tlevel: warnings",
        "\t\t\t- dest: buffered",
        "\t\t\t\tsize: 480000",
        "\t\tstate: present",
        ""
      ]
    },
    "eos_system": {
      "prefix": "eos_system-6",
      "description": "configure name servers with VRF support",
      "body": [
        "- name: configure name servers with VRF support",
        "\teos_system:",
        "\t\tname_servers:",
        "\t\t\t- server: 8.8.8.8",
        "\t\t\t\tvrf: mgmt",
        "\t\t\t- server: 8.8.4.4",
        "\t\t\t\tvrf: mgmt",
        ""
      ]
    },
    "eos_user": {
      "prefix": "eos_user-4",
      "description": "Change Password for User netop",
      "body": [
        "- name: Change Password for User netop",
        "\teos_user:",
        "\t\tusername: netop",
        "\t\tconfigured_password: '{{ new_password }}'",
        "\t\tupdate_password: always",
        "\t\tstate: present",
        ""
      ]
    },
    "eos_vlan": {
      "prefix": "eos_vlan-5",
      "description": "Create aggregate of vlans",
      "body": [
        "- name: Create aggregate of vlans",
        "\teos_vlan:",
        "\t\taggregate:",
        "\t\t\t- vlan_id: 4000",
        "\t\t\t- vlan_id: 4001",
        "\t\t\t\tname: vlan-4001",
        ""
      ]
    },
    "eos_vrf": {
      "prefix": "eos_vrf-4",
      "description": "Delete aggregate of VRFs",
      "body": [
        "- name: Delete aggregate of VRFs",
        "\teos_vrf:",
        "\t\taggregate:",
        "\t\t\t- name: test2",
        "\t\t\t- name: test3",
        "\t\t\t- name: test4",
        "\t\t\t- name: test5",
        "\t\tstate: absent",
        ""
      ]
    },
    "execute_lambda": {
      "prefix": "execute_lambda-4",
      "body": [
        "- execute_lambda:",
        "\t\tname: test-function",
        "\t\tversion_qualifier: PRODUCTION",
        ""
      ]
    },
    "exo_dns_domain": {
      "prefix": "exo_dns_domain-2",
      "description": "Remove a domain",
      "body": [
        "- name: Remove a domain",
        "\tlocal_action:",
        "\t\tmodule: exo_dns_domain",
        "\t\tname: example.com",
        "\t\tstate: absent",
        ""
      ]
    },
    "exo_dns_record": {
      "prefix": "exo_dns_record-7",
      "description": "Remove a record",
      "body": [
        "- name: Remove a record",
        "\tlocal_action:",
        "\t\tmodule: exo_dns_record",
        "\t\tname: www",
        "\t\tdomain: example.com",
        "\t\tstate: absent",
        ""
      ]
    },
    "expect": {
      "prefix": "expect-2",
      "description": "Generic question with multiple different responses",
      "body": [
        "- name: Generic question with multiple different responses",
        "\texpect:",
        "\t\tcommand: /path/to/custom/command",
        "\t\tresponses:",
        "\t\t\tQuestion:",
        "\t\t\t\t- response1",
        "\t\t\t\t- response2",
        "\t\t\t\t- response3",
        ""
      ]
    },
    "fail": {
      "prefix": "fail-1",
      "body": [
        "- fail:",
        "\t\tmsg: The system may not be provisioned according to the CMDB status.",
        "\twhen: cmdb_status != \"to-be-staged\"",
        ""
      ]
    },
    "fetch": {
      "prefix": "fetch-4",
      "body": [
        "- fetch:",
        "\t\tsrc: /tmp/uniquefile",
        "\t\tdest: 'special/prefix-{{ inventory_hostname }}'",
        "\t\tflat: 'yes'",
        ""
      ]
    },
    "file": {
      "prefix": "file-1",
      "body": [
        "- file:",
        "\t\tpath: /etc/foo.conf",
        "\t\towner: foo",
        "\t\tgroup: foo",
        "\t\tmode: 420",
        ""
      ]
    },
    "filesystem": {
      "prefix": "filesystem-2",
      "body": [
        "- filesystem:",
        "\t\tfstype: ext4",
        "\t\tdev: /dev/sdb1",
        "\t\topts: '-cc'",
        ""
      ]
    },
    "find": {
      "prefix": "find-2",
      "description": "Recursively find /tmp files older than 4 weeks and equal or greater than 1 megabyte",
      "body": [
        "- name: >-",
        "\t\tRecursively find /tmp files older than 4 weeks and equal or greater than 1",
        "\t\tmegabyte",
        ""
      ]
    },
    "firewalld": {
      "prefix": "firewalld-8",
      "body": [
        "- firewalld:",
        "\t\tmasquerade: 'yes'",
        "\t\tstate: enabled",
        "\t\tpermanent: true",
        "\t\tzone: dmz",
        ""
      ]
    },
    "flowadm": {
      "prefix": "flowadm-3",
      "body": [
        "- flowadm:",
        "\t\tlink: bge0",
        "\t\tdsfield: '0x2e:0xfc'",
        "\t\tmaxbw: 500M",
        "\t\tpriority: high",
        "\t\tflow: efphb-flow",
        "\t\tstate: present",
        ""
      ]
    },
    "flowdock": {
      "prefix": "flowdock-2",
      "body": [
        "- flowdock:",
        "\t\ttype: chat",
        "\t\ttoken: AAAAAA",
        "\t\texternal_user_name: testuser",
        "\t\tmsg: test from ansible",
        "\t\ttags: 'tag1,tag2,tag3'",
        ""
      ]
    },
    "foreman": {
      "prefix": "foreman-1",
      "description": "Create CI Organization",
      "body": [
        "- name: Create CI Organization",
        "\tlocal_action:",
        "\t\tmodule: foreman",
        "\t\tusername: admin",
        "\t\tpassword: admin",
        "\t\tserver_url: 'https://fakeserver.com'",
        "\t\tentity: organization",
        "\t\tparams:",
        "\t\t\tname: My Cool New Organization",
        ""
      ]
    },
    "fortios_address": {
      "prefix": "fortios_address-3",
      "description": "Register google DNS",
      "body": [
        "- name: Register google DNS",
        "\tfortios_address:",
        "\t\thost: 192.168.0.254",
        "\t\tusername: admin",
        "\t\tpassword: p4ssw0rd",
        "\t\tstate: present",
        "\t\tname: google_dns",
        "\t\ttype: ipmask",
        "\t\tvalue: 8.8.8.8",
        ""
      ]
    },
    "fortios_config": {
      "prefix": "fortios_config-3",
      "description": "Update configuration from file",
      "body": [
        "- name: Update configuration from file",
        "\tfortios_config:",
        "\t\thost: 192.168.0.254",
        "\t\tusername: admin",
        "\t\tpassword: password",
        "\t\tsrc: new_configuration.conf.j2",
        ""
      ]
    },
    "fortios_ipv4_policy": {
      "prefix": "fortios_ipv4_policy-2",
      "description": "Public Web",
      "body": [
        "- name: Public Web",
        "\tfortios_ipv4_policy:",
        "\t\thost: 192.168.0.254",
        "\t\tusername: admin",
        "\t\tpassword: password",
        "\t\tid: 42",
        "\t\tsrc_addr: all",
        "\t\tdst_addr: webservers",
        "\t\tservices:",
        "\t\t\t- http",
        "\t\t\t- https",
        "\t\tstate: present",
        "\t\tpolicy_action: accept",
        ""
      ]
    },
    "gc_storage": {
      "prefix": "gc_storage-9",
      "description": "Create a bucket located in the eu",
      "body": [
        "- name: Create a bucket located in the eu",
        "\tgc_storage:",
        "\t\tbucket: mybucket",
        "\t\tregion: europe-west3",
        "\t\tmode: create",
        ""
      ]
    },
    "gcdns_record": {
      "prefix": "gcdns_record-13",
      "body": [
        "- gcdns_record:",
        "\t\trecord: example.com",
        "\t\tzone_id: example-com",
        "\t\ttype: TXT",
        "\t\trecord_data:",
        "\t\t\t- '\"v=spf1 include:_spf.google.com -all\"'",
        "\t\t\t- '\"hello \" \"world\"'",
        ""
      ]
    },
    "gcdns_zone": {
      "prefix": "gcdns_zone-3",
      "description": "Creating a zone with a description",
      "body": [
        "- name: Creating a zone with a description",
        "\tgcdns_zone: zone=example.com description=\"This is an awesome zone\"",
        ""
      ]
    },
    "gce_img": {
      "prefix": "gce_img-4",
      "body": [
        "- gce_img:",
        "\t\tname: test-image",
        "\t\tstate: absent",
        ""
      ]
    },
    "gce_instance_template": {
      "prefix": "gce_instance_template-3",
      "description": "Compute Engine Instance Template Examples",
      "body": [
        "- name: Compute Engine Instance Template Examples",
        "\thosts: localhost",
        "\tvars:",
        "\t\tservice_account_email: your-sa@your-project-name.iam.gserviceaccount.com",
        "\t\tcredentials_file: /path/to/your-key.json",
        "\t\tproject_id: your-project-name",
        "\ttasks:",
        "\t\t- name: create instance template",
        "\t\t\tgce_instance_template:",
        "\t\t\t\tname: foo",
        "\t\t\t\tsize: n1-standard-1",
        "\t\t\t\tstate: present",
        "\t\t\t\tproject_id: '{{ project_id }}'",
        "\t\t\t\tcredentials_file: '{{ credentials_file }}'",
        "\t\t\t\tservice_account_email: '{{ service_account_email }}'",
        "\t\t\t\tdisks_gce_struct:",
        "\t\t\t\t\t- device_name: /dev/sda",
        "\t\t\t\t\t\tboot: true",
        "\t\t\t\t\t\tautoDelete: true",
        "\t\t\t\t\t\tinitializeParams:",
        "\t\t\t\t\t\t\tdiskSizeGb: 30",
        "\t\t\t\t\t\t\tdiskType: pd-ssd",
        "\t\t\t\t\t\t\tsourceImage: projects/debian-cloud/global/images/family/debian-8",
        ""
      ]
    },
    "gce_labels": {
      "prefix": "gce_labels-1",
      "description": "Add labels on an existing instance (using resource_url)",
      "body": [
        "- name: Add labels on an existing instance (using resource_url)",
        "\tgce_labels:",
        "\t\tservice_account_email: '{{ service_account_email }}'",
        "\t\tcredentials_file: '{{ credentials_file }}'",
        "\t\tproject_id: '{{ project_id }}'",
        "\t\tlabels:",
        "\t\t\twebserver-frontend: homepage",
        "\t\t\tenvironment: test",
        "\t\t\texperiment-name: kennedy",
        "\t\tresource_url: >-",
        "\t\t\thttps://www.googleapis.com/compute/beta/projects/myproject/zones/us-central1-f/instances/example-instance",
        "\t\tstate: present",
        ""
      ]
    },
    "gce_lb": {
      "prefix": "gce_lb-1",
      "body": [
        "- local_action:",
        "\t\tmodule: gce_lb",
        "\t\tname: testlb",
        "\t\tregion: us-central1",
        "\t\tmembers:",
        "\t\t\t- us-central1-a/www-a",
        "\t\t\t- us-central1-b/www-b",
        "\t\thttphealthcheck_name: hc",
        "\t\thttphealthcheck_port: 80",
        "\t\thttphealthcheck_path: /up",
        ""
      ]
    },
    "gce_mig": {
      "prefix": "gce_mig-1",
      "description": "Managed Instance Group Example",
      "body": [
        "- name: Managed Instance Group Example",
        "\thosts: localhost",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: Create MIG",
        "\t\t\tgce_mig:",
        "\t\t\t\tname: ansible-mig-example",
        "\t\t\t\tzone: us-central1-c",
        "\t\t\t\tstate: present",
        "\t\t\t\tsize: 1",
        "\t\t\t\ttemplate: my-instance-template-1",
        "\t\t\t\tnamed_ports:",
        "\t\t\t\t\t- name: http",
        "\t\t\t\t\t\tport: 80",
        "\t\t\t\t\t- name: foobar",
        "\t\t\t\t\t\tport: 82",
        ""
      ]
    },
    "gce_net": {
      "prefix": "gce_net-6",
      "description": "Create Custom Subnetwork",
      "body": [
        "- name: Create Custom Subnetwork",
        "\tgce_net:",
        "\t\tname: privatenet",
        "\t\tmode: custom",
        "\t\tsubnet_name: subnet_example",
        "\t\tsubnet_region: us-central1",
        "\t\tipv4_range: 10.0.0.0/16",
        ""
      ]
    },
    "gce_pd": {
      "prefix": "gce_pd-1",
      "body": [
        "- local_action:",
        "\t\tmodule: gce_pd",
        "\t\tinstance_name: notlocalhost",
        "\t\tsize_gb: 5",
        "\t\tname: pd",
        ""
      ]
    },
    "gce_snapshot": {
      "prefix": "gce_snapshot-3",
      "description": "Create snapshots of specific disks",
      "body": [
        "- name: Create snapshots of specific disks",
        "\tgce_snapshot:",
        "\t\tinstance_name: example-instance",
        "\t\tsnapshot_name: example-snapshot",
        "\t\tstate: present",
        "\t\tdisks:",
        "\t\t\t- disk0",
        "\t\t\t- disk1",
        "\t\tservice_account_email: project_name@appspot.gserviceaccount.com",
        "\t\tcredentials_file: /path/to/credentials",
        "\t\tproject_id: project_name",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "gce_tag": {
      "prefix": "gce_tag-3",
      "body": [
        "- gce_tag:",
        "\t\tinstance_pattern: test-server-*",
        "\t\ttags: 'foo,bar'",
        "\t\tzone: us-central1-a",
        "\t\tstate: present",
        ""
      ]
    },
    "gconftool2": {
      "prefix": "gconftool2-1",
      "description": "Change the widget font to \"Serif 12\"",
      "body": [
        "- name: Change the widget font to \"Serif 12\"",
        "\tgconftool2:",
        "\t\tkey: /desktop/gnome/interface/font_name",
        "\t\tvalue_type: string",
        "\t\tvalue: Serif 12",
        ""
      ]
    },
    "gcp_backend_service": {
      "prefix": "gcp_backend_service-2",
      "description": "Create BES with extended backend parameters",
      "body": [
        "- name: Create BES with extended backend parameters",
        "\tgcp_backend_service:",
        "\t\tservice_account_email: '{{ service_account_email }}'",
        "\t\tcredentials_file: '{{ credentials_file }}'",
        "\t\tproject_id: '{{ project_id }}'",
        "\t\tbackend_service_name: '{{ bes }}'",
        "\t\tbackends:",
        "\t\t\t- instance_group: managed_instance_group_1",
        "\t\t\t\tmax_utilization: 0.6",
        "\t\t\t\tmax_rate: 10",
        "\t\t\t- instance_group: managed_instance_group_2",
        "\t\t\t\tmax_utilization: 0.5",
        "\t\t\t\tmax_rate: 4",
        "\t\thealthchecks:",
        "\t\t\t- name: healthcheck_name_for_backend_service",
        "\t\tport_name: myhttpport",
        "\t\tstate: present",
        "\t\ttimeout: 60",
        ""
      ]
    },
    "gcp_forwarding_rule": {
      "prefix": "gcp_forwarding_rule-2",
      "description": "Create Forwarding_Rule w/reserved static address",
      "body": [
        "- name: Create Forwarding_Rule w/reserved static address",
        "\tgcp_forwarding_rule:",
        "\t\tservice_account_email: '{{ service_account_email }}'",
        "\t\tcredentials_file: '{{ credentials_file }}'",
        "\t\tproject_id: '{{ project_id }}'",
        "\t\tforwarding_rule_name: my-forwarding_rule",
        "\t\tprotocol: TCP",
        "\t\tport_range: 80",
        "\t\taddress: my-reserved-static-address-name",
        "\t\tregion: global",
        "\t\ttarget: my-target-proxy",
        "\t\tstate: present",
        ""
      ]
    },
    "gcp_healthcheck": {
      "prefix": "gcp_healthcheck-1",
      "description": "Create Minimum HealthCheck",
      "body": [
        "- name: Create Minimum HealthCheck",
        "\tgcp_healthcheck:",
        "\t\tservice_account_email: '{{ service_account_email }}'",
        "\t\tcredentials_file: '{{ credentials_file }}'",
        "\t\tproject_id: '{{ project_id }}'",
        "\t\thealthcheck_name: my-healthcheck",
        "\t\thealthcheck_type: HTTP",
        "\t\tstate: present",
        ""
      ]
    },
    "gcp_target_proxy": {
      "prefix": "gcp_target_proxy-1",
      "description": "Create Minimum HTTP Target_Proxy",
      "body": [
        "- name: Create Minimum HTTP Target_Proxy",
        "\tgcp_target_proxy:",
        "\t\tservice_account_email: '{{ service_account_email }}'",
        "\t\tcredentials_file: '{{ credentials_file }}'",
        "\t\tproject_id: '{{ project_id }}'",
        "\t\ttarget_proxy_name: my-target_proxy",
        "\t\ttarget_proxy_type: HTTP",
        "\t\turl_map_name: my-url-map",
        "\t\tstate: present",
        ""
      ]
    },
    "gcp_url_map": {
      "prefix": "gcp_url_map-1",
      "description": "Create Minimal Url_Map",
      "body": [
        "- name: Create Minimal Url_Map",
        "\tgcp_url_map:",
        "\t\tservice_account_email: '{{ service_account_email }}'",
        "\t\tcredentials_file: '{{ credentials_file }}'",
        "\t\tproject_id: '{{ project_id }}'",
        "\t\turl_map_name: my-url_map",
        "\t\tdefault_service: my-backend-service",
        "\t\tstate: present",
        ""
      ]
    },
    "gem": {
      "prefix": "gem-3",
      "body": [
        "- gem:",
        "\t\tname: rake",
        "\t\tgem_source: /path/to/gems/rake-1.0.gem",
        "\t\tstate: present",
        ""
      ]
    },
    "get_url": {
      "prefix": "get_url-6",
      "description": "Download file from a file path",
      "body": [
        "- name: Download file from a file path",
        "\tget_url:",
        "\t\turl: 'file:///tmp/afile.txt'",
        "\t\tdest: /tmp/afilecopy.txt",
        ""
      ]
    },
    "getent": {
      "prefix": "getent-1",
      "body": [
        "- getent:",
        "\t\tdatabase: passwd",
        "\t\tkey: root",
        ""
      ]
    },
    "git": {
      "prefix": "git-6",
      "body": [
        "- git:",
        "\t\trepo: 'https://github.com/ansible/ansible-examples.git'",
        "\t\tdest: /src/ansible-examples",
        "\t\tarchive: /tmp/ansible-examples.zip",
        ""
      ]
    },
    "git_config": {
      "prefix": "git_config-12",
      "body": [
        "- git_config:",
        "\t\tlist_all: 'yes'",
        "\t\trepo: /path/to/repo.git",
        ""
      ]
    },
    "github_deploy_key": {
      "prefix": "github_deploy_key-5",
      "body": [
        "- github_deploy_key:",
        "\t\towner: johndoe",
        "\t\trepo: example",
        "\t\tname: new-deploy-key-2",
        "\t\tkey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDAwXxn7kIMNWzcDfou...",
        "\t\tusername: johndoe",
        "\t\tpassword: supersecretpassword",
        "\t\totp: 123456",
        ""
      ]
    },
    "github_hooks": {
      "prefix": "github_hooks-2",
      "body": [
        "- github_hooks:",
        "\t\taction: cleanall",
        "\t\tuser: '{{ gituser }}'",
        "\t\toauthkey: '{{ oauthkey }}'",
        "\t\trepo: '{{ repo }}'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "github_issue": {
      "prefix": "github_issue-2",
      "description": "Take action depending upon issue status",
      "body": [
        "- name: Take action depending upon issue status",
        "\tdebug:",
        "\t\tmsg: Do something when issue 23642 is open",
        "\twhen: r.issue_status == 'open'",
        ""
      ]
    },
    "github_key": {
      "prefix": "github_key-2",
      "description": "Authorize key with GitHub",
      "body": [
        "- name: Authorize key with GitHub",
        "\tlocal_action:",
        "\t\tmodule: github_key",
        "\t\tname: Access Key for Some Machine",
        "\t\ttoken: '{{ github_access_token }}'",
        "\t\tpubkey: '{{ ssh_pub_key.stdout }}'",
        ""
      ]
    },
    "github_release": {
      "prefix": "github_release-3",
      "description": "Create a new release",
      "body": [
        "- name: Create a new release",
        "\tgithub:",
        "\t\ttoken: tokenabc1234567890",
        "\t\tuser: testuser",
        "\t\trepo: testrepo",
        "\t\taction: create_release",
        "\t\ttag: test",
        "\t\ttarget: master",
        "\t\tname: My Release",
        "\t\tbody: Some description",
        ""
      ]
    },
    "gitlab_group": {
      "prefix": "gitlab_group-2",
      "description": "Create Gitlab Group",
      "body": [
        "- name: Create Gitlab Group",
        "\tgitlab_group:",
        "\t\tserver_url: 'https://gitlab.example.com'",
        "\t\tvalidate_certs: true",
        "\t\tlogin_user: dj-wasabi",
        "\t\tlogin_password: MySecretPassword",
        "\t\tname: my_first_group",
        "\t\tpath: my_first_group",
        "\t\tstate: present",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "gitlab_project": {
      "prefix": "gitlab_project-2",
      "description": "Create Gitlab Project in group Ansible",
      "body": [
        "- name: Create Gitlab Project in group Ansible",
        "\tgitlab_project:",
        "\t\tserver_url: 'https://gitlab.example.com'",
        "\t\tvalidate_certs: true",
        "\t\tlogin_user: dj-wasabi",
        "\t\tlogin_password: MySecretPassword",
        "\t\tname: my_first_project",
        "\t\tgroup: ansible",
        "\t\tissues_enabled: false",
        "\t\twiki_enabled: true",
        "\t\tsnippets_enabled: true",
        "\t\timport_url: 'http://git.example.com/example/lab.git'",
        "\t\tstate: present",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "gitlab_user": {
      "prefix": "gitlab_user-2",
      "description": "Create Gitlab User",
      "body": [
        "- name: Create Gitlab User",
        "\tgitlab_user:",
        "\t\tserver_url: 'https://gitlab.dj-wasabi.local'",
        "\t\tvalidate_certs: true",
        "\t\tlogin_user: dj-wasabi",
        "\t\tlogin_password: MySecretPassword",
        "\t\tname: My Name",
        "\t\tusername: myusername",
        "\t\tpassword: mysecretpassword",
        "\t\temail: me@example.com",
        "\t\tsshkey_name: MySSH",
        "\t\tsshkey_file: ssh-rsa AAAAB3NzaC1yc...",
        "\t\tstate: present",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "gluster_volume": {
      "prefix": "gluster_volume-7",
      "description": "create gluster volume with multiple bricks",
      "body": [
        "- name: create gluster volume with multiple bricks",
        "\tgluster_volume:",
        "\t\tstate: present",
        "\t\tname: test2",
        "\t\tbricks: '/bricks/brick1/g2,/bricks/brick2/g2'",
        "\t\tcluster:",
        "\t\t\t- 192.0.2.10",
        "\t\t\t- 192.0.2.11",
        "\trun_once: true",
        ""
      ]
    },
    "group": {
      "prefix": "group-1",
      "body": [
        "- group:",
        "\t\tname: somegroup",
        "\t\tstate: present",
        ""
      ]
    },
    "group_by": {
      "prefix": "group_by-3",
      "body": [
        "- group_by:",
        "\t\tkey: 'el{{ ansible_distribution_major_version }}-{{ ansible_architecture }}'",
        "\t\tparents:",
        "\t\t\t- 'el{{ ansible_distribution_major_version }}'",
        ""
      ]
    },
    "grove": {
      "prefix": "grove-1",
      "body": [
        "- grove: >",
        "\t\tchannel_token=6Ph62VBBJOccmtTPZbubiPzdrhipZXtg service=my-app",
        "\t\tmessage=deployed {{ target }}",
        ""
      ]
    },
    "gunicorn": {
      "prefix": "gunicorn-4",
      "description": "run gunicorn as ansible user with specified pid and config file",
      "body": [
        "- name: run gunicorn as ansible user with specified pid and config file",
        "\tgunicorn:",
        "\t\tapp: wsgi",
        "\t\tchdir: /workspace/example",
        "\t\tconf: /workspace/example/gunicorn.cfg",
        "\t\tvenv: /workspace/example/venv",
        "\t\tpid: /workspace/example/gunicorn.pid",
        "\t\tuser: ansible",
        ""
      ]
    },
    "hall": {
      "prefix": "hall-2",
      "description": "Send Hall notification if EC2 servers were created.",
      "body": [
        "- name: Send Hall notification if EC2 servers were created.",
        "\thall:",
        "\t\troom_token: <hall room integration token>",
        "\t\ttitle: Server Creation",
        "\t\tmsg: >-",
        "\t\t\tCreated instance {{ item.id }} of type {{ item.instance_type }}.\\nInstance",
        "\t\t\tcan be reached at {{ item.public_ip }} in the {{ item.region }} region.",
        "\tdelegate_to: loclahost",
        "\twhen: ec2.instances|length > 0",
        "\twith_items: '{{ ec2.instances }}'",
        ""
      ]
    },
    "haproxy": {
      "prefix": "haproxy-12",
      "body": [
        "- haproxy:",
        "\t\tstate: drain",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tsocket: /var/run/haproxy.sock",
        "\t\tbackend: www",
        ""
      ]
    },
    "helm": {
      "prefix": "helm-2",
      "description": "Uninstall helm chart",
      "body": [
        "- name: Uninstall helm chart",
        "\thelm:",
        "\t\thost: localhost",
        "\t\tstate: absent",
        "\t\tname: my-memcached",
        ""
      ]
    },
    "hg": {
      "prefix": "hg-2",
      "body": [
        "- hg:",
        "\t\trepo: 'git://bitbucket.org/user/repo'",
        "\t\tdest: /srv/checkout",
        "\t\tclone: 'no'",
        "\t\tupdate: 'no'",
        ""
      ]
    },
    "hipchat": {
      "prefix": "hipchat-2",
      "body": [
        "- hipchat:",
        "\t\tapi: 'https://api.hipchat.com/v2/'",
        "\t\ttoken: OAUTH2_TOKEN",
        "\t\troom: notify",
        "\t\tmsg: Ansible task finished",
        ""
      ]
    },
    "homebrew": {
      "prefix": "homebrew-10",
      "body": [
        "- homebrew:",
        "\t\tname: foo",
        "\t\tstate: present",
        "\t\tinstall_options: 'with-baz,enable-debug'",
        ""
      ]
    },
    "homebrew_cask": {
      "prefix": "homebrew_cask-5",
      "body": [
        "- homebrew_cask:",
        "\t\tname: alfred",
        "\t\tstate: absent",
        "\t\tinstall_options: force",
        ""
      ]
    },
    "homebrew_tap": {
      "prefix": "homebrew_tap-4",
      "body": [
        "- homebrew_tap:",
        "\t\tname: telemachus/brew",
        "\t\turl: 'https://bitbucket.org/telemachus/brew'",
        ""
      ]
    },
    "honeybadger_deployment": {
      "prefix": "honeybadger_deployment-1",
      "body": [
        "- honeybadger_deployment:",
        "\t\ttoken: AAAAAA",
        "\t\tenvironment: staging",
        "\t\tuser: ansible",
        "\t\trevision: b6826b8",
        "\t\trepo: 'git@github.com:user/repo.git'",
        ""
      ]
    },
    "hostname": {
      "prefix": "hostname-1",
      "body": [
        "- hostname:",
        "\t\tname: web01",
        ""
      ]
    },
    "hpilo_boot": {
      "prefix": "hpilo_boot-2",
      "description": "Power off a server",
      "body": [
        "- name: Power off a server",
        "\thpilo_boot:",
        "\t\thost: YOUR_ILO_HOST",
        "\t\tlogin: YOUR_ILO_LOGIN",
        "\t\tpassword: YOUR_ILO_PASSWORD",
        "\t\tstate: poweroff",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "hpilo_facts": {
      "prefix": "hpilo_facts-2",
      "body": [
        "- fail:",
        "\t\tmsg: >-",
        "\t\t\tCMDB serial ({{ cmdb_serialno }}) does not match hardware serial ({{",
        "\t\t\thw_system_serial }}) !",
        "\twhen: cmdb_serialno != hw_system_serial",
        ""
      ]
    },
    "hponcfg": {
      "prefix": "hponcfg-3",
      "description": "Configure HP iLO on VMware ESXi hypervisor",
      "body": [
        "- name: Configure HP iLO on VMware ESXi hypervisor",
        "\thponcfg:",
        "\t\tsrc: /tmp/enable-ssh.xml",
        "\t\texecutable: /opt/hp/tools/hponcfg",
        ""
      ]
    },
    "htpasswd": {
      "prefix": "htpasswd-3",
      "body": [
        "- htpasswd:",
        "\t\tpath: /etc/mail/passwords",
        "\t\tname: alex",
        "\t\tpassword: oedu2eGh",
        "\t\tcrypt_scheme: md5_crypt",
        ""
      ]
    },
    "iam_cert": {
      "prefix": "iam_cert-4",
      "body": [
        "- iam_cert:",
        "\t\tname: very_ssl",
        "\t\tnew_name: new_very_ssl",
        "\t\tstate: present",
        ""
      ]
    },
    "iam_managed_policy": {
      "prefix": "iam_managed_policy-5",
      "description": "Create IAM Managed Policy",
      "body": [
        "- name: Create IAM Managed Policy",
        "\tiam_managed_policy:",
        "\t\tpolicy_name: ManagedPolicy",
        "\t\tstate: absent",
        ""
      ]
    },
    "iam_server_certificate_facts": {
      "prefix": "iam_server_certificate_facts-2",
      "body": [
        "- iam_server_certificate_facts:",
        "\t\tname: production-cert",
        "\tregister: server_cert",
        "\tfailed_when: '{{ server_cert.results | length == 0 }}'",
        ""
      ]
    },
    "icinga2_feature": {
      "prefix": "icinga2_feature-1",
      "description": "Enable ido-pgsql feature",
      "body": [
        "- name: Enable ido-pgsql feature",
        "\ticinga2_feature:",
        "\t\tname: ido-pgsql",
        "\t\tstate: present",
        ""
      ]
    },
    "imc_rest": {
      "prefix": "imc_rest-2",
      "description": "Configure IMC using multiple XML fragments",
      "body": [
        "- name: Configure IMC using multiple XML fragments",
        "\timc_rest:",
        "\t\thostname: '{{ imc_hostname }}'",
        "\t\tusername: '{{ imc_username }}'",
        "\t\tpassword: '{{ imc_password }}'",
        "\t\tvalidate_certs: 'no'",
        "\t\ttimeout: 120",
        "\t\tcontent: |",
        "\t\t\t<!-- Configure Serial-on-LAN -->",
        "\t\t\t<configConfMo><inConfig>",
        "\t\t\t\t<solIf dn=\"sys/rack-unit-1/sol-if\" adminState=\"enable\" speed==\"115200\" comport=\"com0\"/>",
        "\t\t\t</inConfig></configConfMo>",
        ""
      ]
    },
    "imgadm": {
      "prefix": "imgadm-7",
      "description": "Remove a source",
      "body": [
        "- name: Remove a source",
        "\timgadm:",
        "\t\tsource: 'https://docker.io'",
        "\t\tstate: absent",
        ""
      ]
    },
    "import_playbook": {
      "prefix": "import_playbook-2",
      "body": [
        "- import_playbook: otherplays.yml",
        ""
      ]
    },
    "import_role": {
      "prefix": "import_role-1",
      "body": [
        "- hosts: all",
        "\ttasks:",
        "\t\t- import_role:",
        "\t\t\t\tname: myrole",
        ""
      ]
    },
    "import_tasks": {
      "prefix": "import_tasks-1",
      "body": [
        "- hosts: all",
        "\ttasks:",
        "\t\t- debug:",
        "\t\t\t\tmsg: task1",
        ""
      ]
    },
    "include": {
      "prefix": "include-2",
      "body": [
        "- include: otherplays.yml",
        ""
      ]
    },
    "include_role": {
      "prefix": "include_role-5",
      "description": "conditional role",
      "body": [
        "- name: conditional role",
        "\tinclude_role:",
        "\t\tname: myrole",
        "\twhen: not idontwanttorun",
        ""
      ]
    },
    "include_tasks": {
      "prefix": "include_tasks-1",
      "body": [
        "- hosts: all",
        "\ttasks:",
        "\t\t- debug:",
        "\t\t\t\tmsg: task1",
        ""
      ]
    },
    "include_vars": {
      "prefix": "include_vars-9",
      "description": "Include all .yml files except bastion.yml (2.3)",
      "body": [
        "- name: Include all .yml files except bastion.yml (2.3)",
        "\tinclude_vars:",
        "\t\tdir: vars",
        "\t\tignore_files: bastion.yml",
        "\t\textensions:",
        "\t\t\t- yml",
        ""
      ]
    },
    "infini_export": {
      "prefix": "infini_export-2",
      "description": "Export and specify client list explicitly",
      "body": [
        "- name: Export and specify client list explicitly",
        "\tinfini_export:",
        "\t\tname: /data02",
        "\t\tfilesystem: foo",
        "\t\tclient_list:",
        "\t\t\t- client: 192.168.0.2",
        "\t\t\t\taccess: RW",
        "\t\t\t\tno_root_squash: true",
        "\t\t\t- client: 192.168.0.100",
        "\t\t\t\taccess: RO",
        "\t\t\t\tno_root_squash: false",
        "\t\t\t- client: 192.168.0.10-192.168.0.20",
        "\t\t\t\taccess: RO",
        "\t\t\t\tno_root_squash: false",
        "\t\tsystem: ibox001",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        ""
      ]
    },
    "infini_export_client": {
      "prefix": "infini_export_client-2",
      "description": "Add multiple clients with RO access. Squash root privileges",
      "body": [
        "- name: Add multiple clients with RO access. Squash root privileges",
        "\tinfini_export_client:",
        "\t\tclient: '{{ item }}'",
        "\t\taccess_mode: RO",
        "\t\tno_root_squash: 'no'",
        "\t\texport: /data",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tsystem: ibox001",
        "\twith_items:",
        "\t\t- 10.0.0.2",
        "\t\t- 10.0.0.3",
        ""
      ]
    },
    "infini_fs": {
      "prefix": "infini_fs-1",
      "description": "Create new file system named foo under pool named bar",
      "body": [
        "- name: Create new file system named foo under pool named bar",
        "\tinfini_fs:",
        "\t\tname: foo",
        "\t\tsize: 1TB",
        "\t\tpool: bar",
        "\t\tstate: present",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tsystem: ibox001",
        ""
      ]
    },
    "infini_host": {
      "prefix": "infini_host-3",
      "description": "Map host foo.example.com to volume bar",
      "body": [
        "- name: Map host foo.example.com to volume bar",
        "\tinfini_host:",
        "\t\tname: foo.example.com",
        "\t\tvolume: bar",
        "\t\tsystem: ibox01",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        ""
      ]
    },
    "infini_pool": {
      "prefix": "infini_pool-2",
      "description": "Disable SSD Cache on pool",
      "body": [
        "- name: Disable SSD Cache on pool",
        "\tinfini_pool:",
        "\t\tname: foo",
        "\t\tssd_cache: 'no'",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tsystem: ibox001",
        ""
      ]
    },
    "infini_vol": {
      "prefix": "infini_vol-1",
      "description": "Create new volume named foo under pool named bar",
      "body": [
        "- name: Create new volume named foo under pool named bar",
        "\tinfini_vol:",
        "\t\tname: foo",
        "\t\tsize: 1TB",
        "\t\tpool: bar",
        "\t\tstate: present",
        "\t\tuser: admin",
        "\t\tpassword: secret",
        "\t\tsystem: ibox001",
        ""
      ]
    },
    "infinity": {
      "prefix": "infinity-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "influxdb_database": {
      "prefix": "influxdb_database-3",
      "description": "Create database using custom credentials",
      "body": [
        "- name: Create database using custom credentials",
        "\tinfluxdb_database:",
        "\t\thostname: '{{influxdb_ip_address}}'",
        "\t\tusername: '{{influxdb_username}}'",
        "\t\tpassword: '{{influxdb_password}}'",
        "\t\tdatabase_name: '{{influxdb_database_name}}'",
        "\t\tstate: present",
        ""
      ]
    },
    "influxdb_retention_policy": {
      "prefix": "influxdb_retention_policy-4",
      "description": "create infinite retention policy",
      "body": [
        "- name: create infinite retention policy",
        "\tinfluxdb_retention_policy:",
        "\t\thostname: '{{influxdb_ip_address}}'",
        "\t\tdatabase_name: '{{influxdb_database_name}}'",
        "\t\tpolicy_name: test",
        "\t\tduration: INF",
        "\t\treplication: 1",
        ""
      ]
    },
    "ini_file": {
      "prefix": "ini_file-2",
      "body": [
        "- ini_file:",
        "\t\tpath: /etc/anotherconf",
        "\t\tsection: drinks",
        "\t\toption: temperature",
        "\t\tvalue: cold",
        "\t\tbackup: 'yes'",
        ""
      ]
    },
    "interfaces_file": {
      "prefix": "interfaces_file-1",
      "body": [
        "- interfaces_file:",
        "\t\tdest: /etc/network/interfaces.d/eth1.cfg",
        "\t\tiface: eth1",
        "\t\toption: mtu",
        "\t\tvalue: 8000",
        "\t\tbackup: 'yes'",
        "\t\tstate: present",
        "\tregister: eth1_cfg",
        ""
      ]
    },
    "ios_banner": {
      "prefix": "ios_banner-3",
      "description": "Configure banner from file",
      "body": [
        "- name: Configure banner from file",
        "\tios_banner:",
        "\t\tbanner: motd",
        "\t\ttext: '{{ lookup(''file'', ''./config_partial/raw_banner.cfg'') }}'",
        "\t\tstate: present",
        ""
      ]
    },
    "ios_config": {
      "prefix": "ios_config-6",
      "description": "save running to startup when modified",
      "body": [
        "- name: save running to startup when modified",
        "\tios_config:",
        "\t\tsave_when: modified",
        ""
      ]
    },
    "ios_facts": {
      "prefix": "ios_facts-1",
      "description": "# Note: examples below use the following provider dict to handle#       transport and authentication to the node.",
      "body": [
        "null",
        ""
      ]
    },
    "ios_interface": {
      "prefix": "ios_interface-9",
      "description": "Delete interface using aggregate",
      "body": [
        "- name: Delete interface using aggregate",
        "\tios_interface:",
        "\t\taggregate:",
        "\t\t\t- name: Loopback9",
        "\t\t\t- name: Loopback10",
        "\t\tstate: absent",
        ""
      ]
    },
    "ios_logging": {
      "prefix": "ios_logging-7",
      "description": "remove logging using aggregate",
      "body": [
        "- name: remove logging using aggregate",
        "\tios_logging:",
        "\t\taggregate:",
        "\t\t\t- dest: console",
        "\t\t\t\tlevel: notifications",
        "\t\t\t- dest: buffered",
        "\t\t\t\tsize: 9000",
        "\t\tstate: absent",
        ""
      ]
    },
    "ios_ping": {
      "prefix": "ios_ping-5",
      "description": "Test reachability to 10.40.40.40 using prod vrf and setting count and source",
      "body": [
        "- name: Test reachability to 10.40.40.40 using prod vrf and setting count and source",
        "\tios_ping:",
        "\t\tprovider: '{{ provider }}'",
        "\t\tdest: 10.40.40.40",
        "\t\tsource: loopback0",
        "\t\tvrf: prod",
        "\t\tcount: 20",
        ""
      ]
    },
    "ios_static_route": {
      "prefix": "ios_static_route-4",
      "description": "Add static route aggregates",
      "body": [
        "- name: Add static route aggregates",
        "\tios_static_route:",
        "\t\taggregate:",
        "\t\t\t- prefix: 172.16.32.0",
        "\t\t\t\tmask: 255.255.255.0",
        "\t\t\t\tnext_hop: 10.0.0.8",
        "\t\t\t- prefix: 172.16.33.0",
        "\t\t\t\tmask: 255.255.255.0",
        "\t\t\t\tnext_hop: 10.0.0.8",
        "\t\tstate: absent",
        ""
      ]
    },
    "ios_system": {
      "prefix": "ios_system-4",
      "description": "configure name servers",
      "body": [
        "- name: configure name servers",
        "\tios_system:",
        "\t\tname_servers:",
        "\t\t\t- 8.8.8.8",
        "\t\t\t- 8.8.4.4",
        ""
      ]
    },
    "ios_user": {
      "prefix": "ios_user-7",
      "description": "Delete users with aggregate",
      "body": [
        "- name: Delete users with aggregate",
        "\tios_user:",
        "\t\taggregate:",
        "\t\t\t- name: ansibletest1",
        "\t\t\t- name: ansibletest2",
        "\t\t\t- name: ansibletest3",
        "\t\tstate: absent",
        ""
      ]
    },
    "ios_vrf": {
      "prefix": "ios_vrf-3",
      "description": "configure set of VRFs and purge any others",
      "body": [
        "- name: configure set of VRFs and purge any others",
        "\tios_vrf:",
        "\t\tvrfs:",
        "\t\t\t- red",
        "\t\t\t- blue",
        "\t\t\t- green",
        "\t\tpurge: 'yes'",
        ""
      ]
    },
    "iosxr_banner": {
      "prefix": "iosxr_banner-1",
      "description": "configure the login banner",
      "body": [
        "- name: configure the login banner",
        "\tiosxr_banner:",
        "\t\tbanner: login",
        "\t\ttext: |",
        "\t\t\tthis is my login banner",
        "\t\t\tthat contains a multiline",
        "\t\t\tstring",
        "\t\tstate: present",
        ""
      ]
    },
    "iosxr_config": {
      "prefix": "iosxr_config-3",
      "description": "load a config from disk and replace the current config",
      "body": [
        "- name: load a config from disk and replace the current config",
        "\tiosxr_config:",
        "\t\tsrc: config.cfg",
        "\t\tbackup: 'yes'",
        ""
      ]
    },
    "iosxr_facts": {
      "prefix": "iosxr_facts-3",
      "body": [
        "- iosxr_facts:",
        "\t\tgather_subset:",
        "\t\t\t- '!hardware'",
        ""
      ]
    },
    "iosxr_interface": {
      "prefix": "iosxr_interface-8",
      "description": "Config + intent",
      "body": [
        "- name: Config + intent",
        "\tiosxr_interface:",
        "\t\tname: GigabitEthernet0/0/0/5",
        "\t\tenabled: false",
        "\t\tstate: down",
        "\t\tdelay: 20",
        ""
      ]
    },
    "iosxr_logging": {
      "prefix": "iosxr_logging-7",
      "description": "Delete logging using aggregate",
      "body": [
        "- name: Delete logging using aggregate",
        "\tiosxr_logging:",
        "\t\taggregate:",
        "\t\t\t- dest: console",
        "\t\t\t\tlevel: warning",
        "\t\t\t- dest: buffered",
        "\t\t\t\tsize: 4800000",
        "\t\tstate: absent",
        ""
      ]
    },
    "iosxr_system": {
      "prefix": "iosxr_system-1",
      "description": "configure hostname and domain-name",
      "body": [
        "- name: configure hostname and domain-name",
        "\tiosxr_system:",
        "\t\thostname: iosxr01",
        "\t\tdomain_name: test.example.com",
        "\t\tdomain-search:",
        "\t\t\t- ansible.com",
        "\t\t\t- redhat.com",
        "\t\t\t- cisco.com",
        ""
      ]
    },
    "iosxr_user": {
      "prefix": "iosxr_user-1",
      "description": "create a new user",
      "body": [
        "- name: create a new user",
        "\tiosxr_user:",
        "\t\tname: ansible",
        "\t\tconfigured_password: test",
        "\t\tstate: present",
        ""
      ]
    },
    "ipa_dnsrecord": {
      "prefix": "ipa_dnsrecord-3",
      "body": [
        "- ipa_dnsrecord:",
        "\t\tname: host01",
        "\t\tzone_name: example.com",
        "\t\trecord_type: AAAA",
        "\t\trecord_value: '::1'",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        "\t\tstate: absent",
        ""
      ]
    },
    "ipa_group": {
      "prefix": "ipa_group-4",
      "body": [
        "- ipa_group:",
        "\t\tname: sysops",
        "\t\tstate: absent",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        ""
      ]
    },
    "ipa_hbacrule": {
      "prefix": "ipa_hbacrule-3",
      "body": [
        "- ipa_hbacrule:",
        "\t\tname: rule_to_be_deleted",
        "\t\tstate: absent",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        ""
      ]
    },
    "ipa_host": {
      "prefix": "ipa_host-5",
      "body": [
        "- ipa_host:",
        "\t\tname: host01.example.com",
        "\t\tstate: absent",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        "\t\tupdate_dns: true",
        ""
      ]
    },
    "ipa_hostgroup": {
      "prefix": "ipa_hostgroup-2",
      "body": [
        "- ipa_hostgroup:",
        "\t\tname: databases",
        "\t\tstate: absent",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        ""
      ]
    },
    "ipa_role": {
      "prefix": "ipa_role-3",
      "body": [
        "- ipa_role:",
        "\t\tname: dba",
        "\t\tstate: absent",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        ""
      ]
    },
    "ipa_sudocmd": {
      "prefix": "ipa_sudocmd-2",
      "body": [
        "- ipa_sudocmd:",
        "\t\tname: su",
        "\t\tstate: absent",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        ""
      ]
    },
    "ipa_sudocmdgroup": {
      "prefix": "ipa_sudocmdgroup-2",
      "description": "Ensure sudo command group does not exists",
      "body": [
        "- name: Ensure sudo command group does not exists",
        "\tipa_sudocmdgroup:",
        "\t\tname: group01",
        "\t\tstate: absent",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        ""
      ]
    },
    "ipa_sudorule": {
      "prefix": "ipa_sudorule-2",
      "body": [
        "- ipa_sudorule:",
        "\t\tname: sudo_dev_dbserver",
        "\t\tdescription: Allow developers to run every command with sudo on all database server",
        "\t\tcmdcategory: all",
        "\t\thost:",
        "\t\t\t- db01.example.com",
        "\t\thostgroup:",
        "\t\t\t- db-server",
        "\t\tsudoopt:",
        "\t\t\t- '!authenticate'",
        "\t\tusergroup:",
        "\t\t\t- developers",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        ""
      ]
    },
    "ipa_user": {
      "prefix": "ipa_user-2",
      "body": [
        "- ipa_user:",
        "\t\tname: brain",
        "\t\tstate: absent",
        "\t\tipa_host: ipa.example.com",
        "\t\tipa_user: admin",
        "\t\tipa_pass: topsecret",
        ""
      ]
    },
    "ipadm_if": {
      "prefix": "ipadm_if-2",
      "body": [
        "- ipadm_if:",
        "\t\tname: vnic0",
        "\t\tstate: disabled",
        ""
      ]
    },
    "ipify_facts": {
      "prefix": "ipify_facts-2",
      "description": "get my public IP",
      "body": [
        "- name: get my public IP",
        "\tipify_facts:",
        "\t\tapi_url: 'http://api.example.com/ipify'",
        "\t\ttimeout: 20",
        ""
      ]
    },
    "ipinfoio_facts": {
      "prefix": "ipinfoio_facts-1",
      "description": "get IP geolocation data",
      "body": [
        "- name: get IP geolocation data",
        "\tipinfoio_facts: null",
        ""
      ]
    },
    "ipmi_boot": {
      "prefix": "ipmi_boot-2",
      "body": [
        "- ipmi_boot:",
        "\t\tname: test.testdomain.com",
        "\t\tuser: admin",
        "\t\tpassword: password",
        "\t\tbootdev: network",
        "\t\tstate: absent",
        ""
      ]
    },
    "ipmi_power": {
      "prefix": "ipmi_power-1",
      "body": [
        "- ipmi_power:",
        "\t\tname: test.testdomain.com",
        "\t\tuser: admin",
        "\t\tpassword: password",
        "\t\tstate: 'on'",
        ""
      ]
    },
    "iptables": {
      "prefix": "iptables-7",
      "body": [
        "- iptables:",
        "\t\tchain: INPUT",
        "\t\tpolicy: DROP",
        ""
      ]
    },
    "irc": {
      "prefix": "irc-3",
      "body": [
        "- local_action:",
        "\t\tmodule: irc",
        "\t\tport: 6669",
        "\t\tserver: irc.example.net",
        "\t\tchannel: null",
        "\t\tnick_to:",
        "\t\t\t- nick1",
        "\t\t\t- nick2",
        "\t\tmsg: 'All finished at {{ ansible_date_time.iso8601 }}'",
        "\t\tcolor: red",
        "\t\tnick: ansibleIRC",
        ""
      ]
    },
    "iso_extract": {
      "prefix": "iso_extract-1",
      "description": "Extract kernel and ramdisk from a LiveCD",
      "body": [
        "- name: Extract kernel and ramdisk from a LiveCD",
        "\tiso_extract:",
        "\t\timage: /tmp/rear-test.iso",
        "\t\tdest: /tmp/virt-rear/",
        "\t\tfiles:",
        "\t\t\t- isolinux/kernel",
        "\t\t\t- isolinux/initrd.cgz",
        ""
      ]
    },
    "jabber": {
      "prefix": "jabber-3",
      "body": [
        "- jabber:",
        "\t\tuser: mybot@example.net",
        "\t\thost: talk.example.net",
        "\t\tport: 5223",
        "\t\tpassword: secret",
        "\t\tto: mychaps@example.net",
        "\t\tmsg: Ansible task finished",
        ""
      ]
    },
    "java_cert": {
      "prefix": "java_cert-4",
      "description": "Import a pkcs12 keystore with a specified alias, create it if it doesn't exist",
      "body": [
        "- name: >-",
        "\t\tImport a pkcs12 keystore with a specified alias, create it if it doesn't",
        "\t\texist",
        "\tjava_cert:",
        "\t\tpkcs12_path: /tmp/importkeystore.p12",
        "\t\tcert_alias: default",
        "\t\tkeystore_path: /opt/wildfly/standalone/configuration/defaultkeystore.jks",
        "\t\tkeystore_pass: changeit",
        "\t\tkeystore_create: 'yes'",
        "\t\tstate: present",
        ""
      ]
    },
    "jboss": {
      "prefix": "jboss-3",
      "body": [
        "- jboss:",
        "\t\tdeployment: hello.war",
        "\t\tstate: absent",
        ""
      ]
    },
    "jenkins_job": {
      "prefix": "jenkins_job-6",
      "body": [
        "- jenkins_job:",
        "\t\tname: test",
        "\t\ttoken: asdfasfasfasdfasdfadfasfasdfasdfc",
        "\t\tenabled: false",
        "\t\turl: 'http://localhost:8080'",
        "\t\tuser: admin",
        ""
      ]
    },
    "jenkins_plugin": {
      "prefix": "jenkins_plugin-10",
      "description": "Install plugin",
      "body": [
        "- name: Install plugin",
        "\tjenkins_plugin:",
        "\t\tname: build-pipeline-plugin",
        "\t\tparams: '{{ my_jenkins_params }}'",
        "\t\turl_password: p4ssw0rd",
        "\t\turl: 'http://localhost:8888'",
        ""
      ]
    },
    "jenkins_script": {
      "prefix": "jenkins_script-4",
      "description": "interacting with an untrusted HTTPS connection",
      "body": [
        "- name: interacting with an untrusted HTTPS connection",
        "\tjenkins_script:",
        "\t\tscript: println(Jenkins.instance.pluginManager.plugins)",
        "\t\tuser: admin",
        "\t\tpassword: admin",
        "\t\turl: 'https://localhost'",
        "\t\tvalidate_certs: 'no'",
        ""
      ]
    },
    "jira": {
      "prefix": "jira-9",
      "description": "Close the issue",
      "body": [
        "- name: Close the issue",
        "\tjira:",
        "\t\turi: '{{ server }}'",
        "\t\tusername: '{{ user }}'",
        "\t\tpassword: '{{ pass }}'",
        "\t\tissue: '{{ issue.meta.key }}'",
        "\t\toperation: transition",
        "\t\tstatus: Done",
        ""
      ]
    },
    "junos_banner": {
      "prefix": "junos_banner-5",
      "description": "Configure banner from file",
      "body": [
        "- name: Configure banner from file",
        "\tjunos_banner:",
        "\t\tbanner: motd",
        "\t\ttext: '{{ lookup(''file'', ''./config_partial/raw_banner.cfg'') }}'",
        "\t\tstate: present",
        ""
      ]
    },
    "junos_command": {
      "prefix": "junos_command-7",
      "description": "run rpc on the remote device",
      "body": [
        "- name: run rpc on the remote device",
        "\tjunos_command:",
        "\t\trpcs: get-software-information",
        ""
      ]
    },
    "junos_config": {
      "prefix": "junos_config-5",
      "description": "confirm a previous commit",
      "body": [
        "- name: confirm a previous commit",
        "\tjunos_config:",
        "\t\tconfirm_commit: 'yes'",
        "\t\tprovider: '{{ netconf }}'",
        ""
      ]
    },
    "junos_facts": {
      "prefix": "junos_facts-2",
      "description": "collect default set of facts and configuration",
      "body": [
        "- name: collect default set of facts and configuration",
        "\tjunos_facts:",
        "\t\tgather_subset: config",
        ""
      ]
    },
    "junos_interface": {
      "prefix": "junos_interface-12",
      "description": "Config + intent",
      "body": [
        "- name: Config + intent",
        "\tjunos_interface:",
        "\t\tname: '{{ name }}'",
        "\t\tenabled: false",
        "\t\tstate: down",
        ""
      ]
    },
    "junos_l3_interface": {
      "prefix": "junos_l3_interface-4",
      "description": "Delete ipv4 address using aggregate",
      "body": [
        "- name: Delete ipv4 address using aggregate",
        "\tjunos_l3_interface:",
        "\t\taggregate:",
        "\t\t\t- name: ge-0/0/1",
        "\t\t\t\tipv4: 1.1.1.1",
        "\t\t\t- name: ge-0/0/2",
        "\t\t\t\tipv4: 2.2.2.2",
        "\t\tstate: absent",
        ""
      ]
    },
    "junos_linkagg": {
      "prefix": "junos_linkagg-6",
      "description": "Enable link aggregation",
      "body": [
        "- name: Enable link aggregation",
        "\tjunos_linkagg:",
        "\t\tname: ae11",
        "\t\tstate: up",
        ""
      ]
    },
    "junos_lldp": {
      "prefix": "junos_lldp-4",
      "description": "Delete LLDP parameters",
      "body": [
        "- name: Delete LLDP parameters",
        "\tjunos_lldp:",
        "\t\tinterval: 10",
        "\t\thold_multiplier: 5",
        "\t\ttransmit_delay: 30",
        "\t\tstate: absent",
        ""
      ]
    },
    "junos_lldp_interface": {
      "prefix": "junos_lldp_interface-6",
      "description": "Activate LLDP on specific interfaces",
      "body": [
        "- name: Activate LLDP on specific interfaces",
        "\tjunos_lldp_interface:",
        "\t\tname: ge-0/0/5",
        "\t\tstate: present",
        "\t\tactive: true",
        ""
      ]
    },
    "junos_logging": {
      "prefix": "junos_logging-6",
      "description": "Delete file logging using aggregate",
      "body": [
        "- name: Delete file logging using aggregate",
        "\tjunos_logging:",
        "\t\taggregate:",
        "\t\t\t- dest: file",
        "\t\t\t\tname: test-1",
        "\t\t\t\tfacility: pfe",
        "\t\t\t\tlevel: critical",
        "\t\t\t- dest: file",
        "\t\t\t\tname: test-2",
        "\t\t\t\tfacility: kernel",
        "\t\t\t\tlevel: emergency",
        "\t\tstate: absent",
        ""
      ]
    },
    "junos_netconf": {
      "prefix": "junos_netconf-2",
      "description": "disable netconf service",
      "body": [
        "- name: disable netconf service",
        "\tjunos_netconf:",
        "\t\tstate: absent",
        ""
      ]
    },
    "junos_rpc": {
      "prefix": "junos_rpc-2",
      "description": "get system information",
      "body": [
        "- name: get system information",
        "\tjunos_rpc:",
        "\t\trpc: get-system-information",
        ""
      ]
    },
    "junos_static_route": {
      "prefix": "junos_static_route-6",
      "description": "Delete static route using aggregate",
      "body": [
        "- name: Delete static route using aggregate",
        "\tjunos_static_route:",
        "\t\taggregate:",
        "\t\t\t- address: 4.4.4.0/24",
        "\t\t\t- address: 5.5.5.0/24",
        "\t\tstate: absent",
        ""
      ]
    },
    "junos_system": {
      "prefix": "junos_system-3",
      "description": "configure name servers",
      "body": [
        "- name: configure name servers",
        "\tjunos_system:",
        "\t\tname_servers:",
        "\t\t\t- 8.8.8.8",
        "\t\t\t- 8.8.4.4",
        ""
      ]
    },
    "junos_user": {
      "prefix": "junos_user-5",
      "description": "Delete list of users",
      "body": [
        "- name: Delete list of users",
        "\tjunos_user:",
        "\t\taggregate:",
        "\t\t\t- name: test_user1",
        "\t\t\t\tfull_name: test_user2",
        "\t\t\t\trole: operator",
        "\t\t\t\tstate: absent",
        "\t\t\t- name: test_user2",
        "\t\t\t\tfull_name: test_user2",
        "\t\t\t\trole: read-only",
        "\t\t\t\tstate: absent",
        ""
      ]
    },
    "junos_vlan": {
      "prefix": "junos_vlan-6",
      "description": "Delete vlan configuration using aggregate",
      "body": [
        "- name: Delete vlan configuration using aggregate",
        "\tjunos_vlan:",
        "\t\taggregate:",
        "\t\t\t- vlan_id: 159",
        "\t\t\t\tname: test_vlan_1",
        "\t\t\t- vlan_id: 160",
        "\t\t\t\tname: test_vlan_2",
        "\t\tstate: absent",
        ""
      ]
    },
    "junos_vrf": {
      "prefix": "junos_vrf-5",
      "description": "Create vrf using aggregate",
      "body": [
        "- name: Create vrf using aggregate",
        "\tjunos_vrf:",
        "\t\taggregate:",
        "\t\t\t- name: test-1",
        "\t\t\t\tdescription: test-vrf-1",
        "\t\t\t\tinterfaces:",
        "\t\t\t\t\t- ge-0/0/3 - ge-0/0/2",
        "\t\t\t\trd: '1.1.1.1:10'",
        "\t\t\t\ttarget: 'target:65514:113'",
        "\t\t\t- name: test-2",
        "\t\t\t\tdescription: test-vrf-2",
        "\t\t\t\tinterfaces:",
        "\t\t\t\t\t- ge-0/0/4",
        "\t\t\t\t\t- ge-0/0/5",
        "\t\t\t\trd: '2.2.2.2:10'",
        "\t\t\t\ttarget: 'target:65515:114'",
        "\tstate: present",
        ""
      ]
    },
    "katello": {
      "prefix": "katello-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "kernel_blacklist": {
      "prefix": "kernel_blacklist-1",
      "body": [
        "- kernel_blacklist:",
        "\t\tname: nouveau",
        "\t\tstate: present",
        ""
      ]
    },
    "kibana_plugin": {
      "prefix": "kibana_plugin-3",
      "description": "Uninstall Elasticsearch head plugin",
      "body": [
        "- name: Uninstall Elasticsearch head plugin",
        "\tkibana_plugin:",
        "\t\tstate: absent",
        "\t\tname: elasticsearch/marvel",
        ""
      ]
    },
    "known_hosts": {
      "prefix": "known_hosts-1",
      "description": "tell the host about our servers it might want to ssh to",
      "body": [
        "- name: tell the host about our servers it might want to ssh to",
        "\tknown_hosts:",
        "\t\tpath: /etc/ssh/ssh_known_hosts",
        "\t\tname: foo.com.invalid",
        "\t\tkey: '{{ lookup(''file'', ''pubkeys/foo.com.invalid'') }}'",
        ""
      ]
    },
    "kubernetes": {
      "prefix": "kubernetes-3",
      "description": "Create a kubernetes namespace",
      "body": [
        "- name: Create a kubernetes namespace",
        "\tkubernetes:",
        "\t\tapi_endpoint: 123.45.67.89",
        "\t\tinsecure: true",
        "\t\tfile_reference: /path/to/create_namespace.yaml",
        "\t\tstate: present",
        ""
      ]
    },
    "lambda_alias": {
      "prefix": "lambda_alias-2",
      "body": [
        "- hosts: localhost",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tstate: present",
        "\t\tproject_folder: /path/to/deployment/package",
        "\t\tdeployment_package: lambda.zip",
        "\t\taccount: 123456789012",
        "\t\tproduction_version: 5",
        "\ttasks:",
        "\t\t- name: AWS Lambda Function",
        "\t\t\tlambda:",
        "\t\t\t\tstate: '{{ state | default(''present'') }}'",
        "\t\t\t\tname: myLambdaFunction",
        "\t\t\t\tpublish: true",
        "\t\t\t\tdescription: lambda function description",
        "\t\t\t\tcode_s3_bucket: package-bucket",
        "\t\t\t\tcode_s3_key: 'lambda/{{ deployment_package }}'",
        "\t\t\t\tlocal_path: '{{ project_folder }}/{{ deployment_package }}'",
        "\t\t\t\truntime: python2.7",
        "\t\t\t\ttimeout: 5",
        "\t\t\t\thandler: lambda.handler",
        "\t\t\t\tmemory_size: 128",
        "\t\t\t\trole: 'arn:aws:iam::{{ account }}:role/API2LambdaExecRole'",
        ""
      ]
    },
    "lambda_event": {
      "prefix": "lambda_event-2",
      "body": [
        "- hosts: localhost",
        "\tgather_facts: 'no'",
        "\tvars:",
        "\t\tstate: present",
        "\ttasks:",
        "\t\t- name: DynamoDB stream event mapping",
        "\t\t\tlambda_event:",
        "\t\t\t\tstate: '{{ state | default(''present'') }}'",
        "\t\t\t\tevent_source: stream",
        "\t\t\t\tfunction_name: '{{ function_name }}'",
        "\t\t\t\talias: Dev",
        "\t\t\t\tsource_params:",
        "\t\t\t\t\tsource_arn: >-",
        "\t\t\t\t\t\tarn:aws:dynamodb:us-east-1:123456789012:table/tableName/stream/2016-03-19T19:51:37.457",
        "\t\t\t\t\tenabled: true",
        "\t\t\t\t\tbatch_size: 100",
        "\t\t\t\t\tstarting_position: TRIM_HORIZON",
        ""
      ]
    },
    "lambda_facts": {
      "prefix": "lambda_facts-4",
      "description": "List all function",
      "body": [
        "- name: List all function",
        "\tlambda_facts:",
        "\t\tquery: all",
        "\t\tmax_items: 20",
        ""
      ]
    },
    "lambda_policy": {
      "prefix": "lambda_policy-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "layman": {
      "prefix": "layman-5",
      "body": [
        "- layman:",
        "\t\tname: cvut",
        "\t\tstate: absent",
        ""
      ]
    },
    "ldap_attr": {
      "prefix": "ldap_attr-6",
      "description": "Get rid of an unneeded attribute",
      "body": [
        "- name: Get rid of an unneeded attribute",
        "\tldap_attr:",
        "\t\tdn: 'uid=jdoe,ou=people,dc=example,dc=com'",
        "\t\tname: shadowExpire",
        "\t\tvalues: ''",
        "\t\tstate: exact",
        "\t\tparams: '{{ ldap_auth }}'",
        ""
      ]
    },
    "ldap_entry": {
      "prefix": "ldap_entry-4",
      "description": "Get rid of an old entry",
      "body": [
        "- name: Get rid of an old entry",
        "\tldap_entry:",
        "\t\tdn: 'ou=stuff,dc=example,dc=com'",
        "\t\tstate: absent",
        "\t\tparams: '{{ ldap_auth }}'",
        ""
      ]
    },
    "letsencrypt": {
      "prefix": "letsencrypt-1",
      "body": [
        "- letsencrypt:",
        "\t\taccount_key: /etc/pki/cert/private/account.key",
        "\t\tcsr: /etc/pki/cert/csr/sample.com.csr",
        "\t\tdest: /etc/httpd/ssl/sample.com.crt",
        "\tregister: sample_com_challenge",
        ""
      ]
    },
    "librato_annotation": {
      "prefix": "librato_annotation-3",
      "body": [
        "- librato_annotation:",
        "\t\tuser: user@example.com",
        "\t\tapi_key: XXXXXXXXXXXXXXXXXX",
        "\t\tname: maintenance",
        "\t\ttitle: Maintenance window",
        "\t\tdescription: This is a detailed description of maintenance",
        "\t\tstart_time: 1395940006",
        "\t\tend_time: 1395954406",
        ""
      ]
    },
    "lightsail": {
      "prefix": "lightsail-4",
      "body": [
        "- lightsail:",
        "\t\tstate: absent",
        "\t\tregion: us-east-1",
        "\t\tname: myinstance",
        ""
      ]
    },
    "lineinfile": {
      "prefix": "lineinfile-9",
      "body": [
        "- lineinfile:",
        "\t\tpath: /etc/sudoers",
        "\t\tstate: present",
        "\t\tregexp: ^%ADMIN ALL=",
        "\t\tline: '%ADMIN ALL=(ALL) NOPASSWD: ALL'",
        "\t\tvalidate: /usr/sbin/visudo -cf %s",
        ""
      ]
    },
    "linode": {
      "prefix": "linode-6",
      "description": "Reboot a server",
      "body": [
        "- name: Reboot a server",
        "\tlinode:",
        "\t\tapi_key: longStringFromLinodeApi",
        "\t\tname: linode-test1",
        "\t\tlinode_id: 12345678",
        "\t\tstate: restarted",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "locale_gen": {
      "prefix": "locale_gen-1",
      "body": [
        "- locale_gen:",
        "\t\tname: de_CH.UTF-8",
        "\t\tstate: present",
        ""
      ]
    },
    "logentries": {
      "prefix": "logentries-2",
      "body": [
        "- logentries:",
        "\t\tpath: /var/log/nginx/error.log",
        "\t\tstate: absent",
        ""
      ]
    },
    "logicmonitor": {
      "prefix": "logicmonitor-1",
      "description": "# example of adding a new LogicMonitor collector to these devices",
      "body": [
        "null",
        ""
      ]
    },
    "logstash_plugin": {
      "prefix": "logstash_plugin-3",
      "description": "Uninstall Logstash plugin",
      "body": [
        "- name: Uninstall Logstash plugin",
        "\tlogstash_plugin:",
        "\t\tstate: absent",
        "\t\tname: logstash-filter-multiline",
        ""
      ]
    },
    "lvg": {
      "prefix": "lvg-3",
      "body": [
        "- lvg:",
        "\t\tvg: vg.services",
        "\t\tstate: absent",
        ""
      ]
    },
    "lvol": {
      "prefix": "lvol-16",
      "body": [
        "- lvol:",
        "\t\tvg: firefly",
        "\t\tlv: test",
        "\t\tsize: 512g",
        "\t\tactive: false",
        ""
      ]
    },
    "lxc_container": {
      "prefix": "lxc_container-19",
      "description": "Destroy a container",
      "body": [
        "- name: Destroy a container",
        "\tlxc_container:",
        "\t\tname: '{{ item }}'",
        "\t\tstate: absent",
        "\twith_items:",
        "\t\t- test-container-stopped",
        "\t\t- test-container-started",
        "\t\t- test-container-frozen",
        "\t\t- test-container-lvm",
        "\t\t- test-container-config",
        "\t\t- test-container-overlayfs",
        "\t\t- test-container-overlayfs-clone",
        "\t\t- test-container-overlayfs-clone-snapshot",
        "\t\t- test-container-overlayfs-clone-snapshot2",
        "\t\t- test-container-new-archive",
        "\t\t- test-container-new-archive-clone",
        "\t\t- test-container-new-archive-destroyed-clone",
        ""
      ]
    },
    "lxd_container": {
      "prefix": "lxd_container-1",
      "body": [
        "- hosts: localhost",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Create a started container",
        "\t\t\tlxd_container:",
        "\t\t\t\tname: mycontainer",
        "\t\t\t\tstate: started",
        "\t\t\t\tsource:",
        "\t\t\t\t\ttype: image",
        "\t\t\t\t\tmode: pull",
        "\t\t\t\t\tserver: 'https://images.linuxcontainers.org'",
        "\t\t\t\t\tprotocol: lxd",
        "\t\t\t\t\talias: ubuntu/xenial/amd64",
        "\t\t\t\tprofiles:",
        "\t\t\t\t\t- default",
        "\t\t\t\twait_for_ipv4_addresses: true",
        "\t\t\t\ttimeout: 600",
        ""
      ]
    },
    "lxd_profile": {
      "prefix": "lxd_profile-4",
      "body": [
        "- hosts: localhost",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Rename a profile",
        "\t\t\tlxd_profile:",
        "\t\t\t\tname: macvlan",
        "\t\t\t\tnew_name: macvlan2",
        "\t\t\t\tstate: present",
        ""
      ]
    },
    "macports": {
      "prefix": "macports-5",
      "body": [
        "- macports:",
        "\t\tname: foo",
        "\t\tstate: inactive",
        ""
      ]
    },
    "mail": {
      "prefix": "mail-6",
      "description": "Sending an e-mail using StartTLS to the remote machine",
      "body": [
        "- name: Sending an e-mail using StartTLS to the remote machine",
        "\tmail:",
        "\t\thost: localhost",
        "\t\tport: 25",
        "\t\tto: John Smith <john.smith@example.com>",
        "\t\tsubject: Ansible-report",
        "\t\tbody: 'System {{ ansible_hostname }} has been successfully provisioned.'",
        "\t\tsecure: starttls",
        ""
      ]
    },
    "make": {
      "prefix": "make-3",
      "body": [
        "- make:",
        "\t\tchdir: /home/ubuntu/cool-project",
        "\t\ttarget: all",
        "\t\tparams:",
        "\t\t\tNUM_THREADS: 4",
        "\t\t\tBACKEND: lapack",
        ""
      ]
    },
    "manageiq_provider": {
      "prefix": "manageiq_provider-1",
      "description": "Create a new provider in ManageIQ ('Hawkular' metrics)",
      "body": [
        "- name: Create a new provider in ManageIQ ('Hawkular' metrics)",
        "\tmanageiq_provider:",
        "\t\tname: EngLab",
        "\t\ttype: OpenShift",
        "\t\tstate: present",
        "\t\tprovider:",
        "\t\t\tauth_key: topSecret",
        "\t\t\thostname: example.com",
        "\t\t\tport: 8443",
        "\t\t\tverify_ssl: true",
        "\t\t\tsecurity_protocol: ssl-with-validation-custom-ca",
        "\t\t\tcertificate_authority: |",
        "\t\t\t\t-----BEGIN CERTIFICATE-----",
        "\t\t\t\tFAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu",
        "\t\t\t\tc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw",
        "\t\t\t\tMTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw",
        "\t\t\t\tggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S",
        "\t\t\t\tZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm",
        "\t\t\t\tAaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw",
        "\t\t\t\tZnks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa",
        "\t\t\t\tz/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ",
        "\t\t\t\tajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ",
        "\t\t\t\tAgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG",
        "\t\t\t\tSIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI",
        "\t\t\t\tQJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA",
        "\t\t\t\taTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051",
        "\t\t\t\tgGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA",
        "\t\t\t\tqzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o",
        "\t\t\t\tXUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5",
        "\t\t\t\t-----END CERTIFICATE-----",
        "\t\tmetrics:",
        "\t\t\tauth_key: topSecret",
        "\t\t\trole: hawkular",
        "\t\t\thostname: example.com",
        "\t\t\tport: 443",
        "\t\t\tverify_ssl: true",
        "\t\t\tsecurity_protocol: ssl-with-validation-custom-ca",
        "\t\t\tcertificate_authority: |",
        "\t\t\t\t-----BEGIN CERTIFICATE-----",
        "\t\t\t\tFAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu",
        "\t\t\t\tc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw",
        "\t\t\t\tMTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw",
        "\t\t\t\tggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S",
        "\t\t\t\tZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm",
        "\t\t\t\tAaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw",
        "\t\t\t\tZnks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa",
        "\t\t\t\tz/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ",
        "\t\t\t\tajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ",
        "\t\t\t\tAgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG",
        "\t\t\t\tSIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI",
        "\t\t\t\tQJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA",
        "\t\t\t\taTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051",
        "\t\t\t\tgGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA",
        "\t\t\t\tqzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o",
        "\t\t\t\tXUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5",
        "\t\t\t\t-----END CERTIFICATE-----",
        "\t\tmanageiq_connection:",
        "\t\t\turl: 'https://127.0.0.1:80'",
        "\t\t\tusername: admin",
        "\t\t\tpassword: password",
        "\t\t\tverify_ssl: true",
        ""
      ]
    },
    "manageiq_user": {
      "prefix": "manageiq_user-6",
      "description": "Update email of user in ManageIQ using a token",
      "body": [
        "- name: Update email of user in ManageIQ using a token",
        "\tmanageiq_user:",
        "\t\tuserid: jdoe",
        "\t\temail: jaustine@example.com",
        "\t\tmanageiq_connection:",
        "\t\t\turl: 'http://127.0.0.1:3000'",
        "\t\t\ttoken: sometoken",
        "\t\t\tverify_ssl: false",
        ""
      ]
    },
    "mattermost": {
      "prefix": "mattermost-2",
      "description": "Send notification message via Mattermost all options",
      "body": [
        "- name: Send notification message via Mattermost all options",
        "\tmattermost:",
        "\t\turl: 'http://mattermost.example.com'",
        "\t\tapi_key: my_api_key",
        "\t\ttext: '{{ inventory_hostname }} completed'",
        "\t\tchannel: notifications",
        "\t\tusername: 'Ansible on {{ inventory_hostname }}'",
        "\t\ticon_url: 'http://www.example.com/some-image-file.png'",
        ""
      ]
    },
    "maven_artifact": {
      "prefix": "maven_artifact-5",
      "body": [
        "- maven_artifact:",
        "\t\tversion: latest",
        "\t\tartifact_id: spring-core",
        "\t\tgroup_id: org.springframework",
        "\t\tdest: /tmp/",
        "\t\tkeep_name: 'yes'",
        ""
      ]
    },
    "meta": {
      "prefix": "meta-1",
      "body": [
        "- template:",
        "\t\tsrc: new.j2",
        "\t\tdest: /etc/config.txt",
        "\tnotify: myhandler",
        ""
      ]
    },
    "modprobe": {
      "prefix": "modprobe-2",
      "body": [
        "- modprobe:",
        "\t\tname: dummy",
        "\t\tstate: present",
        "\t\tparams: numdummies=2",
        ""
      ]
    },
    "mongodb_parameter": {
      "prefix": "mongodb_parameter-1",
      "body": [
        "- mongodb_parameter:",
        "\t\tparam: syncdelay",
        "\t\tvalue: 60",
        "\t\tparam_type: int",
        ""
      ]
    },
    "mongodb_user": {
      "prefix": "mongodb_user-4",
      "body": [
        "- mongodb_user:",
        "\t\tdatabase: burgers",
        "\t\tname: ben",
        "\t\tpassword: 12345",
        "\t\troles: read",
        "\t\tstate: present",
        ""
      ]
    },
    "monit": {
      "prefix": "monit-1",
      "body": [
        "- monit:",
        "\t\tname: httpd",
        "\t\tstate: started",
        ""
      ]
    },
    "mount": {
      "prefix": "mount-3",
      "description": "Mount up device by UUID",
      "body": [
        "- name: Mount up device by UUID",
        "\tmount:",
        "\t\tpath: /home",
        "\t\tsrc: UUID=b3e48f45-f933-4c8e-a700-22a159ec9077",
        "\t\tfstype: xfs",
        "\t\topts: noatime",
        "\t\tstate: present",
        ""
      ]
    },
    "mqtt": {
      "prefix": "mqtt-1",
      "body": [
        "- mqtt:",
        "\t\ttopic: 'service/ansible/{{ ansible_hostname }}'",
        "\t\tpayload: 'Hello at {{ ansible_date_time.iso8601 }}'",
        "\t\tqos: 0",
        "\t\tretain: false",
        "\t\tclient_id: ans001",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "mssql_db": {
      "prefix": "mssql_db-3",
      "body": [
        "- mssql_db:",
        "\t\tname: my_db",
        "\t\tstate: import",
        "\t\ttarget: /tmp/dump.sql",
        ""
      ]
    },
    "mysql_db": {
      "prefix": "mysql_db-2",
      "description": "Copy database dump file",
      "body": [
        "- name: Copy database dump file",
        "\tcopy:",
        "\t\tsrc: dump.sql.bz2",
        "\t\tdest: /tmp",
        ""
      ]
    },
    "mysql_replication": {
      "prefix": "mysql_replication-4",
      "body": [
        "- mysql_replication:",
        "\t\tmode: getslave",
        "\t\tlogin_host: ansible.example.com",
        "\t\tlogin_port: 3308",
        ""
      ]
    },
    "mysql_user": {
      "prefix": "mysql_user-10",
      "body": [
        "- mysql_user:",
        "\t\tname: bob",
        "\t\tpassword: 12345",
        "\t\tpriv: '*.*:USAGE'",
        "\t\tstate: present",
        ""
      ]
    },
    "mysql_variables": {
      "prefix": "mysql_variables-2",
      "body": [
        "- mysql_variables:",
        "\t\tvariable: read_only",
        "\t\tvalue: 1",
        ""
      ]
    },
    "na_cdot_aggregate": {
      "prefix": "na_cdot_aggregate-2",
      "description": "Manage Aggregates",
      "body": [
        "- name: Manage Aggregates",
        "\tna_cdot_aggregate:",
        "\t\tstate: present",
        "\t\tname: ansibleAggr",
        "\t\thostname: '{{ netapp_hostname }}'",
        "\t\tusername: '{{ netapp_username }}'",
        "\t\tpassword: '{{ netapp_password }}'",
        ""
      ]
    },
    "na_cdot_license": {
      "prefix": "na_cdot_license-2",
      "description": "Remove licenses",
      "body": [
        "- name: Remove licenses",
        "\tna_cdot_license:",
        "\t\thostname: '{{ netapp_hostname }}'",
        "\t\tusername: '{{ netapp_username }}'",
        "\t\tpassword: '{{ netapp_password }}'",
        "\t\tremove_unused: false",
        "\t\tremove_expired: true",
        "\t\tserial_number: null",
        "\t\tlicenses:",
        "\t\t\tnfs: remove",
        ""
      ]
    },
    "na_cdot_lun": {
      "prefix": "na_cdot_lun-2",
      "description": "Resize Lun",
      "body": [
        "- name: Resize Lun",
        "\tna_cdot_lun:",
        "\t\tstate: present",
        "\t\tname: ansibleLUN",
        "\t\tforce_resize: true",
        "\t\tflexvol_name: ansibleVolume",
        "\t\tvserver: ansibleVServer",
        "\t\tsize: 5",
        "\t\tsize_unit: gb",
        "\t\thostname: '{{ netapp_hostname }}'",
        "\t\tusername: '{{ netapp_username }}'",
        "\t\tpassword: '{{ netapp_password }}'",
        ""
      ]
    },
    "na_cdot_qtree": {
      "prefix": "na_cdot_qtree-2",
      "description": "Rename QTree",
      "body": [
        "- name: Rename QTree",
        "\tna_cdot_qtree:",
        "\t\tstate: present",
        "\t\tname: ansibleQTree",
        "\t\tflexvol_name: ansibleVolume",
        "\t\tvserver: ansibleVServer",
        "\t\thostname: '{{ netapp_hostname }}'",
        "\t\tusername: '{{ netapp_username }}'",
        "\t\tpassword: '{{ netapp_password }}'",
        ""
      ]
    },
    "na_cdot_svm": {
      "prefix": "na_cdot_svm-1",
      "description": "",
      "body": [
        "- name: Create SVM",
        "      na_cdot_svm:",
        "        state: present",
        "        name: ansibleVServer",
        "        root_volume: vol1",
        "        root_volume_aggregate: aggr1",
        "        root_volume_security_style: mixed",
        "        hostname: \"{{ netapp_hostname }}\"",
        "        username: \"{{ netapp_username }}\"",
        "        password: \"{{ netapp_password }}\""
      ]
    },
    "na_cdot_user": {
      "prefix": "na_cdot_user-1",
      "description": "",
      "body": [
        "- name: Create User",
        "      na_cdot_user:",
        "        state: present",
        "        name: SampleUser",
        "        application: ssh",
        "        authentication_method: password",
        "        set_password: apn1242183u1298u41",
        "        role_name: vsadmin",
        "        vserver: ansibleVServer",
        "        hostname: \"{{ netapp_hostname }}\"",
        "        username: \"{{ netapp_username }}\"",
        "        password: \"{{ netapp_password }}\""
      ]
    },
    "na_cdot_user_role": {
      "prefix": "na_cdot_user_role-1",
      "description": "",
      "body": [
        "- name: Create User Role",
        "      na_cdot_user_role:",
        "        state: present",
        "        name: ansibleRole",
        "        command_directory_name: DEFAULT",
        "        access_level: none",
        "        vserver: ansibleVServer",
        "        hostname: \"{{ netapp_hostname }}\"",
        "        username: \"{{ netapp_username }}\"",
        "        password: \"{{ netapp_password }}\""
      ]
    },
    "na_cdot_volume": {
      "prefix": "na_cdot_volume-1",
      "description": "",
      "body": [
        "- name: Create FlexVol",
        "      na_cdot_volume:",
        "        state: present",
        "        name: ansibleVolume",
        "        infinite: False",
        "        aggregate_name: aggr1",
        "        size: 20",
        "        size_unit: mb",
        "        vserver: ansibleVServer",
        "        hostname: \"{{ netapp_hostname }}\"",
        "        username: \"{{ netapp_username }}\"",
        "        password: \"{{ netapp_password }}\""
      ]
    },
    "nagios": {
      "prefix": "nagios-17",
      "body": [
        "- nagios:",
        "\t\taction: command",
        "\t\tcommand: DISABLE_FAILURE_PREDICTION",
        ""
      ]
    },
    "nclu": {
      "prefix": "nclu-3",
      "description": "Atomically add an interface",
      "body": [
        "- name: Atomically add an interface",
        "\tnclu:",
        "\t\tcommands:",
        "\t\t\t- add int swp1",
        "\t\tatomic: true",
        "\t\tdescription: Ansible - add swp1",
        ""
      ]
    },
    "net_banner": {
      "prefix": "net_banner-3",
      "description": "Configure banner from file",
      "body": [
        "- name: Configure banner from file",
        "\tnet_banner:",
        "\t\tbanner: motd",
        "\t\ttext: '{{ lookup(''file'', ''./config_partial/raw_banner.cfg'') }}'",
        "\t\tstate: present",
        ""
      ]
    },
    "net_interface": {
      "prefix": "net_interface-8",
      "description": "Config + intent",
      "body": [
        "- name: Config + intent",
        "\tnet_interface:",
        "\t\tname: fxp0",
        "\t\tenabled: false",
        "\t\tstate: down",
        ""
      ]
    },
    "net_l2_interface": {
      "prefix": "net_l2_interface-2",
      "description": "remove Layer-2 interface configuration",
      "body": [
        "- name: remove Layer-2 interface configuration",
        "\tnet_l2_interface:",
        "\t\tname: gigabitethernet0/0/1",
        "\t\tstate: absent",
        ""
      ]
    },
    "net_l3_interface": {
      "prefix": "net_l3_interface-4",
      "description": "Remove IP addresses on aggregate",
      "body": [
        "- name: Remove IP addresses on aggregate",
        "\tnet_l3_interface:",
        "\t\taggregate:",
        "\t\t\t- name: eth1",
        "\t\t\t\tipv4: 192.168.2.10/24",
        "\t\t\t- name: eth2",
        "\t\t\t\tipv4: 192.168.3.10/24",
        "\t\t\t\tipv6: 'fd5d:12c9:2201:1::1/64'",
        "\t\tstate: absent",
        ""
      ]
    },
    "net_linkagg": {
      "prefix": "net_linkagg-4",
      "description": "Remove aggregate of linkagg definitions",
      "body": [
        "- name: Remove aggregate of linkagg definitions",
        "\tnet_linkagg:",
        "\t\taggregate:",
        "\t\t\t- name: bond0",
        "\t\t\t- name: bond1",
        "\t\tstate: absent",
        ""
      ]
    },
    "net_lldp": {
      "prefix": "net_lldp-2",
      "description": "Disable LLDP service",
      "body": [
        "- name: Disable LLDP service",
        "\tnet_lldp:",
        "\t\tstate: lldp",
        ""
      ]
    },
    "net_lldp_interface": {
      "prefix": "net_lldp_interface-6",
      "description": "Delete aggregate of LLDP interface configurations",
      "body": [
        "- name: Delete aggregate of LLDP interface configurations",
        "\tnet_lldp_interface:",
        "\t\taggregate:",
        "\t\t\t- name: eth1",
        "\t\t\t- name: eth2",
        "\t\tstate: absent",
        ""
      ]
    },
    "net_logging": {
      "prefix": "net_logging-4",
      "description": "Configure file logging using aggregate",
      "body": [
        "- name: Configure file logging using aggregate",
        "\tnet_logging:",
        "\t\tdest: file",
        "\t\taggregate:",
        "\t\t\t- name: test-1",
        "\t\t\t\tfacility: pfe",
        "\t\t\t\tlevel: critical",
        "\t\t\t- name: test-2",
        "\t\t\t\tfacility: kernel",
        "\t\t\t\tlevel: emergency",
        ""
      ]
    },
    "net_ping": {
      "prefix": "net_ping-5",
      "description": "Test reachability to 10.40.40.40 using prod vrf and setting count and source",
      "body": [
        "- name: Test reachability to 10.40.40.40 using prod vrf and setting count and source",
        "\tnet_ping:",
        "\t\tprovider: '{{ provider }}'",
        "\t\tdest: 10.40.40.40",
        "\t\tsource: loopback0",
        "\t\tvrf: prod",
        "\t\tcount: 20",
        ""
      ]
    },
    "net_static_route": {
      "prefix": "net_static_route-4",
      "description": "Remove static route collections",
      "body": [
        "- name: Remove static route collections",
        "\tnet_static_route:",
        "\t\taggregate:",
        "\t\t\t- prefix: 172.24.1.0/24",
        "\t\t\t\tnext_hop: 192.168.42.64",
        "\t\t\t- prefix: 172.24.3.0/24",
        "\t\t\t\tnext_hop: 192.168.42.64",
        "\t\tstate: absent",
        ""
      ]
    },
    "net_system": {
      "prefix": "net_system-4",
      "description": "configure name servers",
      "body": [
        "- name: configure name servers",
        "\tnet_system:",
        "\t\tname_servers:",
        "\t\t\t- 8.8.8.8",
        "\t\t\t- 8.8.4.4",
        ""
      ]
    },
    "net_user": {
      "prefix": "net_user-4",
      "description": "Change Password for User netop",
      "body": [
        "- name: Change Password for User netop",
        "\tnet_user:",
        "\t\tname: netop",
        "\t\tpassword: '{{ new_password }}'",
        "\t\tupdate_password: always",
        "\t\tstate: present",
        ""
      ]
    },
    "net_vlan": {
      "prefix": "net_vlan-3",
      "description": "configure VLAN state",
      "body": [
        "- name: configure VLAN state",
        "\tnet_vlan:",
        "\t\tvlan_id: null",
        "\t\tstate: suspend",
        ""
      ]
    },
    "net_vrf": {
      "prefix": "net_vrf-4",
      "description": "Delete aggregate of VRFs",
      "body": [
        "- name: Delete aggregate of VRFs",
        "\tnet_vrf:",
        "\t\taggregate:",
        "\t\t\t- name: test2",
        "\t\t\t- name: test3",
        "\t\t\t- name: test4",
        "\t\t\t- name: test5",
        "\t\tstate: absent",
        ""
      ]
    },
    "netapp_e_amg": {
      "prefix": "netapp_e_amg-1",
      "description": "",
      "body": [
        "- name: AMG removal",
        "      na_eseries_amg:",
        "        state: absent",
        "        ssid: \"{{ ssid }}\"",
        "        secondaryArrayId: \"{{amg_secondaryArrayId}}\"",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        new_name: \"{{amg_array_name}}\"",
        "        name: \"{{amg_name}}\"",
        "      when: amg_create"
      ]
    },
    "netapp_e_amg_role": {
      "prefix": "netapp_e_amg_role-1",
      "description": "",
      "body": [
        "- name: Update the role of a storage array",
        "      netapp_e_amg_role:",
        "        name: updating amg role",
        "        role: primary",
        "        ssid: \"{{ ssid }}\"",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        validate_certs: \"{{ netapp_api_validate_certs }}\""
      ]
    },
    "netapp_e_amg_sync": {
      "prefix": "netapp_e_amg_sync-1",
      "description": "",
      "body": [
        "- name: start AMG async",
        "      netapp_e_amg_sync:",
        "        name: \"{{ amg_sync_name }}\"",
        "        state: running",
        "        ssid: \"{{ ssid }}\"",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\""
      ]
    },
    "netapp_e_auth": {
      "prefix": "netapp_e_auth-1",
      "description": "Test module",
      "body": [
        "- name: Test module",
        "\tnetapp_e_auth:",
        "\t\tname: trex",
        "\t\tcurrent_password: OldPasswd",
        "\t\tnew_password: NewPasswd",
        "\t\tset_admin: 'yes'",
        "\t\tapi_url: '{{ netapp_api_url }}'",
        "\t\tapi_username: '{{ netapp_api_username }}'",
        "\t\tapi_password: '{{ netapp_api_password }}'",
        ""
      ]
    },
    "netapp_e_facts": {
      "prefix": "netapp_e_facts-1",
      "description": "Get array facts",
      "body": [
        "- name: Get array facts",
        "\tnetapp_e_facts:",
        "\t\tarray_id: '{{ netapp_array_id }}'",
        "\t\tapi_url: '{{ netapp_api_url }}'",
        "\t\tapi_username: '{{ netapp_api_username }}'",
        "\t\tapi_password: '{{ netapp_api_password }}'",
        "\t\tvalidate_certs: '{{ netapp_api_validate_certs }}'",
        ""
      ]
    },
    "netapp_e_flashcache": {
      "prefix": "netapp_e_flashcache-1",
      "description": "",
      "body": [
        "- name: Flash Cache",
        "      netapp_e_flashcache:",
        "        ssid: \"{{ ssid }}\"",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        validate_certs: \"{{ netapp_api_validate_certs }}\"",
        "        name: SSDCacheBuiltByAnsible"
      ]
    },
    "netapp_e_host": {
      "prefix": "netapp_e_host-1",
      "description": "",
      "body": [
        "- name: Set Host Info",
        "      netapp_e_host:",
        "        ssid: \"{{ ssid }}\"",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        name: \"{{ host_name }}\"",
        "        host_type_index: \"{{ host_type_index }}\""
      ]
    },
    "netapp_e_hostgroup": {
      "prefix": "netapp_e_hostgroup-1",
      "description": "",
      "body": [
        "- name: Configure Hostgroup",
        "      netapp_e_hostgroup:",
        "        ssid: \"{{ ssid }}\"",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        validate_certs: \"{{ netapp_api_validate_certs }}\"",
        "        state: present"
      ]
    },
    "netapp_e_lun_mapping": {
      "prefix": "netapp_e_lun_mapping-1",
      "description": "Lun Mapping Example",
      "body": [
        "- name: Lun Mapping Example",
        "\tnetapp_e_lun_mapping:",
        "\t\tstate: present",
        "\t\tssid: 1",
        "\t\tlun: 12",
        "\t\ttarget: Wilson",
        "\t\tvolume_name: Colby1",
        "\t\ttarget_type: group",
        "\t\tapi_url: '{{ netapp_api_url }}'",
        "\t\tapi_username: '{{ netapp_api_username }}'",
        "\t\tapi_password: '{{ netapp_api_password }}'",
        ""
      ]
    },
    "netapp_e_snapshot_group": {
      "prefix": "netapp_e_snapshot_group-1",
      "description": "",
      "body": [
        "- name: Configure Snapshot group",
        "      netapp_e_snapshot_group:",
        "        ssid: \"{{ ssid }}\"",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        validate_certs: \"{{ netapp_api_validate_certs }}\"",
        "        base_volume_name: SSGroup_test",
        "        name=: OOSS_Group",
        "        repo_pct: 20",
        "        warning_threshold: 85",
        "        delete_limit: 30",
        "        full_policy: purgepit",
        "        storage_pool_name: Disk_Pool_1",
        "        rollback_priority: medium"
      ]
    },
    "netapp_e_snapshot_images": {
      "prefix": "netapp_e_snapshot_images-1",
      "description": "",
      "body": [
        "- name: Create Snapshot",
        "      netapp_e_snapshot_images:",
        "        ssid: \"{{ ssid }}\"",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        validate_certs: \"{{ validate_certs }}\"",
        "        snapshot_group: \"3300000060080E5000299C24000005B656D9F394\"",
        "        state: 'create'"
      ]
    },
    "netapp_e_snapshot_volume": {
      "prefix": "netapp_e_snapshot_volume-1",
      "description": "",
      "body": [
        "- name: Snapshot volume",
        "      netapp_e_snapshot_volume:",
        "        ssid: \"{{ ssid }}\"",
        "        api_url: \"{{ netapp_api_url }}/\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        state: present",
        "        storage_pool_name: \"{{ snapshot_volume_storage_pool_name }}\"",
        "        snapshot_image_id: \"{{ snapshot_volume_image_id }}\"",
        "        name: \"{{ snapshot_volume_name }}\""
      ]
    },
    "netapp_e_storage_system": {
      "prefix": "netapp_e_storage_system-1",
      "description": "Presence of storage system",
      "body": [
        "- name: Presence of storage system",
        "\tnetapp_e_storage_system:",
        "\t\tssid: '{{ item.key }}'",
        "\t\tstate: present",
        "\t\tapi_url: '{{ netapp_api_url }}'",
        "\t\tapi_username: '{{ netapp_api_username }}'",
        "\t\tapi_password: '{{ netapp_api_password }}'",
        "\t\tvalidate_certs: '{{ netapp_api_validate_certs }}'",
        "\t\tcontroller_addresses:",
        "\t\t\t- '{{ item.value.address1 }}'",
        "\t\t\t- '{{ item.value.address2 }}'",
        "\twith_dict: '{{ storage_systems }}'",
        "\twhen: check_storage_system",
        ""
      ]
    },
    "netapp_e_storagepool": {
      "prefix": "netapp_e_storagepool-1",
      "description": "",
      "body": [
        "- name: No disk groups",
        "      netapp_e_storagepool:",
        "        ssid: \"{{ ssid }}\"",
        "        name: \"{{ item }}\"",
        "        state: absent",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        validate_certs: \"{{ netapp_api_validate_certs }}\""
      ]
    },
    "netapp_e_volume": {
      "prefix": "netapp_e_volume-1",
      "description": "",
      "body": [
        "- name: No thin volume",
        "      netapp_e_volume:",
        "        ssid: \"{{ ssid }}\"",
        "        name: NewThinVolumeByAnsible",
        "        state: absent",
        "        log_path: /tmp/volume.log",
        "        api_url: \"{{ netapp_api_url }}\"",
        "        api_username: \"{{ netapp_api_username }}\"",
        "        api_password: \"{{ netapp_api_password }}\"",
        "        validate_certs: \"{{ netapp_api_validate_certs }}\"",
        "      when: check_volume"
      ]
    },
    "netapp_e_volume_copy": {
      "prefix": "netapp_e_volume_copy-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "netconf_config": {
      "prefix": "netconf_config-2",
      "description": "wipe ntp configuration",
      "body": [
        "- name: wipe ntp configuration",
        "\tnetconf_config:",
        "\t\thost: 10.0.0.1",
        "\t\tusername: admin",
        "\t\tpassword: admin",
        "\t\txml: |",
        "\t\t\t<config xmlns:xc=\"urn:ietf:params:xml:ns:netconf:base:1.0\">",
        "\t\t\t\t\t<system xmlns=\"urn:ietf:params:xml:ns:yang:ietf-system\">",
        "\t\t\t\t\t\t\t<ntp>",
        "\t\t\t\t\t\t\t\t\t<enabled>false</enabled>",
        "\t\t\t\t\t\t\t\t\t<server operation=\"remove\">",
        "\t\t\t\t\t\t\t\t\t\t\t<name>ntp1</name>",
        "\t\t\t\t\t\t\t\t\t</server>",
        "\t\t\t\t\t\t\t</ntp>",
        "\t\t\t\t\t</system>",
        "\t\t\t</config>",
        ""
      ]
    },
    "netscaler": {
      "prefix": "netscaler-3",
      "body": [
        "- netscaler:",
        "\t\tnsc_host: nsc.example.com",
        "\t\tuser: apiuser",
        "\t\tpassword: apipass",
        "\t\tname: 'local:8080'",
        "\t\ttype: service",
        "\t\taction: disable",
        ""
      ]
    },
    "netscaler_cs_policy": {
      "prefix": "netscaler_cs_policy-1",
      "description": "Create url cs policy",
      "body": [
        "- name: Create url cs policy",
        "\tdelegate_to: localhost",
        "\tnetscaler_cs_policy:",
        "\t\tnsip: 172.18.0.2",
        "\t\tnitro_user: nsroot",
        "\t\tnitro_pass: nsroot",
        "\t\tvalidate_certs: 'no'",
        ""
      ]
    },
    "netscaler_gslb_service": {
      "prefix": "netscaler_gslb_service-1",
      "description": "Setup gslb service 2",
      "body": [
        "- name: Setup gslb service 2",
        ""
      ]
    },
    "netscaler_gslb_site": {
      "prefix": "netscaler_gslb_site-1",
      "description": "Setup gslb site",
      "body": [
        "- name: Setup gslb site",
        "\tdelegate_to: localhost",
        "\tnetscaler_gslb_site:",
        "\t\tnsip: 172.18.0.2",
        "\t\tnitro_user: nsroot",
        "\t\tnitro_pass: nsroot",
        ""
      ]
    },
    "netscaler_lb_monitor": {
      "prefix": "netscaler_lb_monitor-1",
      "description": "Set lb monitor",
      "body": [
        "- name: Set lb monitor",
        "\tlocal_action:",
        "\t\tnsip: 172.18.0.2",
        "\t\tnitro_user: nsroot",
        "\t\tnitro_pass: nsroot",
        "\t\tvalidate_certs: 'no'",
        ""
      ]
    },
    "netscaler_save_config": {
      "prefix": "netscaler_save_config-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "netscaler_server": {
      "prefix": "netscaler_server-1",
      "description": "Setup server",
      "body": [
        "- name: Setup server",
        "\tdelegate_to: localhost",
        "\tnetscaler_server:",
        "\t\tnsip: 172.18.0.2",
        "\t\tnitro_user: nsroot",
        "\t\tnitro_pass: nsroot",
        ""
      ]
    },
    "netscaler_ssl_certkey": {
      "prefix": "netscaler_ssl_certkey-1",
      "description": "Setup ssl certkey",
      "body": [
        "- name: Setup ssl certkey",
        "\tdelegate_to: localhost",
        "\tnetscaler_ssl_certkey:",
        "\t\tnitro_user: nsroot",
        "\t\tnitro_pass: nsroot",
        "\t\tnsip: 172.18.0.2",
        ""
      ]
    },
    "newrelic_deployment": {
      "prefix": "newrelic_deployment-1",
      "body": [
        "- newrelic_deployment:",
        "\t\ttoken: AAAAAA",
        "\t\tapp_name: myapp",
        "\t\tuser: ansible deployment",
        "\t\trevision: '1.0'",
        ""
      ]
    },
    "nexmo": {
      "prefix": "nexmo-1",
      "description": "Send notification message via Nexmo",
      "body": [
        "- name: Send notification message via Nexmo",
        "\tnexmo:",
        "\t\tapi_key: 640c8a53",
        "\t\tapi_secret: 0ce239a6",
        "\t\tsrc: 12345678901",
        "\t\tdest:",
        "\t\t\t- 10987654321",
        "\t\t\t- 16789012345",
        "\t\tmsg: '{{ inventory_hostname }} completed'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "nginx_status_facts": {
      "prefix": "nginx_status_facts-2",
      "description": "get current http stats",
      "body": [
        "- name: get current http stats",
        "\tnginx_status_facts:",
        "\t\turl: 'http://localhost/nginx_status'",
        "\t\ttimeout: 20",
        ""
      ]
    },
    "npm": {
      "prefix": "npm-8",
      "description": "Install packages based on package.json using the npm installed with nvm v0.10.1.",
      "body": [
        "- name: >-",
        "\t\tInstall packages based on package.json using the npm installed with nvm",
        "\t\tv0.10.1.",
        "\tnpm:",
        "\t\tpath: /app/location",
        "\t\texecutable: /opt/nvm/v0.10.1/bin/npm",
        "\t\tstate: present",
        ""
      ]
    },
    "nsupdate": {
      "prefix": "nsupdate-3",
      "description": "Remove puppet.example.org CNAME",
      "body": [
        "- name: Remove puppet.example.org CNAME",
        "\tnsupdate:",
        "\t\tkey_name: nsupdate",
        "\t\tkey_secret: +bFQtBCta7j2vWkjPkAFtgA==",
        "\t\tserver: 10.1.1.1",
        "\t\tzone: example.org",
        "\t\trecord: puppet",
        "\t\ttype: CNAME",
        "\t\tstate: absent",
        ""
      ]
    },
    "nxos_acl": {
      "prefix": "nxos_acl-1",
      "body": [
        "- nxos_acl:",
        "\t\tname: ANSIBLE",
        "\t\tseq: 10",
        "\t\taction: permit",
        "\t\tproto: tcp",
        "\t\tsrc: 1.1.1.1/24",
        "\t\tdest: any",
        "\t\tstate: present",
        "\t\tprovider: '{{ nxos_provider }}'",
        ""
      ]
    },
    "nxos_acl_interface": {
      "prefix": "nxos_acl_interface-1",
      "description": "apply egress acl to ethernet1/41",
      "body": [
        "- name: apply egress acl to ethernet1/41",
        "\tnxos_acl_interface:",
        "\t\tname: ANSIBLE",
        "\t\tinterface: ethernet1/41",
        "\t\tdirection: egress",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_banner": {
      "prefix": "nxos_banner-1",
      "description": "configure the exec banner",
      "body": [
        "- name: configure the exec banner",
        "\tnxos_banner:",
        "\t\tbanner: exec",
        "\t\ttext: |",
        "\t\t\tthis is my exec banner",
        "\t\t\tthat contains a multiline",
        "\t\t\tstring",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_bgp": {
      "prefix": "nxos_bgp-1",
      "description": "Configure a simple ASN",
      "body": [
        "- name: Configure a simple ASN",
        "\tnxos_bgp:",
        "\t\tasn: 65535",
        "\t\tvrf: test",
        "\t\trouter_id: 1.1.1.1",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_bgp_af": {
      "prefix": "nxos_bgp_af-1",
      "body": [
        "- nxos_bgp_af:",
        "\t\tasn: 65535",
        "\t\tvrf: TESTING",
        "\t\tafi: ipv4",
        "\t\tsafi: unicast",
        "\t\tadvertise_l2vpn_evpn: true",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_bgp_neighbor": {
      "prefix": "nxos_bgp_neighbor-1",
      "body": [
        "- nxos_bgp_neighbor:",
        "\t\tasn: 65535",
        "\t\tneighbor: 3.3.3.3",
        "\t\tlocal_as: 20",
        "\t\tremote_as: 30",
        "\t\tdescription: just a description",
        "\t\tupdate_source: Ethernet1/3",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_bgp_neighbor_af": {
      "prefix": "nxos_bgp_neighbor_af-1",
      "description": "configure RR client",
      "body": [
        "- name: configure RR client",
        "\tnxos_bgp_neighbor_af:",
        "\t\tasn: 65535",
        "\t\tneighbor: 3.3.3.3",
        "\t\tafi: ipv4",
        "\t\tsafi: unicast",
        "\t\troute_reflector_client: true",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_command": {
      "prefix": "nxos_command-1",
      "description": "# Note: examples below use the following provider dict to handle#       transport and authentication to the node.",
      "body": [
        "null",
        ""
      ]
    },
    "nxos_config": {
      "prefix": "nxos_config-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "nxos_evpn_global": {
      "prefix": "nxos_evpn_global-1",
      "body": [
        "- nxos_evpn_global:",
        "\t\tnv_overlay_evpn: true",
        ""
      ]
    },
    "nxos_evpn_vni": {
      "prefix": "nxos_evpn_vni-1",
      "description": "vni configuration",
      "body": [
        "- name: vni configuration",
        "\tnxos_evpn_vni:",
        "\t\tvni: 6000",
        "\t\troute_distinguisher: '60:10'",
        "\t\troute_target_import:",
        "\t\t\t- '5000:10'",
        "\t\t\t- '4100:100'",
        "\t\troute_target_export: auto",
        "\t\troute_target_both: default",
        ""
      ]
    },
    "nxos_facts": {
      "prefix": "nxos_facts-3",
      "body": [
        "- nxos_facts:",
        "\t\tgather_subset:",
        "\t\t\t- '!hardware'",
        ""
      ]
    },
    "nxos_feature": {
      "prefix": "nxos_feature-3",
      "description": "Ensure vpc is enabled",
      "body": [
        "- name: Ensure vpc is enabled",
        "\tnxos_feature:",
        "\t\tfeature: vpc",
        "\t\tstate: enabled",
        ""
      ]
    },
    "nxos_file_copy": {
      "prefix": "nxos_file_copy-1",
      "body": [
        "- nxos_file_copy:",
        "\t\tlocal_file: ./test_file.txt",
        "\t\tremote_file: test_file.txt",
        "\t\tprovider: '{{ cli }}'",
        ""
      ]
    },
    "nxos_gir": {
      "prefix": "nxos_gir-7",
      "body": [
        "- nxos_gir:",
        "\t\tsystem_mode_maintenance_timeout: 30",
        "\t\tstate: absent",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        ""
      ]
    },
    "nxos_gir_profile_management": {
      "prefix": "nxos_gir_profile_management-2",
      "body": [
        "- nxos_gir_profile_management:",
        "\t\tmode: maintenance",
        "\t\tstate: absent",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        ""
      ]
    },
    "nxos_hsrp": {
      "prefix": "nxos_hsrp-3",
      "description": "Remove HSRP config for given interface, group, and VIP",
      "body": [
        "- name: 'Remove HSRP config for given interface, group, and VIP'",
        "\tnxos_hsrp:",
        "\t\tgroup: 10",
        "\t\tinterface: vlan10",
        "\t\tvip: 10.1.1.1",
        "\t\thost: 68.170.147.165",
        "\t\tstate: absent",
        ""
      ]
    },
    "nxos_igmp": {
      "prefix": "nxos_igmp-3",
      "description": "Restart the igmp process",
      "body": [
        "- name: Restart the igmp process",
        "\tnxos_igmp:",
        "\t\trestart: true",
        "\t\thost: '{{ inventory_hostname }}'",
        ""
      ]
    },
    "nxos_igmp_interface": {
      "prefix": "nxos_igmp_interface-1",
      "body": [
        "- nxos_igmp_interface:",
        "\t\tinterface: ethernet1/32",
        "\t\tstartup_query_interval: 30",
        "\t\tstate: present",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        "\t\thost: '{{ inventory_hostname }}'",
        ""
      ]
    },
    "nxos_igmp_snooping": {
      "prefix": "nxos_igmp_snooping-2",
      "body": [
        "- nxos_igmp_snooping:",
        "\t\tgroup_timeout: never",
        "\t\tsnooping: true",
        "\t\tlink_local_grp_supp: false",
        "\t\toptimize_mcast_flood: false",
        "\t\treport_supp: true",
        "\t\tv3_report_supp: true",
        ""
      ]
    },
    "nxos_install_os": {
      "prefix": "nxos_install_os-1",
      "body": [
        "- block:",
        "\t\t- name: Install OS",
        "\t\t\tnxos_install_os:",
        "\t\t\t\tsystem_image_file: nxos.7.0.3.I2.2d.bin",
        "\trescue:",
        "\t\t- name: Wait for device to perform checks",
        "\t\t\twait_for:",
        "\t\t\t\tport: 22",
        "\t\t\t\tstate: stopped",
        "\t\t\t\ttimeout: 300",
        "\t\t\t\tdelay: 60",
        "\t\t- name: Wait for device to come back up",
        "\t\t\twait_for:",
        "\t\t\t\tport: 22",
        "\t\t\t\tstate: started",
        "\t\t\t\ttimeout: 300",
        "\t\t\t\tdelay: 60",
        "\t\t- name: Check installed OS",
        "\t\t\tnxos_command:",
        "\t\t\t\tcommands:",
        "\t\t\t\t\t- show version",
        "\t\t\tregister: output",
        "\t\t- assert:",
        "\t\t\t\tthat:",
        "\t\t\t\t\t- 'output[''stdout''][0][''kickstart_ver_str''] == ''7.0(3)I4(1)'''",
        ""
      ]
    },
    "nxos_interface": {
      "prefix": "nxos_interface-6",
      "description": "Admin down all loopback interfaces",
      "body": [
        "- name: Admin down all loopback interfaces",
        "\tnxos_interface:",
        "\t\tinterface: looback 0-1023",
        "\t\tadmin_state: down",
        ""
      ]
    },
    "nxos_interface_ospf": {
      "prefix": "nxos_interface_ospf-1",
      "body": [
        "- nxos_interface_ospf:",
        "\t\tinterface: ethernet1/32",
        "\t\tospf: 1",
        "\t\tarea: 1",
        "\t\tcost: default",
        ""
      ]
    },
    "nxos_ip_interface": {
      "prefix": "nxos_ip_interface-5",
      "description": "Configure ipv4 address as secondary if needed",
      "body": [
        "- name: Configure ipv4 address as secondary if needed",
        "\tnxos_ip_interface:",
        "\t\tinterface: Ethernet1/32",
        "\t\ttransport: nxapi",
        "\t\tversion: v4",
        "\t\tstate: present",
        "\t\tallow_secondary: true",
        "\t\taddr: 21.21.21.21",
        "\t\tmask: 24",
        ""
      ]
    },
    "nxos_logging": {
      "prefix": "nxos_logging-1",
      "description": "configure console logging with level",
      "body": [
        "- name: configure console logging with level",
        "\tnxos_logging:",
        "\t\tdest: console",
        "\t\tlevel: 2",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_mtu": {
      "prefix": "nxos_mtu-4",
      "body": [
        "- nxos_mtu:",
        "\t\tinterface: Ethernet1/3",
        "\t\tmtu: 9216",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        "\t\tstate: absent",
        ""
      ]
    },
    "nxos_ntp": {
      "prefix": "nxos_ntp-1",
      "body": [
        "- nxos_ntp:",
        "\t\tserver: 1.2.3.4",
        "\t\tkey_id: 32",
        "\t\tprefer: enabled",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        ""
      ]
    },
    "nxos_ntp_auth": {
      "prefix": "nxos_ntp_auth-1",
      "body": [
        "- nxos_ntp_auth:",
        "\t\tkey_id: 32",
        "\t\tmd5string: hello",
        "\t\tauth_type: text",
        ""
      ]
    },
    "nxos_ntp_options": {
      "prefix": "nxos_ntp_options-1",
      "body": [
        "- nxos_ntp_options:",
        "\t\tmaster: true",
        "\t\tstratum: 12",
        "\t\tlogging: false",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        ""
      ]
    },
    "nxos_nxapi": {
      "prefix": "nxos_nxapi-3",
      "description": "remove NXAPI configuration",
      "body": [
        "- name: remove NXAPI configuration",
        "\tnxos_nxapi:",
        "\t\tstate: absent",
        ""
      ]
    },
    "nxos_ospf": {
      "prefix": "nxos_ospf-1",
      "body": [
        "- nxos_ospf:",
        "\t\tospf: 1",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_ospf_vrf": {
      "prefix": "nxos_ospf_vrf-1",
      "body": [
        "- nxos_ospf_vrf:",
        "\t\tospf: 1",
        "\t\ttimer_throttle_spf_start: 50",
        "\t\ttimer_throttle_spf_hold: 1000",
        "\t\ttimer_throttle_spf_max: 2000",
        "\t\ttimer_throttle_lsa_start: 60",
        "\t\ttimer_throttle_lsa_hold: 1100",
        "\t\ttimer_throttle_lsa_max: 3000",
        "\t\tvrf: test",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_overlay_global": {
      "prefix": "nxos_overlay_global-1",
      "body": [
        "- nxos_overlay_global:",
        "\t\tanycast_gateway_mac: b.b.b",
        ""
      ]
    },
    "nxos_pim": {
      "prefix": "nxos_pim-1",
      "body": [
        "- nxos_pim:",
        "\t\tssm_range: 232.0.0.0/8",
        ""
      ]
    },
    "nxos_pim_interface": {
      "prefix": "nxos_pim_interface-4",
      "body": [
        "- nxos_pim_interface:",
        "\t\tinterface: eth1/33",
        "\t\tstate: default",
        ""
      ]
    },
    "nxos_pim_rp_address": {
      "prefix": "nxos_pim_rp_address-1",
      "body": [
        "- nxos_pim_rp_address:",
        "\t\trp_address: 10.1.1.20",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_ping": {
      "prefix": "nxos_ping-2",
      "description": "Test reachability to a few different public IPs using mgmt vrf",
      "body": [
        "- name: Test reachability to a few different public IPs using mgmt vrf",
        "\tnxos_ping:",
        "\t\tdest: nxos_ping",
        "\t\tvrf: management",
        "\t\thost: 68.170.147.165",
        "\twith_items:",
        "\t\t- 8.8.8.8",
        "\t\t- 4.4.4.4",
        "\t\t- 198.6.1.4",
        ""
      ]
    },
    "nxos_portchannel": {
      "prefix": "nxos_portchannel-1",
      "body": [
        "- nxos_portchannel:",
        "\t\tgroup: 99",
        "\t\tmembers:",
        "\t\t\t- Ethernet1/1",
        "\t\t\t- Ethernet1/2",
        "\t\tmode: active",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_reboot": {
      "prefix": "nxos_reboot-1",
      "body": [
        "- nxos_reboot:",
        "\t\tconfirm: true",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ username }}'",
        "\t\tpassword: '{{ password }}'",
        ""
      ]
    },
    "nxos_rollback": {
      "prefix": "nxos_rollback-1",
      "body": [
        "- nxos_rollback:",
        "\t\tcheckpoint_file: backup.cfg",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        "\t\thost: '{{ inventory_hostname }}'",
        ""
      ]
    },
    "nxos_smu": {
      "prefix": "nxos_smu-1",
      "body": [
        "- nxos_smu:",
        "\t\tpkg: nxos.CSCuz65185-n9k_EOR-1.0.0-7.0.3.I2.2d.lib32_n9000.rpm",
        ""
      ]
    },
    "nxos_snapshot": {
      "prefix": "nxos_snapshot-5",
      "body": [
        "- nxos_snapshot:",
        "\t\taction: compare",
        "\t\tsnapshot1: pre_snapshot",
        "\t\tsnapshot2: post_snapshot",
        "\t\tcomparison_results_file: compare_snapshots.txt",
        "\t\tcompare_option: summary",
        "\t\tpath: ../snapshot_reports/",
        ""
      ]
    },
    "nxos_snmp_community": {
      "prefix": "nxos_snmp_community-1",
      "body": [
        "- nxos_snmp_community:",
        "\t\tcommunity: TESTING7",
        "\t\tgroup: network-operator",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_snmp_contact": {
      "prefix": "nxos_snmp_contact-1",
      "body": [
        "- nxos_snmp_contact:",
        "\t\tcontact: Test",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_snmp_host": {
      "prefix": "nxos_snmp_host-1",
      "body": [
        "- nxos_snmp_host:",
        "\t\tsnmp_host: 3.3.3.3",
        "\t\tcommunity: TESTING",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_snmp_location": {
      "prefix": "nxos_snmp_location-2",
      "body": [
        "- nxos_snmp_location:",
        "\t\tlocation: Test",
        "\t\tstate: absent",
        ""
      ]
    },
    "nxos_snmp_traps": {
      "prefix": "nxos_snmp_traps-2",
      "body": [
        "- nxos_snmp_traps:",
        "\t\tgroup: lldp",
        "\t\tstate: disabled",
        ""
      ]
    },
    "nxos_snmp_user": {
      "prefix": "nxos_snmp_user-1",
      "body": [
        "- nxos_snmp_user:",
        "\t\tuser: ntc",
        "\t\tgroup: network-operator",
        "\t\tauth: md5",
        "\t\tpwd: test_password",
        ""
      ]
    },
    "nxos_static_route": {
      "prefix": "nxos_static_route-1",
      "body": [
        "- nxos_static_route:",
        "\t\tprefix: 192.168.20.64/24",
        "\t\tnext_hop: 3.3.3.3",
        "\t\troute_name: testing",
        "\t\tpref: 100",
        ""
      ]
    },
    "nxos_switchport": {
      "prefix": "nxos_switchport-5",
      "description": "Ensure these VLANs are not being tagged on the trunk",
      "body": [
        "- name: Ensure these VLANs are not being tagged on the trunk",
        "\tnxos_switchport:",
        "\t\tinterface: eth1/5",
        "\t\tmode: trunk",
        "\t\ttrunk_vlans: 51-4094",
        "\t\tstate: absent",
        ""
      ]
    },
    "nxos_system": {
      "prefix": "nxos_system-4",
      "description": "configure name servers with VRF support",
      "body": [
        "- name: configure name servers with VRF support",
        "\tnxos_system:",
        "\t\tname_servers:",
        "\t\t\t- server: 8.8.8.8",
        "\t\t\t\tvrf: mgmt",
        "\t\t\t- server: 8.8.4.4",
        "\t\t\t\tvrf: mgmt",
        ""
      ]
    },
    "nxos_udld": {
      "prefix": "nxos_udld-2",
      "body": [
        "- nxos_udld:",
        "\t\taggressive: enabled",
        "\t\tmsg_time: 15",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        ""
      ]
    },
    "nxos_udld_interface": {
      "prefix": "nxos_udld_interface-3",
      "body": [
        "- nxos_udld_interface:",
        "\t\tinterface: Ethernet1/1",
        "\t\tmode: enabled",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        ""
      ]
    },
    "nxos_user": {
      "prefix": "nxos_user-3",
      "description": "set multiple users role",
      "body": [
        "- name: set multiple users role",
        "\taggregate:",
        "\t\t- name: netop",
        "\t\t- name: netend",
        "\trole: network-operator",
        "\tstate: present",
        ""
      ]
    },
    "nxos_vlan": {
      "prefix": "nxos_vlan-3",
      "description": "Ensure VLAN is NOT on the device",
      "body": [
        "- name: Ensure VLAN is NOT on the device",
        "\tnxos_vlan:",
        "\t\tvlan_id: 50",
        "\t\tstate: absent",
        "\t\ttransport: nxapi",
        ""
      ]
    },
    "nxos_vpc": {
      "prefix": "nxos_vpc-2",
      "description": "configure",
      "body": [
        "- name: configure",
        "\tnxos_vpc:",
        "\t\tdomain: 100",
        "\t\trole_priority: 32667",
        "\t\tsystem_priority: 2000",
        "\t\tpeer_gw: true",
        "\t\tpkl_src: 10.1.100.2",
        "\t\tpkl_dest: 192.168.100.4",
        "\t\tauto_recovery: true",
        ""
      ]
    },
    "nxos_vpc_interface": {
      "prefix": "nxos_vpc_interface-1",
      "body": [
        "- nxos_vpc_interface:",
        "\t\tportchannel: 10",
        "\t\tvpc: 100",
        ""
      ]
    },
    "nxos_vrf": {
      "prefix": "nxos_vrf-1",
      "description": "Ensure ntc VRF exists on switch",
      "body": [
        "- name: Ensure ntc VRF exists on switch",
        "\tnxos_vrf:",
        "\t\tvrf: ntc",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_vrf_af": {
      "prefix": "nxos_vrf_af-1",
      "body": [
        "- nxos_vrf_af:",
        "\t\tvrf: ntc",
        "\t\tafi: ipv4",
        "\t\troute_target_both_auto_evpn: true",
        "\t\tstate: present",
        ""
      ]
    },
    "nxos_vrf_interface": {
      "prefix": "nxos_vrf_interface-2",
      "description": "Ensure ntc VRF does not exist on Eth1/1",
      "body": [
        "- name: Ensure ntc VRF does not exist on Eth1/1",
        "\tnxos_vrf_interface:",
        "\t\tvrf: ntc",
        "\t\tinterface: Ethernet1/1",
        "\t\tstate: absent",
        ""
      ]
    },
    "nxos_vrrp": {
      "prefix": "nxos_vrrp-3",
      "description": "Re-config with more params",
      "body": [
        "- name: Re-config with more params",
        "\tnxos_vrrp:",
        "\t\tinterface: vlan10",
        "\t\tgroup: 100",
        "\t\tvip: 10.1.100.1",
        "\t\tpreempt: false",
        "\t\tpriority: 130",
        "\t\tauthentication: AUTHKEY",
        ""
      ]
    },
    "nxos_vtp_domain": {
      "prefix": "nxos_vtp_domain-1",
      "body": [
        "- nxos_vtp_domain:",
        "\t\tdomain: ntc",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        ""
      ]
    },
    "nxos_vtp_password": {
      "prefix": "nxos_vtp_password-2",
      "description": "# ENSURE VTP PASSWORD IS REMOVED",
      "body": [
        "- nxos_vtp_password:",
        "    password: ntc",
        "    state: absent",
        "    host: \"{{ inventory_hostname }}\"",
        "    username: \"{{ un }}\"",
        "    password: \"{{ pwd }}\""
      ]
    },
    "nxos_vtp_version": {
      "prefix": "nxos_vtp_version-1",
      "body": [
        "- nxos_vtp_version:",
        "\t\tversion: 2",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tusername: '{{ un }}'",
        "\t\tpassword: '{{ pwd }}'",
        ""
      ]
    },
    "nxos_vxlan_vtep": {
      "prefix": "nxos_vxlan_vtep-1",
      "body": [
        "- nxos_vxlan_vtep:",
        "\t\tinterface: nve1",
        "\t\tdescription: default",
        "\t\thost_reachability: default",
        "\t\tsource_interface: Loopback0",
        "\t\tsource_interface_hold_down_time: 30",
        "\t\tshutdown: default",
        ""
      ]
    },
    "nxos_vxlan_vtep_vni": {
      "prefix": "nxos_vxlan_vtep_vni-1",
      "body": [
        "- nxos_vxlan_vtep_vni:",
        "\t\tinterface: nve1",
        "\t\tvni: 6000",
        "\t\tingress_replication: default",
        ""
      ]
    },
    "oc": {
      "prefix": "oc-4",
      "description": "Obtain an object definition",
      "body": [
        "- name: Obtain an object definition",
        "\toc:",
        "\t\tstate: present",
        "\t\tname: myroute",
        "\t\tnamespace: mynamespace",
        "\t\tkind: Route",
        "\t\ttoken: << redacted >>",
        ""
      ]
    },
    "office_365_connector_card": {
      "prefix": "office_365_connector_card-2",
      "description": "Create a Connector Card with the full format",
      "body": [
        "- name: Create a Connector Card with the full format",
        "\toffice_365_connector_card:",
        "\t\twebhook: 'https://outlook.office.com/webhook/GUID/IncomingWebhook/GUID/GUID'",
        "\t\tsummary: This is the summary property",
        "\t\ttitle: This is the **card's title** property",
        "\t\ttext: >-",
        "\t\t\tThis is the **card's text** property. Lorem ipsum dolor sit amet,",
        "\t\t\tconsectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et",
        "\t\t\tdolore magna aliqua.",
        "\t\tcolor: E81123",
        "\t\tsections:",
        "\t\t\t- title: This is the **section's title** property",
        "\t\t\t\tactivity_image: 'http://connectorsdemo.azurewebsites.net/images/MSC12_Oscar_002.jpg'",
        "\t\t\t\tactivity_title: This is the section's **activityTitle** property",
        "\t\t\t\tactivity_subtitle: This is the section's **activitySubtitle** property",
        "\t\t\t\tactivity_text: This is the section's **activityText** property.",
        "\t\t\t\thero_image:",
        "\t\t\t\t\timage: 'http://connectorsdemo.azurewebsites.net/images/WIN12_Scene_01.jpg'",
        "\t\t\t\t\ttitle: This is the image's alternate text",
        "\t\t\t\ttext: >-",
        "\t\t\t\t\tThis is the section's text property. Lorem ipsum dolor sit amet,",
        "\t\t\t\t\tconsectetur adipiscing elit, sed do eiusmod tempor incididunt ut",
        "\t\t\t\t\tlabore et dolore magna aliqua.",
        "\t\t\t\tfacts:",
        "\t\t\t\t\t- name: This is a fact name",
        "\t\t\t\t\t\tvalue: This is a fact value",
        "\t\t\t\t\t- name: This is a fact name",
        "\t\t\t\t\t\tvalue: This is a fact value",
        "\t\t\t\t\t- name: This is a fact name",
        "\t\t\t\t\t\tvalue: This is a fact value",
        "\t\t\t\timages:",
        "\t\t\t\t\t- image: >-",
        "\t\t\t\t\t\t\thttp://connectorsdemo.azurewebsites.net/images/MicrosoftSurface_024_Cafe_OH-06315_VS_R1c.jpg",
        "\t\t\t\t\t\ttitle: This is the image's alternate text",
        "\t\t\t\t\t- image: 'http://connectorsdemo.azurewebsites.net/images/WIN12_Scene_01.jpg'",
        "\t\t\t\t\t\ttitle: This is the image's alternate text",
        "\t\t\t\t\t- image: >-",
        "\t\t\t\t\t\t\thttp://connectorsdemo.azurewebsites.net/images/WIN12_Anthony_02.jpg",
        "\t\t\t\t\t\ttitle: This is the image's alternate text",
        "\t\t\t\tactions:",
        "\t\t\t\t\t- '@type': ActionCard",
        "\t\t\t\t\t\tname: Comment",
        "\t\t\t\t\t\tinputs:",
        "\t\t\t\t\t\t\t- '@type': TextInput",
        "\t\t\t\t\t\t\t\tid: comment",
        "\t\t\t\t\t\t\t\tis_multiline: true",
        "\t\t\t\t\t\t\t\ttitle: Input's title property",
        "\t\t\t\t\t\tactions:",
        "\t\t\t\t\t\t\t- '@type': HttpPOST",
        "\t\t\t\t\t\t\t\tname: Save",
        "\t\t\t\t\t\t\t\ttarget: 'http://...'",
        "\t\t\t\t\t- '@type': ActionCard",
        "\t\t\t\t\t\tname: Due Date",
        "\t\t\t\t\t\tinputs:",
        "\t\t\t\t\t\t\t- '@type': DateInput",
        "\t\t\t\t\t\t\t\tid: dueDate",
        "\t\t\t\t\t\t\t\ttitle: Input's title property",
        "\t\t\t\t\t\tactions:",
        "\t\t\t\t\t\t\t- '@type': HttpPOST",
        "\t\t\t\t\t\t\t\tname: Save",
        "\t\t\t\t\t\t\t\ttarget: 'http://...'",
        "\t\t\t\t\t- '@type': HttpPOST",
        "\t\t\t\t\t\tname: Action's name prop.",
        "\t\t\t\t\t\ttarget: 'http://...'",
        "\t\t\t\t\t- '@type': OpenUri",
        "\t\t\t\t\t\tname: Action's name prop",
        "\t\t\t\t\t\ttargets:",
        "\t\t\t\t\t\t\t- os: default",
        "\t\t\t\t\t\t\t\turi: 'http://...'",
        "\t\t\t- start_group: true",
        "\t\t\t\ttitle: This is the title of a **second section**",
        "\t\t\t\ttext: >-",
        "\t\t\t\t\tThis second section is visually separated from the first one by",
        "\t\t\t\t\tsetting its **startGroup** property to true.",
        ""
      ]
    },
    "omapi_host": {
      "prefix": "omapi_host-2",
      "description": "Add a host using OMAPI",
      "body": [
        "- name: Add a host using OMAPI",
        "\tomapi_host:",
        "\t\tkey_name: defomapi",
        "\t\tkey: +bFQtBCta6j2vWkjPkNFtgA==",
        "\t\thost: 10.98.4.55",
        "\t\tmacaddr: '44:dd:ab:dd:11:44'",
        "\t\tname: server01",
        "\t\tip: 192.168.88.99",
        "\t\tddns: 'yes'",
        "\t\tstatements:",
        "\t\t\t- filename \"pxelinux.0\"",
        "\t\t\t- next-server 1.1.1.1",
        "\t\tstate: present",
        ""
      ]
    },
    "oneview_ethernet_network": {
      "prefix": "oneview_ethernet_network-6",
      "description": "Reset to the default network connection template",
      "body": [
        "- name: Reset to the default network connection template",
        "\toneview_ethernet_network:",
        "\t\tconfig: /etc/oneview/oneview_config.json",
        "\t\tstate: default_bandwidth_reset",
        "\t\tdata:",
        "\t\t\tname: Test Ethernet Network",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "oneview_ethernet_network_facts": {
      "prefix": "oneview_ethernet_network_facts-8",
      "body": [
        "- debug: var=enet_associated_profiles",
        ""
      ]
    },
    "oneview_fc_network": {
      "prefix": "oneview_fc_network-4",
      "description": "Ensure that the Fibre Channel Network is absent",
      "body": [
        "- name: Ensure that the Fibre Channel Network is absent",
        "\toneview_fc_network:",
        "\t\tconfig: '{{ config_file_path }}'",
        "\t\tstate: absent",
        "\t\tdata:",
        "\t\t\tname: New FC Network",
        ""
      ]
    },
    "oneview_fc_network_facts": {
      "prefix": "oneview_fc_network_facts-3",
      "description": "Gather paginated, filtered and sorted facts about Fibre Channel Networks",
      "body": [
        "- name: 'Gather paginated, filtered and sorted facts about Fibre Channel Networks'",
        "\toneview_fc_network_facts:",
        "\t\tconfig: /etc/oneview/oneview_config.json",
        "\t\tparams:",
        "\t\t\tstart: 1",
        "\t\t\tcount: 3",
        "\t\t\tsort: 'name:descending'",
        "\t\t\tfilter: fabricType=FabricAttach",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "oneview_fcoe_network": {
      "prefix": "oneview_fcoe_network-3",
      "description": "Ensure that FCoE Network is absent",
      "body": [
        "- name: Ensure that FCoE Network is absent",
        "\toneview_fcoe_network:",
        "\t\tconfig: /etc/oneview/oneview_config.json",
        "\t\tstate: absent",
        "\t\tdata:",
        "\t\t\tname: New FCoE Network",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "oneview_fcoe_network_facts": {
      "prefix": "oneview_fcoe_network_facts-6",
      "body": [
        "- debug: var=fcoe_networks",
        ""
      ]
    },
    "oneview_network_set": {
      "prefix": "oneview_network_set-4",
      "description": "Update the Network set with two scopes",
      "body": [
        "- name: Update the Network set with two scopes",
        "\toneview_network_set:",
        "\t\tconfig: /etc/oneview/oneview_config.json",
        "\t\tstate: present",
        "\t\tdata:",
        "\t\t\tname: OneViewSDK Test Network Set",
        "\t\t\tscopeUris:",
        "\t\t\t\t- /rest/scopes/01SC123456",
        "\t\t\t\t- /rest/scopes/02SC123456",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "oneview_network_set_facts": {
      "prefix": "oneview_network_set_facts-6",
      "body": [
        "- debug: var=network_sets",
        ""
      ]
    },
    "oneview_san_manager": {
      "prefix": "oneview_san_manager-5",
      "description": "Delete the SAN Manager recently created",
      "body": [
        "- name: Delete the SAN Manager recently created",
        "\toneview_san_manager:",
        "\t\tconfig: /etc/oneview/oneview_config.json",
        "\t\tstate: absent",
        "\t\tdata:",
        "\t\t\tname: 172.18.15.1",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "oneview_san_manager_facts": {
      "prefix": "oneview_san_manager_facts-6",
      "body": [
        "- debug: var=san_managers",
        ""
      ]
    },
    "open_iscsi": {
      "prefix": "open_iscsi-4",
      "body": [
        "- open_iscsi:",
        "\t\tlogin: 'no'",
        "\t\ttarget: 'iqn.1986-03.com.sun:02:f8c1f9e0-c3ec-ec84-c9c9-8bfb0cd5de3d'",
        ""
      ]
    },
    "openbsd_pkg": {
      "prefix": "openbsd_pkg-10",
      "description": "Quickly remove a package without checking checksums",
      "body": [
        "- name: Quickly remove a package without checking checksums",
        "\topenbsd_pkg:",
        "\t\tname: qt5",
        "\t\tquick: 'yes'",
        "\t\tstate: absent",
        ""
      ]
    },
    "opendj_backendprop": {
      "prefix": "opendj_backendprop-1",
      "description": "",
      "body": [
        "- name: \"Add or update OpenDJ backend properties\"",
        "    action: opendj_backendprop",
        "            hostname=localhost",
        "            port=4444",
        "            username=\"cn=Directory Manager\"",
        "            password=password",
        "            backend=userRoot",
        "            name=index-entry-limit",
        "            value=5000"
      ]
    },
    "openssl_certificate": {
      "prefix": "openssl_certificate-12",
      "description": "Ensure that the existing certificate has a certain domain in its subjectAltName",
      "body": [
        "- name: >-",
        "\t\tEnsure that the existing certificate has a certain domain in its",
        "\t\tsubjectAltName",
        "\topenssl_certificate:",
        "\t\tpath: /etc/ssl/crt/example.com.crt",
        "\t\tprovider: assertonly",
        "\t\tsubject_alt_name:",
        "\t\t\t- www.example.com",
        "\t\t\t- test.example.com",
        ""
      ]
    },
    "openssl_csr": {
      "prefix": "openssl_csr-6",
      "body": [
        "- openssl_csr:",
        "\t\tpath: /etc/ssl/csr/www.ansible.com.csr",
        "\t\tprivatekey_path: /etc/ssl/private/ansible.com.pem",
        "\t\tcommon_name: www.ansible.com",
        "\t\tkey_usage:",
        "\t\t\t- digitlaSignature",
        "\t\t\t- keyAgreement",
        "\t\textended_key_usage:",
        "\t\t\t- clientAuth",
        ""
      ]
    },
    "openssl_privatekey": {
      "prefix": "openssl_privatekey-5",
      "body": [
        "- openssl_privatekey:",
        "\t\tpath: /etc/ssl/private/ansible.com.pem",
        "\t\ttype: DSA",
        ""
      ]
    },
    "openssl_publickey": {
      "prefix": "openssl_publickey-5",
      "body": [
        "- openssl_publickey:",
        "\t\tpath: /etc/ssl/public/ansible.com.pem",
        "\t\tprivatekey_path: /etc/ssl/private/ansible.com.pem",
        "\t\tstate: absent",
        ""
      ]
    },
    "openvswitch_bridge": {
      "prefix": "openvswitch_bridge-3",
      "body": [
        "- openvswitch_bridge:",
        "\t\tbridge: br-int",
        "\t\tstate: present",
        "\t\tfail_mode: secure",
        "\targs:",
        "\t\texternal_ids:",
        "\t\t\tbridge-id: br-int",
        ""
      ]
    },
    "openvswitch_db": {
      "prefix": "openvswitch_db-3",
      "body": [
        "- openvswitch_db:",
        "\t\tstate: present",
        "\t\ttable: Bridge",
        "\t\trecord: br-int",
        "\t\tcol: other_config",
        "\t\tkey: disable-in-band",
        ""
      ]
    },
    "openvswitch_port": {
      "prefix": "openvswitch_port-4",
      "body": [
        "- openvswitch_port:",
        "\t\tbridge: br-int",
        "\t\tport: vifeth6",
        "\t\tstate: present",
        "\targs:",
        "\t\texternal_ids:",
        "\t\t\tiface-id: '{{ inventory_hostname }}-vifeth6'",
        "\t\t\tattached-mac: '00:00:5E:00:53:23'",
        "\t\t\tvm-id: '{{ inventory_hostname }}'",
        "\t\t\tiface-status: active",
        ""
      ]
    },
    "openwrt_init": {
      "prefix": "openwrt_init-4",
      "body": [
        "- openwrt_init:",
        "\t\tname: httpd",
        "\t\tenabled: 'yes'",
        ""
      ]
    },
    "opkg": {
      "prefix": "opkg-5",
      "body": [
        "- opkg:",
        "\t\tname: foo",
        "\t\tstate: present",
        "\t\tforce: overwrite",
        ""
      ]
    },
    "ordnance_config": {
      "prefix": "ordnance_config-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "ordnance_facts": {
      "prefix": "ordnance_facts-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "os_auth": {
      "prefix": "os_auth-2",
      "description": "Show service catalog",
      "body": [
        "- name: Show service catalog",
        "\tdebug:",
        "\t\tvar: service_catalog",
        ""
      ]
    },
    "os_client_config": {
      "prefix": "os_client_config-3",
      "description": "Get the information back just about the mordred cloud",
      "body": [
        "- name: Get the information back just about the mordred cloud",
        "\tos_client_config:",
        "\t\tclouds:",
        "\t\t\t- mordred",
        ""
      ]
    },
    "os_flavor_facts": {
      "prefix": "os_flavor_facts-7",
      "body": [
        "- os_flavor_facts:",
        "\t\tcloud: mycloud",
        "\t\tram: '>=1024'",
        "\t\tvcpus: '2'",
        "\t\tephemeral: <30",
        ""
      ]
    },
    "os_floating_ip": {
      "prefix": "os_floating_ip-4",
      "body": [
        "- os_floating_ip:",
        "\t\tcloud: dguerri",
        "\t\tstate: absent",
        "\t\tfloating_ip_address: 203.0.113.2",
        "\t\tserver: cattle001",
        ""
      ]
    },
    "os_group": {
      "prefix": "os_group-3",
      "body": [
        "- os_group:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tname: demo",
        ""
      ]
    },
    "os_image": {
      "prefix": "os_image-1",
      "body": [
        "- os_image:",
        "\t\tauth:",
        "\t\t\tauth_url: 'http://localhost/auth/v2.0'",
        "\t\t\tusername: admin",
        "\t\t\tpassword: passme",
        "\t\t\tproject_name: admin",
        "\t\tname: cirros",
        "\t\tcontainer_format: bare",
        "\t\tdisk_format: qcow2",
        "\t\tstate: present",
        "\t\tfilename: cirros-0.3.0-x86_64-disk.img",
        "\t\tkernel: cirros-vmlinuz",
        "\t\tramdisk: cirros-initrd",
        "\t\tproperties:",
        "\t\t\tcpu_arch: x86_64",
        "\t\t\tdistro: ubuntu",
        ""
      ]
    },
    "os_image_facts": {
      "prefix": "os_image_facts-2",
      "description": "Show openstack facts",
      "body": [
        "- name: Show openstack facts",
        "\tdebug:",
        "\t\tvar: openstack_image",
        ""
      ]
    },
    "os_ironic": {
      "prefix": "os_ironic-1",
      "body": [
        "- os_ironic:",
        "\t\tcloud: devstack",
        "\t\tdriver: pxe_ipmitool",
        "\t\tuuid: 00000000-0000-0000-0000-000000000002",
        "\t\tproperties:",
        "\t\t\tcpus: 2",
        "\t\t\tcpu_arch: x86_64",
        "\t\t\tram: 8192",
        "\t\t\tdisk_size: 64",
        "\t\tnics:",
        "\t\t\t- mac: 'aa:bb:cc:aa:bb:cc'",
        "\t\t\t- mac: 'dd:ee:ff:dd:ee:ff'",
        "\t\tdriver_info:",
        "\t\t\tpower:",
        "\t\t\t\tipmi_address: 1.2.3.4",
        "\t\t\t\tipmi_username: admin",
        "\t\t\t\tipmi_password: adminpass",
        "\t\tchassis_uuid: 00000000-0000-0000-0000-000000000001",
        ""
      ]
    },
    "os_ironic_inspect": {
      "prefix": "os_ironic_inspect-1",
      "body": [
        "- os_ironic_inspect:",
        "\t\tname: testnode1",
        ""
      ]
    },
    "os_keypair": {
      "prefix": "os_keypair-2",
      "body": [
        "- os_keypair:",
        "\t\tcloud: rax-dfw",
        "\t\tstate: present",
        "\t\tname: ansible_key",
        ""
      ]
    },
    "os_keystone_domain": {
      "prefix": "os_keystone_domain-2",
      "body": [
        "- os_keystone_domain:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tname: demo",
        ""
      ]
    },
    "os_keystone_domain_facts": {
      "prefix": "os_keystone_domain_facts-1",
      "body": [
        "- os_keystone_domain_facts:",
        "\t\tcloud: awesomecloud",
        ""
      ]
    },
    "os_keystone_role": {
      "prefix": "os_keystone_role-2",
      "body": [
        "- os_keystone_role:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tname: demo",
        ""
      ]
    },
    "os_keystone_service": {
      "prefix": "os_keystone_service-2",
      "body": [
        "- os_keystone_service:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tname: glance",
        "\t\tservice_type: image",
        ""
      ]
    },
    "os_network": {
      "prefix": "os_network-1",
      "body": [
        "- os_network:",
        "\t\tcloud: mycloud",
        "\t\tstate: present",
        "\t\tname: ext_network",
        "\t\texternal: true",
        ""
      ]
    },
    "os_networks_facts": {
      "prefix": "os_networks_facts-6",
      "description": "Show openstack networks",
      "body": [
        "- name: Show openstack networks",
        "\tdebug:",
        "\t\tvar: openstack_networks",
        ""
      ]
    },
    "os_nova_flavor": {
      "prefix": "os_nova_flavor-3",
      "description": "Create flavor with metadata",
      "body": [
        "- name: Create flavor with metadata",
        "\tos_nova_flavor:",
        "\t\tcloud: mycloud",
        "\t\tstate: present",
        "\t\tname: tiny",
        "\t\tram: 1024",
        "\t\tvcpus: 1",
        "\t\tdisk: 10",
        "\t\textra_specs:",
        "\t\t\t'quota:disk_read_iops_sec': 5000",
        "\t\t\t'aggregate_instance_extra_specs:pinned': false",
        ""
      ]
    },
    "os_nova_host_aggregate": {
      "prefix": "os_nova_host_aggregate-2",
      "body": [
        "- os_nova_host_aggregate:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tname: db_aggregate",
        ""
      ]
    },
    "os_object": {
      "prefix": "os_object-2",
      "description": "Delete a container called config and all of its contents",
      "body": [
        "- name: Delete a container called config and all of its contents",
        "\tos_object:",
        "\t\tcloud: rax-iad",
        "\t\tstate: absent",
        "\t\tcontainer: config",
        ""
      ]
    },
    "os_port": {
      "prefix": "os_port-5",
      "body": [
        "- os_port:",
        "\t\tstate: present",
        "\t\tauth:",
        "\t\t\tauth_url: 'https://region-b.geo-1.identity.hpcloudsvc.com:35357/v2.0/d'",
        "\t\t\tusername: admin",
        "\t\t\tpassword: admin",
        "\t\t\tproject_name: admin",
        "\t\tname: port1",
        "\t\tsecurity_groups:",
        "\t\t\t- 1496e8c7-4918-482a-9172-f4f00fc4a3a5",
        "\t\t\t- 057d4bdf-6d4d-472...",
        ""
      ]
    },
    "os_port_facts": {
      "prefix": "os_port_facts-3",
      "body": [
        "- os_port_facts:",
        "\t\tcloud: mycloud",
        "\t\tfilters:",
        "\t\t\tdevice_id: 1038a010-3a37-4a9d-82ea-652f1da36597",
        "\t\t\tstatus: ACTIVE",
        ""
      ]
    },
    "os_project": {
      "prefix": "os_project-2",
      "body": [
        "- os_project:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tname: demoproject",
        ""
      ]
    },
    "os_project_facts": {
      "prefix": "os_project_facts-1",
      "body": [
        "- os_project_facts:",
        "\t\tcloud: awesomecloud",
        ""
      ]
    },
    "os_quota": {
      "prefix": "os_quota-5",
      "description": "Update quotas",
      "body": [
        "- name: Update quotas",
        "\tos_quota:",
        "\t\tname: '{{ item.name }}'",
        "\t\tbackup_gigabytes: '{{ item.backup_gigabytes }}'",
        "\t\tbackups: '{{ item.backups }}'",
        "\t\tcores: '{{ item.cores }}'",
        "\t\tfixed_ips: '{{ item.fixed_ips }}'",
        "\t\tfloating_ips: '{{ item.floating_ips }}'",
        "\t\tfloatingip: '{{ item.floatingip }}'",
        "\t\tgigabytes: '{{ item.gigabytes }}'",
        "\t\tinjected_file_size: '{{ item.injected_file_size }}'",
        "\t\tinjected_files: '{{ item.injected_files }}'",
        "\t\tinjected_path_size: '{{ item.injected_path_size }}'",
        "\t\tinstances: '{{ item.instances }}'",
        "\t\tkey_pairs: '{{ item.key_pairs }}'",
        "\t\tloadbalancer: '{{ item.loadbalancer }}'",
        "\t\tper_volume_gigabytes: '{{ item.per_volume_gigabytes }}'",
        "\t\tpool: '{{ item.pool }}'",
        "\t\tport: '{{ item.port }}'",
        "\t\tproperties: '{{ item.properties }}'",
        "\t\tram: '{{ item.ram }}'",
        "\t\tsecurity_group_rule: '{{ item.security_group_rule }}'",
        "\t\tsecurity_group: '{{ item.security_group }}'",
        "\t\tserver_group_members: '{{ item.server_group_members }}'",
        "\t\tserver_groups: '{{ item.server_groups }}'",
        "\t\tsnapshots: '{{ item.snapshots }}'",
        "\t\tvolumes: '{{ item.volumes }}'",
        "\t\tvolumes_types:",
        "\t\t\tvolumes_lvm: '{{ item.volumes_lvm }}'",
        "\t\tsnapshots_types:",
        "\t\t\tsnapshots_lvm: '{{ item.snapshots_lvm }}'",
        "\t\tgigabytes_types:",
        "\t\t\tgigabytes_lvm: '{{ item.gigabytes_lvm }}'",
        "\twith_items:",
        "\t\t- '{{ projects }}'",
        "\twhen: item.state == \"present\"",
        ""
      ]
    },
    "os_recordset": {
      "prefix": "os_recordset-3",
      "body": [
        "- os_recordset:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tzone: example.net.",
        "\t\tname: www",
        ""
      ]
    },
    "os_router": {
      "prefix": "os_router-5",
      "body": [
        "- os_router:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tname: router1",
        ""
      ]
    },
    "os_security_group": {
      "prefix": "os_security_group-2",
      "body": [
        "- os_security_group:",
        "\t\tcloud: mordred",
        "\t\tstate: present",
        "\t\tname: foo",
        "\t\tdescription: updated description for the foo security group",
        ""
      ]
    },
    "os_security_group_rule": {
      "prefix": "os_security_group_rule-6",
      "body": [
        "- os_security_group_rule:",
        "\t\tsecurity_group: loadbalancer_sg",
        "\t\tprotocol: 112",
        "\t\tremote_group: loadbalancer-node_sg",
        ""
      ]
    },
    "os_server": {
      "prefix": "os_server-12",
      "description": "launch a compute instance",
      "body": [
        "- name: launch a compute instance",
        "\thosts: localhost",
        "\ttasks:",
        "\t\t- name: launch an instance",
        "\t\t\tos_server:",
        "\t\t\t\tname: vm1",
        "\t\t\t\tstate: present",
        "\t\t\t\timage: Ubuntu Server 14.04",
        "\t\t\t\tflavor: P-1",
        "\t\t\t\tnetwork: Production",
        "\t\t\t\tuserdata: >",
        "\t\t\t\t\t{%- raw -%}#!/bin/bash",
        "",
        "\t\t\t\t\techo \"\tup ip route add 10.0.0.0/8 via {% endraw -%}{{ intra_router",
        "\t\t\t\t\t}}{%- raw -%}\" >> /etc/network/interfaces.d/eth0.conf",
        "",
        "\t\t\t\t\techo \"\tdown ip route del 10.0.0.0/8\" >>",
        "\t\t\t\t\t/etc/network/interfaces.d/eth0.conf",
        "",
        "\t\t\t\t\tifdown eth0 && ifup eth0",
        "",
        "\t\t\t\t\t{% endraw %}",
        ""
      ]
    },
    "os_server_action": {
      "prefix": "os_server_action-1",
      "body": [
        "- os_server_action:",
        "\t\taction: pause",
        "\t\tauth:",
        "\t\t\tauth_url: 'https://mycloud.openstack.blueboxgrid.com:5001/v2.0'",
        "\t\t\tusername: admin",
        "\t\t\tpassword: admin",
        "\t\t\tproject_name: admin",
        "\t\tserver: vm1",
        "\t\ttimeout: 200",
        ""
      ]
    },
    "os_server_facts": {
      "prefix": "os_server_facts-1",
      "body": [
        "- os_server_facts:",
        "\t\tcloud: rax-dfw",
        "\t\tserver: web*",
        ""
      ]
    },
    "os_server_group": {
      "prefix": "os_server_group-2",
      "body": [
        "- os_server_group:",
        "\t\tstate: absent",
        "\t\tauth:",
        "\t\t\tauth_url: 'https://api.cloud.catalyst.net.nz:5000/v2.0'",
        "\t\t\tusername: admin",
        "\t\t\tpassword: admin",
        "\t\t\tproject_name: admin",
        "\t\tname: my_server_group",
        ""
      ]
    },
    "os_server_volume": {
      "prefix": "os_server_volume-1",
      "description": "attach a volume",
      "body": [
        "- name: attach a volume",
        "\thosts: localhost",
        "\ttasks:",
        "\t\t- name: attach volume to host",
        "\t\t\tos_server_volume:",
        "\t\t\t\tstate: present",
        "\t\t\t\tcloud: mordred",
        "\t\t\t\tserver: Mysql-server",
        "\t\t\t\tvolume: mysql-data",
        "\t\t\t\tdevice: /dev/vdb",
        ""
      ]
    },
    "os_stack": {
      "prefix": "os_stack-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "os_subnet": {
      "prefix": "os_subnet-3",
      "body": [
        "- os_subnet:",
        "\t\tstate: present",
        "\t\tname: intv6",
        "\t\tnetwork_name: internal",
        "\t\tip_version: 6",
        "\t\tcidr: '2db8:1::/64'",
        "\t\tdns_nameservers:",
        "\t\t\t- '2001:4860:4860::8888'",
        "\t\t\t- '2001:4860:4860::8844'",
        "\t\tipv6_ra_mode: dhcpv6-stateless",
        "\t\tipv6_address_mode: dhcpv6-stateless",
        ""
      ]
    },
    "os_subnets_facts": {
      "prefix": "os_subnets_facts-6",
      "description": "Show openstack subnets",
      "body": [
        "- name: Show openstack subnets",
        "\tdebug:",
        "\t\tvar: openstack_subnets",
        ""
      ]
    },
    "os_user": {
      "prefix": "os_user-3",
      "body": [
        "- os_user:",
        "\t\tcloud: mycloud",
        "\t\tstate: present",
        "\t\tname: demouser",
        "\t\tpassword: secret",
        "\t\tupdate_password: on_create",
        "\t\temail: demo@example.com",
        "\t\tdomain: default",
        "\t\tdefault_project: demo",
        ""
      ]
    },
    "os_user_facts": {
      "prefix": "os_user_facts-1",
      "body": [
        "- os_user_facts:",
        "\t\tcloud: awesomecloud",
        ""
      ]
    },
    "os_user_group": {
      "prefix": "os_user_group-1",
      "body": [
        "- os_user_group: null",
        "\tcloud: mycloud",
        "\tuser: demo",
        "\tgroup: demo",
        ""
      ]
    },
    "os_user_role": {
      "prefix": "os_user_role-2",
      "body": [
        "- os_user_role:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tuser: barney",
        "\t\trole: admin",
        "\t\tdomain: newyork",
        ""
      ]
    },
    "os_volume": {
      "prefix": "os_volume-1",
      "description": "create a volume",
      "body": [
        "- name: create a volume",
        "\thosts: localhost",
        "\ttasks:",
        "\t\t- name: create 40g test volume",
        "\t\t\tos_volume:",
        "\t\t\t\tstate: present",
        "\t\t\t\tcloud: mordred",
        "\t\t\t\tavailability_zone: az2",
        "\t\t\t\tsize: 40",
        "\t\t\t\tdisplay_name: test_volume",
        "\t\t\t\tscheduler_hints:",
        "\t\t\t\t\tsame_host: 243e8d3c-8f47-4a61-93d6-7215c344b0c0",
        ""
      ]
    },
    "os_zone": {
      "prefix": "os_zone-3",
      "body": [
        "- os_zone:",
        "\t\tcloud: mycloud",
        "\t\tstate: absent",
        "\t\tname: example.net.",
        ""
      ]
    },
    "osx_defaults": {
      "prefix": "osx_defaults-6",
      "body": [
        "- osx_defaults:",
        "\t\tdomain: com.geekchimp.macable",
        "\t\tkey: ExampleKeyToRemove",
        "\t\tstate: absent",
        ""
      ]
    },
    "osx_say": {
      "prefix": "osx_say-1",
      "body": [
        "- osx_say:",
        "\t\tmsg: '{{ inventory_hostname }} is all done'",
        "\t\tvoice: Zarvox",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "ovh_ip_loadbalancing_backend": {
      "prefix": "ovh_ip_loadbalancing_backend-2",
      "body": [
        "- ovh_ip_loadbalancing:",
        "\t\tname: ip-1.1.1.1",
        "\t\tbackend: 212.1.1.1",
        "\t\tstate: absent",
        "\t\tendpoint: ovh-eu",
        "\t\tapplication_key: yourkey",
        "\t\tapplication_secret: yoursecret",
        "\t\tconsumer_key: yourconsumerkey",
        ""
      ]
    },
    "pacemaker_cluster": {
      "prefix": "pacemaker_cluster-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "package": {
      "prefix": "package-2",
      "description": "remove the apache package",
      "body": [
        "- name: remove the apache package",
        "\tpackage:",
        "\t\tname: '{{ apache }}'",
        "\t\tstate: absent",
        ""
      ]
    },
    "pacman": {
      "prefix": "pacman-8",
      "body": [
        "- pacman:",
        "\t\tname: baz",
        "\t\tstate: absent",
        "\t\tforce: 'yes'",
        ""
      ]
    },
    "pagerduty": {
      "prefix": "pagerduty-4",
      "body": [
        "- pagerduty:",
        "\t\tname: companyabc",
        "\t\ttoken: xxxxxxxxxxxxxx",
        "\t\thours: 0",
        "\t\tminutes: 5",
        "\t\tstate: running",
        "\t\tservice: FOO123",
        ""
      ]
    },
    "pagerduty_alert": {
      "prefix": "pagerduty_alert-4",
      "body": [
        "- pagerduty_alert:",
        "\t\tservice_key: xxx",
        "\t\tapi_key: yourapikey",
        "\t\tstate: resolved",
        "\t\tincident_key: somekey",
        "\t\tdesc: some text for incident's log",
        ""
      ]
    },
    "pam_limits": {
      "prefix": "pam_limits-3",
      "body": [
        "- pam_limits:",
        "\t\tdomain: james",
        "\t\tlimit_type: '-'",
        "\t\tlimit_item: memlock",
        "\t\tvalue: unlimited",
        "\t\tcomment: unlimited memory lock for james",
        ""
      ]
    },
    "pamd": {
      "prefix": "pamd-9",
      "description": "Update specific argument value in a rule",
      "body": [
        "- name: Update specific argument value in a rule",
        "\tpamd:",
        "\t\tname: system-auth",
        "\t\ttype: auth",
        "\t\tcontrol: required",
        "\t\tmodule_path: pam_faillock.so",
        "\t\tmodule_arguments: fail_interval=300",
        "\t\tstate: args_present",
        ""
      ]
    },
    "panos_admpwd": {
      "prefix": "panos_admpwd-1",
      "description": "set admin password",
      "body": [
        "- name: set admin password",
        "\tpanos_admpwd:",
        "\t\tip_address: 192.168.1.1",
        "\t\tusername: admin",
        "\t\tkey_filename: /tmp/ssh.key",
        "\t\tnewpassword: badpassword",
        "\tregister: result",
        "\tuntil: not result|failed",
        "\tretries: 10",
        "\tdelay: 30",
        ""
      ]
    },
    "panos_cert_gen_ssh": {
      "prefix": "panos_cert_gen_ssh-1",
      "description": "generate self signed certificate",
      "body": [
        "- name: generate self signed certificate",
        "\tpanos_cert_gen_ssh:",
        "\t\tip_address: 192.168.1.1",
        "\t\tpassword: paloalto",
        "\t\tcert_cn: 1.1.1.1",
        "\t\tcert_friendly_name: test123",
        "\t\tsigned_by: root-ca",
        ""
      ]
    },
    "panos_check": {
      "prefix": "panos_check-2",
      "description": "wait for reboot",
      "body": [
        "- name: wait for reboot",
        "\tpanos_check:",
        "\t\tip_address: 192.168.1.1",
        "\t\tpassword: admin",
        "\tregister: result",
        "\tuntil: not result|failed",
        "\tretries: 10",
        "\tdelay: 30",
        ""
      ]
    },
    "panos_commit": {
      "prefix": "panos_commit-1",
      "body": [
        "- panos_commit:",
        "\t\tip_address: 192.168.1.1",
        "\t\tusername: admin",
        "\t\tpassword: admin",
        ""
      ]
    },
    "panos_dag": {
      "prefix": "panos_dag-1",
      "description": "dag",
      "body": [
        "- name: dag",
        "\tpanos_dag:",
        "\t\tip_address: 192.168.1.1",
        "\t\tpassword: admin",
        "\t\tdag_name: dag-1",
        "\t\tdag_filter: >-",
        "\t\t\t'aws-tag.aws:cloudformation:logical-id.ServerInstance' and",
        "\t\t\t'instanceState.running'",
        ""
      ]
    },
    "panos_import": {
      "prefix": "panos_import-1",
      "description": "import software image into PAN-OS",
      "body": [
        "- name: import software image into PAN-OS",
        "\tpanos_import:",
        "\t\tip_address: 192.168.1.1",
        "\t\tusername: admin",
        "\t\tpassword: admin",
        "\t\tfile: /tmp/PanOS_vm-6.1.1",
        "\t\tcategory: software",
        ""
      ]
    },
    "panos_interface": {
      "prefix": "panos_interface-1",
      "description": "enable DHCP client on ethernet1/1 in zone public",
      "body": [
        "- name: enable DHCP client on ethernet1/1 in zone public",
        "\tinterface:",
        "\t\tpassword: admin",
        "\t\tip_address: 192.168.1.1",
        "\t\tif_name: ethernet1/1",
        "\t\tzone_name: public",
        "\t\tcreate_default_route: 'yes'",
        ""
      ]
    },
    "panos_lic": {
      "prefix": "panos_lic-1",
      "description": "",
      "body": [
        "- hosts: localhost",
        "      connection: local",
        "      tasks:",
        "        - name: fetch license",
        "          panos_lic:",
        "            ip_address: \"192.168.1.1\"",
        "            password: \"paloalto\"",
        "            auth_code: \"IBADCODE\"",
        "          register: result",
        "    - name: Display serialnumber (if already registered)",
        "      debug:",
        "        var: \"{{result.serialnumber}}\""
      ]
    },
    "panos_mgtconfig": {
      "prefix": "panos_mgtconfig-1",
      "description": "set dns and panorama",
      "body": [
        "- name: set dns and panorama",
        "\tpanos_mgtconfig:",
        "\t\tip_address: 192.168.1.1",
        "\t\tpassword: admin",
        "\t\tdns_server_primary: 1.1.1.1",
        "\t\tdns_server_secondary: 1.1.1.2",
        "\t\tpanorama_primary: 1.1.1.3",
        "\t\tpanorama_secondary: 1.1.1.4",
        ""
      ]
    },
    "panos_object": {
      "prefix": "panos_object-5",
      "description": "delete an address object from a devicegroup using API key",
      "body": [
        "- name: delete an address object from a devicegroup using API key",
        "\tpanos_object:",
        "\t\tip_address: '{{ ip_address }}'",
        "\t\tapi_key: '{{ api_key }}'",
        "\t\toperation: delete",
        "\t\taddressobject: Win2K test",
        ""
      ]
    },
    "panos_pg": {
      "prefix": "panos_pg-1",
      "description": "setup security profile group",
      "body": [
        "- name: setup security profile group",
        "\tpanos_pg:",
        "\t\tip_address: 192.168.1.1",
        "\t\tpassword: admin",
        "\t\tusername: admin",
        "\t\tpg_name: pg-default",
        "\t\tvirus: default",
        "\t\tspyware: default",
        "\t\tvulnerability: default",
        ""
      ]
    },
    "panos_restart": {
      "prefix": "panos_restart-1",
      "body": [
        "- panos_restart:",
        "\t\tip_address: 192.168.1.1",
        "\t\tusername: admin",
        "\t\tpassword: admin",
        ""
      ]
    },
    "panos_sag": {
      "prefix": "panos_sag-1",
      "description": "sag",
      "body": [
        "- name: sag",
        "\tpanos_sag:",
        "\t\tip_address: 192.168.1.1",
        "\t\tpassword: admin",
        "\t\tsag_name: sag-1",
        "\t\tstatic_value:",
        "\t\t\t- test-addresses",
        "\t\tdescription: A description for the static address group",
        "\t\ttags:",
        "\t\t\t- tags to be associated with the group",
        ""
      ]
    },
    "panos_security_policy": {
      "prefix": "panos_security_policy-5",
      "description": "permit ssh to 1.1.1.1 through Panorama",
      "body": [
        "- name: permit ssh to 1.1.1.1 through Panorama",
        "\tpanos_security_policy:",
        "\t\tip_address: 10.5.172.92",
        "\t\tpassword: paloalto",
        "\t\trule_name: SSH permit",
        "\t\tdescription: SSH rule test",
        "\t\tfrom_zone:",
        "\t\t\t- public",
        "\t\tto_zone:",
        "\t\t\t- private",
        "\t\tsource:",
        "\t\t\t- any",
        "\t\tsource_user:",
        "\t\t\t- any",
        "\t\tdestination:",
        "\t\t\t- 1.1.1.1",
        "\t\tcategory:",
        "\t\t\t- any",
        "\t\tapplication:",
        "\t\t\t- ssh",
        "\t\tservice:",
        "\t\t\t- application-default",
        "\t\thip_profiles:",
        "\t\t\t- any",
        "\t\taction: allow",
        "\t\tdevicegroup: DeviceGroupA",
        ""
      ]
    },
    "panos_security_rule": {
      "prefix": "panos_security_rule-5",
      "description": "find a specific security rule",
      "body": [
        "- name: find a specific security rule",
        "\tpanos_security_rule:",
        "\t\tip_address: '{{ ip_address }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\toperation: find",
        "\t\trule_name: Allow RDP to DCs",
        "\tregister: result",
        ""
      ]
    },
    "parted": {
      "prefix": "parted-6",
      "body": [
        "- parted:",
        "\t\tdevice: /dev/sdb",
        "\t\tnumber: '{{ item.num }}'",
        "\t\tstate: absent",
        "\twith_items:",
        "\t\t- '{{ sdb_info.partitions }}'",
        ""
      ]
    },
    "patch": {
      "prefix": "patch-2",
      "description": "Apply patch to multiple files under basedir",
      "body": [
        "- name: Apply patch to multiple files under basedir",
        "\tpatch:",
        "\t\tsrc: /tmp/customize.patch",
        "\t\tbasedir: /var/www",
        "\t\tstrip: 1",
        ""
      ]
    },
    "pause": {
      "prefix": "pause-3",
      "body": [
        "- pause:",
        "\t\tprompt: Make sure org.foo.FooOverload exception is not present",
        ""
      ]
    },
    "pear": {
      "prefix": "pear-4",
      "body": [
        "- pear:",
        "\t\tname: 'Net_URL2,pecl/json_post'",
        "\t\tstate: absent",
        ""
      ]
    },
    "pingdom": {
      "prefix": "pingdom-2",
      "body": [
        "- pingdom:",
        "\t\tuid: example@example.com",
        "\t\tpasswd: password123",
        "\t\tkey: apipassword123",
        "\t\tcheckid: 12345",
        "\t\tstate: running",
        ""
      ]
    },
    "pip": {
      "prefix": "pip-15",
      "body": [
        "- pip:",
        "\t\tname: bottle",
        "\t\tumask: 18",
        "\tbecome: true",
        ""
      ]
    },
    "pkg5": {
      "prefix": "pkg5-3",
      "body": [
        "- pkg5:",
        "\t\tname:",
        "\t\t\t- /file/gnu-findutils",
        "\t\t\t- /text/gnu-grep",
        ""
      ]
    },
    "pkg5_publisher": {
      "prefix": "pkg5_publisher-2",
      "body": [
        "- pkg5_publisher:",
        "\t\tname: site",
        "\t\torigin: 'https://pkg.example.com/site/'",
        ""
      ]
    },
    "pkgin": {
      "prefix": "pkgin-9",
      "body": [
        "- pkgin:",
        "\t\tclean: 'yes'",
        ""
      ]
    },
    "pkgng": {
      "prefix": "pkgng-3",
      "body": [
        "- pkgng:",
        "\t\tname: 'foo,bar'",
        "\t\tstate: absent",
        ""
      ]
    },
    "pkgutil": {
      "prefix": "pkgutil-2",
      "body": [
        "- pkgutil:",
        "\t\tname: CSWnrpe",
        "\t\tsite: 'ftp://myinternal.repo/opencsw/kiel'",
        "\t\tstate: latest",
        ""
      ]
    },
    "pn_cluster": {
      "prefix": "pn_cluster-2",
      "description": "delete spine cluster",
      "body": [
        "- name: delete spine cluster",
        "\tpn_cluster:",
        "\t\tstate: absent",
        "\t\tpn_name: spine-cluster",
        "\t\tpn_quiet: true",
        ""
      ]
    },
    "pn_ospf": {
      "prefix": "pn_ospf-2",
      "description": "Remove OSPF from vrouter",
      "body": [
        "- name: Remove OSPF from vrouter",
        "\tpn_ospf:",
        "\t\tstate: absent",
        "\t\tpn_vrouter_name: name-string",
        ""
      ]
    },
    "pn_ospfarea": {
      "prefix": "pn_ospfarea-2",
      "description": "Remove OSPF from vrouter",
      "body": [
        "- name: Remove OSPF from vrouter",
        "\tpn_ospf:",
        "\t\tstate: absent",
        "\t\tpn_cliusername: admin",
        "\t\tpn_clipassword: admin",
        "\t\tpn_vrouter_name: name-string",
        "\t\tpn_ospf_area: 1.0.0.0",
        ""
      ]
    },
    "pn_show": {
      "prefix": "pn_show-3",
      "description": "run the cluster-show command",
      "body": [
        "- name: run the cluster-show command",
        "\tpn_show:",
        "\t\tpn_command: cluster-show",
        ""
      ]
    },
    "pn_trunk": {
      "prefix": "pn_trunk-2",
      "description": "delete trunk",
      "body": [
        "- name: delete trunk",
        "\tpn_trunk:",
        "\t\tstate: absent",
        "\t\tpn_name: spine-to-leaf",
        ""
      ]
    },
    "pn_vlag": {
      "prefix": "pn_vlag-2",
      "description": "delete VLAGs",
      "body": [
        "- name: delete VLAGs",
        "\tpn_vlag:",
        "\t\tstate: absent",
        "\t\tpn_name: spine-to-leaf",
        ""
      ]
    },
    "pn_vlan": {
      "prefix": "pn_vlan-2",
      "description": "delete VLANs",
      "body": [
        "- name: delete VLANs",
        "\tpn_vlan:",
        "\t\tstate: absent",
        "\t\tpn_vlanid: 1854",
        ""
      ]
    },
    "pn_vrouter": {
      "prefix": "pn_vrouter-2",
      "description": "delete vrouter",
      "body": [
        "- name: delete vrouter",
        "\tpn_vrouter:",
        "\t\tstate: absent",
        "\t\tpn_name: ansible-vrouter",
        ""
      ]
    },
    "pn_vrouterbgp": {
      "prefix": "pn_vrouterbgp-2",
      "description": "remove vrouter-bgp",
      "body": [
        "- name: remove vrouter-bgp",
        "\tpn_vrouterbgp:",
        "\t\tstate: absent",
        "\t\tpn_name: ansible-vrouter",
        ""
      ]
    },
    "pn_vrouterif": {
      "prefix": "pn_vrouterif-3",
      "description": "Remove vrouter-interface",
      "body": [
        "- name: Remove vrouter-interface",
        "\tpn_vrouterif:",
        "\t\tpn_cliusername: admin",
        "\t\tpn_clipassword: admin",
        "\t\tstate: absent",
        "\t\tpn_vrouter_name: ansible-vrouter",
        "\t\tpn_interface_ip: 101.101.101.2/24",
        ""
      ]
    },
    "pn_vrouterlbif": {
      "prefix": "pn_vrouterlbif-2",
      "description": "remove vrouter-loopback-interface",
      "body": [
        "- name: remove vrouter-loopback-interface",
        "\tpn_vrouterlbif:",
        "\t\tstate: absent",
        "\t\tpn_vrouter_name: ansible-vrouter",
        "\t\tpn_interface_ip: 104.104.104.1",
        ""
      ]
    },
    "portage": {
      "prefix": "portage-8",
      "body": [
        "- portage:",
        "\t\tpackage: foo",
        "\t\tstate: absent",
        "\t\tdepclean: 'yes'",
        ""
      ]
    },
    "portinstall": {
      "prefix": "portinstall-3",
      "body": [
        "- portinstall:",
        "\t\tname: 'foo,bar'",
        "\t\tstate: absent",
        ""
      ]
    },
    "postgresql_db": {
      "prefix": "postgresql_db-5",
      "body": [
        "- postgresql_db:",
        "\t\tname: acme",
        "\t\tstate: dump",
        "\t\ttarget: /tmp/acme.sql",
        "\t\ttarget_opts: '-n public'",
        ""
      ]
    },
    "postgresql_ext": {
      "prefix": "postgresql_ext-1",
      "body": [
        "- postgresql_ext:",
        "\t\tname: postgis",
        "\t\tdb: acme",
        ""
      ]
    },
    "postgresql_lang": {
      "prefix": "postgresql_lang-5",
      "body": [
        "- postgresql_lang:",
        "\t\tdb: testdb",
        "\t\tlang: pltclu",
        "\t\tstate: absent",
        "\t\tfail_on_drop: 'no'",
        ""
      ]
    },
    "postgresql_privs": {
      "prefix": "postgresql_privs-9",
      "body": [
        "- postgresql_privs:",
        "\t\tdb: library",
        "\t\tprivs: ALL",
        "\t\ttype: database",
        "\t\trole: librarian",
        ""
      ]
    },
    "postgresql_schema": {
      "prefix": "postgresql_schema-2",
      "body": [
        "- postgresql_schema:",
        "\t\tname: acme",
        "\t\towner: bob",
        ""
      ]
    },
    "postgresql_user": {
      "prefix": "postgresql_user-4",
      "body": [
        "- postgresql_user:",
        "\t\tdb: test",
        "\t\tname: test",
        "\t\tpriv: ALL",
        "\t\tstate: absent",
        ""
      ]
    },
    "profitbricks_datacenter": {
      "prefix": "profitbricks_datacenter-2",
      "body": [
        "- profitbricks_datacenter:",
        "\t\tdatacenter: Tardis One",
        "\t\twait_timeout: 500",
        "\t\tstate: absent",
        ""
      ]
    },
    "profitbricks_nic": {
      "prefix": "profitbricks_nic-2",
      "body": [
        "- profitbricks_nic:",
        "\t\tdatacenter: Tardis One",
        "\t\tserver: node002",
        "\t\tname: 7341c2454f",
        "\t\twait_timeout: 500",
        "\t\tstate: absent",
        ""
      ]
    },
    "proxmox": {
      "prefix": "proxmox-13",
      "body": [
        "- proxmox:",
        "\t\tvmid: 100",
        "\t\tapi_user: root@pam",
        "\t\tapi_password: 1q2w3e",
        "\t\tapi_host: node1",
        "\t\tstate: absent",
        ""
      ]
    },
    "proxmox_kvm": {
      "prefix": "proxmox_kvm-17",
      "body": [
        "- proxmox_kvm:",
        "\t\tapi_user: root@pam",
        "\t\tapi_password: secret",
        "\t\tapi_host: helldorado",
        "\t\tname: spynal",
        "\t\tnode: sabrewulf",
        "\t\trevert: 'template,cpulimit'",
        ""
      ]
    },
    "proxmox_template": {
      "prefix": "proxmox_template-4",
      "body": [
        "- proxmox_template:",
        "\t\tnode: uk-mc02",
        "\t\tapi_user: root@pam",
        "\t\tapi_password: 1q2w3e",
        "\t\tapi_host: node1",
        "\t\ttemplate: ubuntu-14.04-x86_64.tar.gz",
        "\t\tstate: absent",
        ""
      ]
    },
    "proxysql_backend_servers": {
      "prefix": "proxysql_backend_servers-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "proxysql_global_variables": {
      "prefix": "proxysql_global_variables-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "proxysql_manage_config": {
      "prefix": "proxysql_manage_config-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "proxysql_mysql_users": {
      "prefix": "proxysql_mysql_users-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "proxysql_query_rules": {
      "prefix": "proxysql_query_rules-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "proxysql_replication_hostgroups": {
      "prefix": "proxysql_replication_hostgroups-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "proxysql_scheduler": {
      "prefix": "proxysql_scheduler-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "pubnub_blocks": {
      "prefix": "pubnub_blocks-4",
      "description": "Create '{{ block_name }}' block",
      "body": [
        "- name: 'Create ''{{ block_name }}'' block'",
        "\tregister: module_cache",
        "\tpubnub_blocks:",
        "\t\temail: '{{ email }}'",
        "\t\tpassword: '{{ password }}'",
        "\t\tapplication: '{{ app_name }}'",
        "\t\tkeyset: '{{ keyset_name }}'",
        "\t\tname: '{{ block_name }}'",
        "\t\tstate: present",
        ""
      ]
    },
    "pulp_repo": {
      "prefix": "pulp_repo-3",
      "description": "Remove a repo from the pulp server",
      "body": [
        "- name: Remove a repo from the pulp server",
        "\tpulp_repo:",
        "\t\tname: my_old_repo",
        "\t\trepo_type: rpm",
        "\t\tstate: absent",
        ""
      ]
    },
    "puppet": {
      "prefix": "puppet-6",
      "body": [
        "- puppet:",
        "\t\ttags: 'update,nginx'",
        ""
      ]
    },
    "purefa_hg": {
      "prefix": "purefa_hg-3",
      "description": "Create host group with hosts and volumes",
      "body": [
        "- name: Create host group with hosts and volumes",
        "\tpurefa_hg:",
        "\t\thostgroup: bar",
        "\t\thost:",
        "\t\t\t- host1",
        "\t\t\t- host2",
        "\t\tvolume:",
        "\t\t\t- vol1",
        "\t\t\t- vol2",
        "\t\tfa_url: 10.10.10.2",
        "\t\tapi_token: e31060a7-21fc-e277-6240-25983c6c4592",
        ""
      ]
    },
    "purefa_host": {
      "prefix": "purefa_host-5",
      "description": "Map host foo to volume bar",
      "body": [
        "- name: Map host foo to volume bar",
        "\tpurefa_host:",
        "\t\thost: foo",
        "\t\tvolume: bar",
        "\t\tfa_url: 10.10.10.2",
        "\t\tapi_token: e31060a7-21fc-e277-6240-25983c6c4592",
        ""
      ]
    },
    "purefa_pg": {
      "prefix": "purefa_pg-6",
      "description": "Create protection group for volumes",
      "body": [
        "- name: Create protection group for volumes",
        "\tpurefa_pg:",
        "\t\tpgroup: bar",
        "\t\tvolume:",
        "\t\t\t- vol1",
        "\t\t\t- vol2",
        "\t\tfa_url: 10.10.10.2",
        "\t\tapi_token: e31060a7-21fc-e277-6240-25983c6c4592",
        ""
      ]
    },
    "purefa_snap": {
      "prefix": "purefa_snap-4",
      "description": "Delete and eradicate snapshot named foo.snap",
      "body": [
        "- name: Delete and eradicate snapshot named foo.snap",
        "\tpurefa_snap:",
        "\t\tname: foo",
        "\t\tsuffix: snap",
        "\t\teradicate: true",
        "\t\tfa_url: 10.10.10.2",
        "\t\tfa_api_token: e31060a7-21fc-e277-6240-25983c6c4592",
        "\t\tstate: absent",
        ""
      ]
    },
    "purefa_volume": {
      "prefix": "purefa_volume-5",
      "description": "Overwrite volume bar with volume foo",
      "body": [
        "- name: Overwrite volume bar with volume foo",
        "\tpurefa_volume:",
        "\t\tname: foo",
        "\t\ttarget: bar",
        "\t\toverwrite: 'yes'",
        "\t\tfa_url: 10.10.10.2",
        "\t\tapi_token: e31060a7-21fc-e277-6240-25983c6c4592",
        "\t\tstate: present",
        ""
      ]
    },
    "pushbullet": {
      "prefix": "pushbullet-4",
      "body": [
        "- pushbullet:",
        "\t\tapi_key: ABC123abc123ABC123abc123ABC123ab",
        "\t\tchannel: my-awesome-channel",
        "\t\ttitle: ALERT! Signup service is down",
        "\t\tbody: Error rate on signup service is over 90% for more than 2 minutes",
        ""
      ]
    },
    "pushover": {
      "prefix": "pushover-1",
      "body": [
        "- pushover:",
        "\t\tmsg: '{{ inventory_hostname }} has exploded in flames, It is now time to panic'",
        "\t\tapp_token: wxfdksl",
        "\t\tuser_key: baa5fe97f2c5ab3ca8f0bb59",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "rabbitmq_binding": {
      "prefix": "rabbitmq_binding-2",
      "body": [
        "- rabbitmq_binding:",
        "\t\tname: topicExchange",
        "\t\tdestination: topicExchange",
        "\t\ttype: exchange",
        "\t\trouting_key: '*.info'",
        ""
      ]
    },
    "rabbitmq_exchange": {
      "prefix": "rabbitmq_exchange-2",
      "body": [
        "- rabbitmq_exchange:",
        "\t\tname: topicExchange",
        "\t\ttype: topic",
        "\t\tvhost: myVhost",
        ""
      ]
    },
    "rabbitmq_parameter": {
      "prefix": "rabbitmq_parameter-1",
      "body": [
        "- rabbitmq_parameter:",
        "\t\tcomponent: federation",
        "\t\tname: local-username",
        "\t\tvalue: '\"guest\"'",
        "\t\tstate: present",
        ""
      ]
    },
    "rabbitmq_plugin": {
      "prefix": "rabbitmq_plugin-1",
      "description": "Enables the rabbitmq_management plugin",
      "body": [
        "- name: Enables the rabbitmq_management plugin",
        "\trabbitmq_plugin:",
        "\t\tnames: rabbitmq_management",
        "\t\tstate: enabled",
        ""
      ]
    },
    "rabbitmq_policy": {
      "prefix": "rabbitmq_policy-2",
      "description": "ensure the default vhost contains the HA policy",
      "body": [
        "- name: ensure the default vhost contains the HA policy",
        "\trabbitmq_policy:",
        "\t\tname: HA",
        "\t\tpattern: .*",
        "\t\ttags:",
        "\t\t\tha-mode: all",
        ""
      ]
    },
    "rabbitmq_queue": {
      "prefix": "rabbitmq_queue-2",
      "body": [
        "- rabbitmq_queue:",
        "\t\tname: myRemoteQueue",
        "\t\tlogin_user: user",
        "\t\tlogin_password: secret",
        "\t\tlogin_host: remote.example.org",
        ""
      ]
    },
    "rabbitmq_user": {
      "prefix": "rabbitmq_user-2",
      "body": [
        "- rabbitmq_user:",
        "\t\tuser: joe",
        "\t\tpassword: changeme",
        "\t\tpermissions:",
        "\t\t\t- vhost: /",
        "\t\t\t\tconfigure_priv: .*",
        "\t\t\t\tread_priv: .*",
        "\t\t\t\twrite_priv: .*",
        "\t\tstate: present",
        ""
      ]
    },
    "rabbitmq_vhost": {
      "prefix": "rabbitmq_vhost-1",
      "body": [
        "- rabbitmq_vhost:",
        "\t\tname: /test",
        "\t\tstate: present",
        ""
      ]
    },
    "raw": {
      "prefix": "raw-4",
      "description": "safely use templated variables. Always use quote filter to avoid injection issues.",
      "body": [
        "- name: >-",
        "\t\tsafely use templated variables. Always use quote filter to avoid injection",
        "\t\tissues.",
        "\traw: >-",
        "\t\t{{package_mgr|quote}} {{pkg_flags|quote}} install",
        "\t\t{{python_simplejson|quote}}",
        ""
      ]
    },
    "rax": {
      "prefix": "rax-2",
      "description": "Build an exact count of cloud servers with incremented names",
      "body": [
        "- name: Build an exact count of cloud servers with incremented names",
        "\thosts: local",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: Server build requests",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tname: test%03d.example.org",
        "\t\t\t\tflavor: performance1-1",
        "\t\t\t\timage: ubuntu-1204-lts-precise-pangolin",
        "\t\t\t\tstate: present",
        "\t\t\t\tcount: 10",
        "\t\t\t\tcount_offset: 10",
        "\t\t\t\texact_count: 'yes'",
        "\t\t\t\tgroup: test",
        "\t\t\t\twait: 'yes'",
        "\t\t\tregister: rax",
        ""
      ]
    },
    "rax_cbs": {
      "prefix": "rax_cbs-1",
      "description": "Build a Block Storage Volume",
      "body": [
        "- name: Build a Block Storage Volume",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Storage volume create request",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_cbs",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tname: my-volume",
        "\t\t\t\tdescription: My Volume",
        "\t\t\t\tvolume_type: SSD",
        "\t\t\t\tsize: 150",
        "\t\t\t\tregion: DFW",
        "\t\t\t\twait: 'yes'",
        "\t\t\t\tstate: present",
        "\t\t\t\tmeta:",
        "\t\t\t\t\tapp: my-cool-app",
        "\t\t\tregister: my_volume",
        ""
      ]
    },
    "rax_cbs_attachments": {
      "prefix": "rax_cbs_attachments-1",
      "description": "Attach a Block Storage Volume",
      "body": [
        "- name: Attach a Block Storage Volume",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Storage volume attach request",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_cbs_attachments",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tvolume: my-volume",
        "\t\t\t\tserver: my-server",
        "\t\t\t\tdevice: /dev/xvdd",
        "\t\t\t\tregion: DFW",
        "\t\t\t\twait: 'yes'",
        "\t\t\t\tstate: present",
        "\t\t\tregister: my_volume",
        ""
      ]
    },
    "rax_cdb": {
      "prefix": "rax_cdb-1",
      "description": "Build a Cloud Databases",
      "body": [
        "- name: Build a Cloud Databases",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: Server build request",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_cdb",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tregion: IAD",
        "\t\t\t\tname: db-server1",
        "\t\t\t\tflavor: 1",
        "\t\t\t\tvolume: 2",
        "\t\t\t\tcdb_type: MySQL",
        "\t\t\t\tcdb_version: 5.6",
        "\t\t\t\twait: 'yes'",
        "\t\t\t\tstate: present",
        "\t\t\tregister: rax_db_server",
        ""
      ]
    },
    "rax_cdb_database": {
      "prefix": "rax_cdb_database-1",
      "description": "Build a database in Cloud Databases",
      "body": [
        "- name: Build a database in Cloud Databases",
        "\ttasks:",
        "\t\t- name: Database build request",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_cdb_database",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tregion: IAD",
        "\t\t\t\tcdb_id: 323e7ce0-9cb0-11e3-a5e2-0800200c9a66",
        "\t\t\t\tname: db1",
        "\t\t\t\tstate: present",
        "\t\t\tregister: rax_db_database",
        ""
      ]
    },
    "rax_cdb_user": {
      "prefix": "rax_cdb_user-1",
      "description": "Build a user in Cloud Databases",
      "body": [
        "- name: Build a user in Cloud Databases",
        "\ttasks:",
        "\t\t- name: User build request",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_cdb_user",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tregion: IAD",
        "\t\t\t\tcdb_id: 323e7ce0-9cb0-11e3-a5e2-0800200c9a66",
        "\t\t\t\tdb_username: user1",
        "\t\t\t\tdb_password: user1",
        "\t\t\t\tdatabases:",
        "\t\t\t\t\t- db1",
        "\t\t\t\tstate: present",
        "\t\t\tregister: rax_db_user",
        ""
      ]
    },
    "rax_clb": {
      "prefix": "rax_clb-1",
      "description": "Build a Load Balancer",
      "body": [
        "- name: Build a Load Balancer",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Load Balancer create request",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_clb",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tname: my-lb",
        "\t\t\t\tport: 8080",
        "\t\t\t\tprotocol: HTTP",
        "\t\t\t\ttype: SERVICENET",
        "\t\t\t\ttimeout: 30",
        "\t\t\t\tregion: DFW",
        "\t\t\t\twait: 'yes'",
        "\t\t\t\tstate: present",
        "\t\t\t\tmeta:",
        "\t\t\t\t\tapp: my-cool-app",
        "\t\t\tregister: my_lb",
        ""
      ]
    },
    "rax_clb_nodes": {
      "prefix": "rax_clb_nodes-3",
      "body": [
        "- local_action:",
        "\t\tmodule: rax_clb_nodes",
        "\t\tload_balancer_id: 71",
        "\t\tnode_id: 410",
        "\t\tstate: absent",
        "\t\twait: 'yes'",
        "\t\tcredentials: /path/to/credentials",
        ""
      ]
    },
    "rax_clb_ssl": {
      "prefix": "rax_clb_ssl-2",
      "description": "Disable SSL termination",
      "body": [
        "- name: Disable SSL termination",
        "\trax_clb_ssl:",
        "\t\tloadbalancer: '{{ registered_lb.balancer.id }}'",
        "\t\tstate: absent",
        "\t\twait: true",
        ""
      ]
    },
    "rax_dns": {
      "prefix": "rax_dns-1",
      "description": "Create domain",
      "body": [
        "- name: Create domain",
        "\thosts: all",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: Domain create request",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_dns",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tname: example.org",
        "\t\t\t\temail: admin@example.org",
        "\t\t\tregister: rax_dns",
        ""
      ]
    },
    "rax_dns_record": {
      "prefix": "rax_dns_record-1",
      "description": "Create DNS Records",
      "body": [
        "- name: Create DNS Records",
        "\thosts: all",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: Create A record",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_dns_record",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tdomain: example.org",
        "\t\t\t\tname: www.example.org",
        "\t\t\t\tdata: '{{ rax_accessipv4 }}'",
        "\t\t\t\ttype: A",
        "\t\t\tregister: a_record",
        ""
      ]
    },
    "rax_facts": {
      "prefix": "rax_facts-1",
      "description": "Gather info about servers",
      "body": [
        "- name: Gather info about servers",
        "\thosts: all",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: Get facts about servers",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_facts",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tname: '{{ inventory_hostname }}'",
        "\t\t\t\tregion: DFW",
        "\t\t- name: Map some facts",
        "\t\t\tset_fact:",
        "\t\t\t\tansible_ssh_host: '{{ rax_accessipv4 }}'",
        ""
      ]
    },
    "rax_files": {
      "prefix": "rax_files-1",
      "description": "Test Cloud Files Containers",
      "body": [
        "- name: Test Cloud Files Containers",
        "\thosts: local",
        "\tgather_facts: 'no'",
        "\ttasks:",
        "\t\t- name: List all containers",
        "\t\t\trax_files:",
        "\t\t\t\tstate: list",
        ""
      ]
    },
    "rax_files_objects": {
      "prefix": "rax_files_objects-1",
      "description": "Test Cloud Files Objects",
      "body": [
        "- name: Test Cloud Files Objects",
        "\thosts: local",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: Get objects from test container",
        "\t\t\trax_files_objects:",
        "\t\t\t\tcontainer: testcont",
        "\t\t\t\tdest: ~/Downloads/testcont",
        ""
      ]
    },
    "rax_identity": {
      "prefix": "rax_identity-1",
      "description": "Load Rackspace Cloud Identity",
      "body": [
        "- name: Load Rackspace Cloud Identity",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Load Identity",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_identity",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tregion: DFW",
        "\t\t\tregister: rackspace_identity",
        ""
      ]
    },
    "rax_keypair": {
      "prefix": "rax_keypair-2",
      "description": "Create a keypair",
      "body": [
        "- name: Create a keypair",
        "\thosts: localhost",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: keypair request",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_keypair",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tname: my_keypair",
        "\t\t\t\tpublic_key: '{{ lookup(''file'', ''authorized_keys/id_rsa.pub'') }}'",
        "\t\t\t\tregion: DFW",
        "\t\t\tregister: keypair",
        ""
      ]
    },
    "rax_meta": {
      "prefix": "rax_meta-1",
      "description": "Set metadata for a server",
      "body": [
        "- name: Set metadata for a server",
        "\thosts: all",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: Set metadata",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_meta",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tname: '{{ inventory_hostname }}'",
        "\t\t\t\tregion: DFW",
        "\t\t\t\tmeta:",
        "\t\t\t\t\tgroup: primary_group",
        "\t\t\t\t\tgroups:",
        "\t\t\t\t\t\t- group_two",
        "\t\t\t\t\t\t- group_three",
        "\t\t\t\t\tapp: my_app",
        ""
      ]
    },
    "rax_mon_alarm": {
      "prefix": "rax_mon_alarm-1",
      "description": "Alarm example",
      "body": [
        "- name: Alarm example",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Ensure that a specific alarm exists.",
        "\t\t\trax_mon_alarm:",
        "\t\t\t\tcredentials: ~/.rax_pub",
        "\t\t\t\tstate: present",
        "\t\t\t\tlabel: uhoh",
        "\t\t\t\tentity_id: '{{ the_entity[''entity''][''id''] }}'",
        "\t\t\t\tcheck_id: '{{ the_check[''check''][''id''] }}'",
        "\t\t\t\tnotification_plan_id: '{{ defcon1[''notification_plan''][''id''] }}'",
        "\t\t\t\tcriteria: |",
        "\t\t\t\t\tif (rate(metric['average']) > 10) {",
        "\t\t\t\t\t\treturn new AlarmStatus(WARNING);",
        "\t\t\t\t\t} return new AlarmStatus(OK);",
        "\t\t\tregister: the_alarm",
        ""
      ]
    },
    "rax_mon_check": {
      "prefix": "rax_mon_check-1",
      "description": "Create a monitoring check",
      "body": [
        "- name: Create a monitoring check",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Associate a check with an existing entity.",
        "\t\t\trax_mon_check:",
        "\t\t\t\tcredentials: ~/.rax_pub",
        "\t\t\t\tstate: present",
        "\t\t\t\tentity_id: '{{ the_entity[''entity''][''id''] }}'",
        "\t\t\t\tlabel: the_check",
        "\t\t\t\tcheck_type: remote.ping",
        "\t\t\t\tmonitoring_zones_poll: 'mziad,mzord,mzdfw'",
        "\t\t\t\tdetails:",
        "\t\t\t\t\tcount: 10",
        "\t\t\t\tmeta:",
        "\t\t\t\t\thurf: durf",
        "\t\t\tregister: the_check",
        ""
      ]
    },
    "rax_mon_entity": {
      "prefix": "rax_mon_entity-1",
      "description": "Entity example",
      "body": [
        "- name: Entity example",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Ensure an entity exists",
        "\t\t\trax_mon_entity:",
        "\t\t\t\tcredentials: ~/.rax_pub",
        "\t\t\t\tstate: present",
        "\t\t\t\tlabel: my_entity",
        "\t\t\t\tnamed_ip_addresses:",
        "\t\t\t\t\tweb_box: 192.0.2.4",
        "\t\t\t\t\tdb_box: 192.0.2.5",
        "\t\t\t\tmeta:",
        "\t\t\t\t\thurf: durf",
        "\t\t\tregister: the_entity",
        ""
      ]
    },
    "rax_mon_notification": {
      "prefix": "rax_mon_notification-1",
      "description": "Monitoring notification example",
      "body": [
        "- name: Monitoring notification example",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Email me when something goes wrong.",
        "\t\t\trax_mon_entity:",
        "\t\t\t\tcredentials: ~/.rax_pub",
        "\t\t\t\tlabel: omg",
        "\t\t\t\ttype: email",
        "\t\t\t\tdetails:",
        "\t\t\t\t\taddress: me@mailhost.com",
        "\t\t\tregister: the_notification",
        ""
      ]
    },
    "rax_mon_notification_plan": {
      "prefix": "rax_mon_notification_plan-1",
      "description": "Example notification plan",
      "body": [
        "- name: Example notification plan",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Establish who gets called when.",
        "\t\t\trax_mon_notification_plan:",
        "\t\t\t\tcredentials: ~/.rax_pub",
        "\t\t\t\tstate: present",
        "\t\t\t\tlabel: defcon1",
        "\t\t\t\tcritical_state:",
        "\t\t\t\t\t- '{{ everyone[''notification''][''id''] }}'",
        "\t\t\t\twarning_state:",
        "\t\t\t\t\t- '{{ opsfloor[''notification''][''id''] }}'",
        "\t\t\tregister: defcon1",
        ""
      ]
    },
    "rax_network": {
      "prefix": "rax_network-1",
      "description": "Build an Isolated Network",
      "body": [
        "- name: Build an Isolated Network",
        "\tgather_facts: false",
        ""
      ]
    },
    "rax_queue": {
      "prefix": "rax_queue-1",
      "description": "Build a Queue",
      "body": [
        "- name: Build a Queue",
        "\tgather_facts: false",
        "\thosts: local",
        "\tconnection: local",
        "\ttasks:",
        "\t\t- name: Queue create request",
        "\t\t\tlocal_action:",
        "\t\t\t\tmodule: rax_queue",
        "\t\t\t\tcredentials: ~/.raxpub",
        "\t\t\t\tname: my-queue",
        "\t\t\t\tregion: DFW",
        "\t\t\t\tstate: present",
        "\t\t\tregister: my_queue",
        ""
      ]
    },
    "rax_scaling_group": {
      "prefix": "rax_scaling_group-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "rax_scaling_policy": {
      "prefix": "rax_scaling_policy-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "rds": {
      "prefix": "rds-9",
      "body": [
        "- debug:",
        "\t\tmsg: 'The new db endpoint is {{ rds.instance.endpoint }}'",
        ""
      ]
    },
    "rds_param_group": {
      "prefix": "rds_param_group-2",
      "body": [
        "- rds_param_group:",
        "\t\tstate: absent",
        "\t\tname: norwegian_blue",
        ""
      ]
    },
    "rds_subnet_group": {
      "prefix": "rds_subnet_group-2",
      "body": [
        "- rds_subnet_group:",
        "\t\tstate: absent",
        "\t\tname: norwegian-blue",
        ""
      ]
    },
    "redhat_subscription": {
      "prefix": "redhat_subscription-8",
      "description": "Register as user credentials into given environment (against Red Hat Satellite 6.x), and auto-subscribe.",
      "body": [
        "- name: >-",
        "\t\tRegister as user credentials into given environment (against Red Hat",
        "\t\tSatellite 6.x), and auto-subscribe.",
        "\tredhat_subscription:",
        "\t\tstate: present",
        "\t\tusername: joe_user",
        "\t\tpassword: somepass",
        "\t\tenvironment: Library",
        "\t\tautosubscribe: 'yes'",
        ""
      ]
    },
    "redis": {
      "prefix": "redis-6",
      "body": [
        "- redis:",
        "\t\tcommand: config",
        "\t\tname: lua-time-limit",
        "\t\tvalue: 100",
        ""
      ]
    },
    "redshift": {
      "prefix": "redshift-2",
      "body": [
        "- redshift:",
        "\t\tcommand: delete",
        "\t\tidentifier: new_cluster",
        "\t\tskip_final_cluster_snapshot: true",
        "\t\twait: true",
        ""
      ]
    },
    "redshift_subnet_group": {
      "prefix": "redshift_subnet_group-2",
      "body": [
        "- redshift_subnet_group:",
        "\t\tstate: absent",
        "\t\tgroup_name: redshift-subnet",
        ""
      ]
    },
    "replace": {
      "prefix": "replace-8",
      "description": "long form task does not",
      "body": [
        "- name: long form task does not",
        "\treplace:",
        "\t\tdest: /etc/hosts",
        "\t\tregexp: \\b(localhost)(\\d*)\\b",
        "\t\treplace: \\1\\2.localdomain\\2 \\1\\2",
        ""
      ]
    },
    "rhn_channel": {
      "prefix": "rhn_channel-1",
      "body": [
        "- rhn_channel:",
        "\t\tname: rhel-x86_64-server-v2vwin-6",
        "\t\tsysname: server01",
        "\t\turl: 'https://rhn.redhat.com/rpc/api'",
        "\t\tuser: rhnuser",
        "\t\tpassword: guessme",
        ""
      ]
    },
    "rhn_register": {
      "prefix": "rhn_register-6",
      "body": [
        "- rhn_register:",
        "\t\tstate: present",
        "\t\tusername: joe_user",
        "\t\tpassword: somepass",
        "\t\tchannels: 'rhel-x86_64-server-6-foo-1,rhel-x86_64-server-6-bar-1'",
        ""
      ]
    },
    "riak": {
      "prefix": "riak-3",
      "body": [
        "- riak:",
        "\t\twait_for_service: kv",
        ""
      ]
    },
    "rocketchat": {
      "prefix": "rocketchat-4",
      "description": "Use the attachments API",
      "body": [
        "- name: Use the attachments API",
        "\trocketchat:",
        "\t\ttoken: thetoken/generatedby/rocketchat",
        "\t\tdomain: chat.example.com",
        "\t\tattachments:",
        "\t\t\t- text: Display my system load on host A and B",
        "\t\t\t\tcolor: null",
        "\t\t\t\ttitle: System load",
        "\t\t\t\tfields:",
        "\t\t\t\t\t- title: System A",
        "\t\t\t\t\t\tvalue: 'load average: 0,74, 0,66, 0,63'",
        "\t\t\t\t\t\tshort: true",
        "\t\t\t\t\t- title: System B",
        "\t\t\t\t\t\tvalue: 'load average: 5,16, 4,64, 2,43'",
        "\t\t\t\t\t\tshort: true",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "rollbar_deployment": {
      "prefix": "rollbar_deployment-1",
      "body": [
        "- rollbar_deployment:",
        "\t\ttoken: AAAAAA",
        "\t\tenvironment: staging",
        "\t\tuser: ansible",
        "\t\trevision: '4.2'",
        "\t\trollbar_user: admin",
        "\t\tcomment: Test Deploy",
        ""
      ]
    },
    "route53": {
      "prefix": "route53-13",
      "body": [
        "- route53:",
        "\t\tstate: present",
        "\t\tzone: foo.com",
        "\t\trecord: www.foo.com",
        "\t\ttype: CNAME",
        "\t\tvalue: host1.foo.com",
        "\t\tttl: 30",
        "\t\tidentifier: host1@www",
        "\t\tweight: 100",
        "\t\thealth_check: d994b780-3150-49fd-9205-356abdd42e75",
        ""
      ]
    },
    "route53_facts": {
      "prefix": "route53_facts-7",
      "description": "setup of example for using next_marker",
      "body": [
        "- name: setup of example for using next_marker",
        "\troute53_facts:",
        "\t\tquery: hosted_zone",
        "\t\tmax_items: 1",
        "\tregister: first_facts",
        ""
      ]
    },
    "route53_health_check": {
      "prefix": "route53_health_check-3",
      "body": [
        "- route53_health_check:",
        "\t\tstate: absent",
        "\t\tfqdn: host1.example.com",
        ""
      ]
    },
    "route53_zone": {
      "prefix": "route53_zone-5",
      "body": [
        "- debug:",
        "\t\tvar: zone_out",
        ""
      ]
    },
    "rpm_key": {
      "prefix": "rpm_key-3",
      "body": [
        "- rpm_key:",
        "\t\tstate: absent",
        "\t\tkey: DEADB33F",
        ""
      ]
    },
    "rundeck_acl_policy": {
      "prefix": "rundeck_acl_policy-2",
      "description": "Remove a rundeck system policy",
      "body": [
        "- name: Remove a rundeck system policy",
        "\trundeck_acl_policy:",
        "\t\tname: Project_02",
        "\t\turl: 'https://rundeck.example.org'",
        "\t\ttoken: mytoken",
        "\t\tstate: absent",
        ""
      ]
    },
    "rundeck_project": {
      "prefix": "rundeck_project-2",
      "description": "Remove a rundeck project",
      "body": [
        "- name: Remove a rundeck project",
        "\trundeck_project:",
        "\t\tname: Project_02",
        "\t\turl: 'https://rundeck.example.org'",
        "\t\ttoken: mytoken",
        "\t\tstate: absent",
        ""
      ]
    },
    "s3_sync": {
      "prefix": "s3_sync-2",
      "description": "all the options",
      "body": [
        "- name: all the options",
        "\ts3_sync:",
        "\t\tbucket: tedder",
        "\t\tfile_root: roles/s3/files",
        "\t\tmime_map:",
        "\t\t\t.yml: application/text",
        "\t\t\t.json: application/text",
        "\t\tkey_prefix: config_files/web",
        "\t\tfile_change_strategy: force",
        "\t\tpermission: public-read",
        "\t\tcache_control: 'public, max-age=31536000'",
        "\t\tinclude: '*'",
        "\t\texclude: '*.txt,.*'",
        ""
      ]
    },
    "script": {
      "prefix": "script-3",
      "body": [
        "- script: /some/local/remove_file.sh --some-arguments 1234",
        "\targs:",
        "\t\tremoves: /the/removed/file.txt",
        ""
      ]
    },
    "seboolean": {
      "prefix": "seboolean-1",
      "body": [
        "- seboolean:",
        "\t\tname: httpd_can_network_connect",
        "\t\tstate: 'yes'",
        "\t\tpersistent: 'yes'",
        ""
      ]
    },
    "sefcontext": {
      "prefix": "sefcontext-1",
      "body": [
        "- sefcontext:",
        "\t\ttarget: /srv/git_repos(/.*)?",
        "\t\tsetype: httpd_git_rw_content_t",
        "\t\tstate: present",
        ""
      ]
    },
    "selinux": {
      "prefix": "selinux-3",
      "body": [
        "- selinux:",
        "\t\tstate: disabled",
        ""
      ]
    },
    "selinux_permissive": {
      "prefix": "selinux_permissive-1",
      "body": [
        "- selinux_permissive:",
        "\t\tname: httpd_t",
        "\t\tpermissive: true",
        ""
      ]
    },
    "sendgrid": {
      "prefix": "sendgrid-2",
      "body": [
        "- sendgrid:",
        "\t\tusername: '{{ sendgrid_username }}'",
        "\t\tpassword: '{{ sendgrid_password }}'",
        "\t\tfrom_address: build@mycompany.com",
        "\t\tto_addresses:",
        "\t\t\t- ops@mycompany.com",
        "\t\t\t- devteam@mycompany.com",
        "\t\tsubject: Build failure!.",
        "\t\tbody: Unable to pull source repository from Git server.",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "sensu_check": {
      "prefix": "sensu_check-3",
      "description": "check disk",
      "body": [
        "- name: check disk",
        "\tsensu_check:",
        "\t\tname: check_disk_capacity",
        "\t\tstate: absent",
        ""
      ]
    },
    "sensu_client": {
      "prefix": "sensu_client-4",
      "description": "Delete the Sensu client configuration",
      "body": [
        "- name: Delete the Sensu client configuration",
        "\tsensu_client:",
        "\t\tstate: absent",
        ""
      ]
    },
    "sensu_handler": {
      "prefix": "sensu_handler-4",
      "description": "Secure Sensu handler configuration file",
      "body": [
        "- name: Secure Sensu handler configuration file",
        "\tfile:",
        "\t\tpath: '{{ handler[''file''] }}'",
        "\t\towner: sensu",
        "\t\tgroup: sensu",
        "\t\tmode: '0600'",
        ""
      ]
    },
    "sensu_silence": {
      "prefix": "sensu_silence-2",
      "description": "Silence CPU_Usage check for server1.example.dev",
      "body": [
        "- name: Silence CPU_Usage check for server1.example.dev",
        "\tsensu_silence:",
        "\t\tsubscription: 'client:server1.example.dev'",
        "\t\tcheck: CPU_Usage",
        "\t\tcreator: '{{ ansible_user_id }}'",
        "\t\treason: Investigation alert issue",
        ""
      ]
    },
    "sensu_subscription": {
      "prefix": "sensu_subscription-2",
      "description": "unsubscribe from common checks",
      "body": [
        "- name: unsubscribe from common checks",
        "\tsensu_subscription: name=common state=absent",
        ""
      ]
    },
    "seport": {
      "prefix": "seport-3",
      "body": [
        "- seport:",
        "\t\tports: '10000-10100,10112'",
        "\t\tproto: tcp",
        "\t\tsetype: memcache_port_t",
        "\t\tstate: present",
        ""
      ]
    },
    "serverless": {
      "prefix": "serverless-5",
      "body": [
        "- serverless:",
        "\t\tstage: dev",
        "\t\tregion: us-east-1",
        "\t\tservice_path: '{{ project_dir }}'",
        "\t\tserverless_bin_path: node_modules/.bin/serverless",
        ""
      ]
    },
    "service": {
      "prefix": "service-7",
      "body": [
        "- service:",
        "\t\tname: network",
        "\t\tstate: restarted",
        "\t\targs: eth0",
        ""
      ]
    },
    "set_fact": {
      "prefix": "set_fact-4",
      "body": [
        "- set_fact:",
        "\t\tone_fact: true",
        "\t\tother_fact: false",
        ""
      ]
    },
    "set_stats": {
      "prefix": "set_stats-2",
      "body": [
        "- set_stats:",
        "\t\tdata:",
        "\t\t\tone_stat: 11",
        "\t\t\tother_stat: '{{ local_var * 2 }}'",
        "\t\t\tanother_stat: >-",
        "\t\t\t\t{{ some_registered_var.results |",
        "\t\t\t\tmap(attribute='ansible_facts.some_fact') | list }}",
        "\t\tper_host: 'no'",
        ""
      ]
    },
    "sf_account_manager": {
      "prefix": "sf_account_manager-3",
      "description": "Delete Account",
      "body": [
        "- name: Delete Account",
        "\tsf_account_manager:",
        "\t\thostname: '{{ solidfire_hostname }}'",
        "\t\tusername: '{{ solidfire_username }}'",
        "\t\tpassword: '{{ solidfire_password }}'",
        "\t\tstate: absent",
        "\t\tname: TenantA-Renamed",
        ""
      ]
    },
    "sf_check_connections": {
      "prefix": "sf_check_connections-1",
      "description": "",
      "body": [
        "- name: Check connections to MVIP and SVIP",
        "     sf_check_connections:",
        "       hostname: \"{{ solidfire_hostname }}\"",
        "       username: \"{{ solidfire_username }}\"",
        "       password: \"{{ solidfire_password }}\""
      ]
    },
    "sf_snapshot_schedule_manager": {
      "prefix": "sf_snapshot_schedule_manager-1",
      "description": "",
      "body": [
        "- name: Create Snapshot schedule",
        "     sf_snapshot_schedule_manager:",
        "       hostname: \"{{ solidfire_hostname }}\"",
        "       username: \"{{ solidfire_username }}\"",
        "       password: \"{{ solidfire_password }}\"",
        "       state: present",
        "       name: Schedule_A",
        "       time_interval_days: 1",
        "       starting_date: 2016--12--01T00:00:00Z",
        "       volumes: 7"
      ]
    },
    "sf_volume_access_group_manager": {
      "prefix": "sf_volume_access_group_manager-1",
      "description": "",
      "body": [
        "- name: Create Volume Access Group",
        "     sf_volume_access_group_manager:",
        "       hostname: \"{{ solidfire_hostname }}\"",
        "       username: \"{{ solidfire_username }}\"",
        "       password: \"{{ solidfire_password }}\"",
        "       state: present",
        "       name: AnsibleVolumeAccessGroup",
        "       volumes: [7,8]"
      ]
    },
    "sf_volume_manager": {
      "prefix": "sf_volume_manager-1",
      "description": "",
      "body": [
        "- name: Create Volume",
        "     sf_volume_manager:",
        "       hostname: \"{{ solidfire_hostname }}\"",
        "       username: \"{{ solidfire_username }}\"",
        "       password: \"{{ solidfire_password }}\"",
        "       state: present",
        "       name: AnsibleVol",
        "       qos: {minIOPS: 1000, maxIOPS: 20000, burstIOPS: 50000}",
        "       account_id: 3",
        "       enable512e: False",
        "       size: 1",
        "       size_unit: gb"
      ]
    },
    "shell": {
      "prefix": "shell-6",
      "description": "Run expect to wait for a successful PXE boot via out-of-band CIMC",
      "body": [
        "- name: Run expect to wait for a successful PXE boot via out-of-band CIMC",
        "\tshell: |",
        "\t\tset timeout 300",
        "\t\tspawn ssh admin@{{ cimc_host }}",
        ""
      ]
    },
    "sl_vm": {
      "prefix": "sl_vm-3",
      "description": "Cancel instances",
      "body": [
        "- name: Cancel instances",
        "\thosts: localhost",
        "\tgather_facts: false",
        "\ttasks:",
        "\t\t- name: Cancel by tag",
        "\t\t\tsl_vm:",
        "\t\t\t\tstate: absent",
        "\t\t\t\ttags: ansible-module-test",
        ""
      ]
    },
    "slack": {
      "prefix": "slack-6",
      "description": "Send a message with angle brackets and ampersands",
      "body": [
        "- name: Send a message with angle brackets and ampersands",
        "\tslack:",
        "\t\ttoken: thetoken/generatedby/slack",
        "\t\tmsg: This message has &lt;brackets&gt; &amp; ampersands in plain text.",
        ""
      ]
    },
    "slackpkg": {
      "prefix": "slackpkg-3",
      "body": [
        "- slackpkg:",
        "\t\tname: foo",
        "\t\tstate: latest",
        ""
      ]
    },
    "slurp": {
      "prefix": "slurp-2",
      "body": [
        "- debug:",
        "\t\tmsg: '{{ mounts[''content''] | b64decode }}'",
        ""
      ]
    },
    "snmp_facts": {
      "prefix": "snmp_facts-2",
      "body": [
        "- snmp_facts:",
        "\t\thost: '{{ inventory_hostname }}'",
        "\t\tversion: v3",
        "\t\tlevel: authPriv",
        "\t\tintegrity: sha",
        "\t\tprivacy: aes",
        "\t\tusername: snmp-user",
        "\t\tauthkey: abc12345",
        "\t\tprivkey: def6789",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "sns": {
      "prefix": "sns-3",
      "description": "Send message with message_attributes",
      "body": [
        "- name: Send message with message_attributes",
        "\tsns:",
        "\t\ttopic: deploy",
        "\t\tmsg: message with extra details!",
        "\t\tmessage_attributes:",
        "\t\t\tchannel:",
        "\t\t\t\tdata_type: String",
        "\t\t\t\tstring_value: mychannel",
        "\t\t\tcolor:",
        "\t\t\t\tdata_type: String",
        "\t\t\t\tstring_value: green",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "sns_topic": {
      "prefix": "sns_topic-1",
      "description": "Create alarm SNS topic",
      "body": [
        "- name: Create alarm SNS topic",
        "\tsns_topic:",
        "\t\tname: alarms",
        "\t\tstate: present",
        "\t\tdisplay_name: alarm SNS topic",
        "\t\tdelivery_policy:",
        "\t\t\thttp:",
        "\t\t\t\tdefaultHealthyRetryPolicy:",
        "\t\t\t\t\tminDelayTarget: 2",
        "\t\t\t\t\tmaxDelayTarget: 4",
        "\t\t\t\t\tnumRetries: 3",
        "\t\t\t\t\tnumMaxDelayRetries: 5",
        "\t\t\t\t\tbackoffFunction: <linear|arithmetic|geometric|exponential>",
        "\t\t\t\tdisableSubscriptionOverrides: true",
        "\t\t\t\tdefaultThrottlePolicy:",
        "\t\t\t\t\tmaxReceivesPerSecond: 10",
        "\t\tsubscriptions:",
        "\t\t\t- endpoint: my_email_address@example.com",
        "\t\t\t\tprotocol: email",
        "\t\t\t- endpoint: my_mobile_number",
        "\t\t\t\tprotocol: sms",
        ""
      ]
    },
    "solaris_zone": {
      "prefix": "solaris_zone-8",
      "description": "Attach zone1",
      "body": [
        "- name: Attach zone1",
        "\tsolaris_zone:",
        "\t\tname: zone1",
        "\t\tstate: attached",
        "\t\tattach_options: '-u'",
        ""
      ]
    },
    "sorcery": {
      "prefix": "sorcery-11",
      "body": [
        "- sorcery:",
        "\t\tupdate: 'yes'",
        ""
      ]
    },
    "sqs_queue": {
      "prefix": "sqs_queue-2",
      "body": [
        "- sqs_queue:",
        "\t\tname: my-queue",
        "\t\tregion: ap-southeast-2",
        "\t\tstate: absent",
        ""
      ]
    },
    "sros_command": {
      "prefix": "sros_command-1",
      "description": "# Note: examples below use the following provider dict to handle#       transport and authentication to the node.",
      "body": [
        "null",
        ""
      ]
    },
    "sros_config": {
      "prefix": "sros_config-1",
      "description": "# Note: examples below use the following provider dict to handle#       transport and authentication to the node.",
      "body": [
        "null",
        ""
      ]
    },
    "sros_rollback": {
      "prefix": "sros_rollback-1",
      "description": "# Note: examples below use the following provider dict to handle#       transport and authentication to the node.",
      "body": [
        "null",
        ""
      ]
    },
    "stackdriver": {
      "prefix": "stackdriver-2",
      "body": [
        "- stackdriver:",
        "\t\tkey: AAAAAA",
        "\t\tevent: annotation",
        "\t\tmsg: Greetings from Ansible",
        "\t\tannotated_by: leeroyjenkins",
        "\t\tlevel: WARN",
        "\t\tinstance_id: i-abcd1234",
        ""
      ]
    },
    "stacki_host": {
      "prefix": "stacki_host-2",
      "description": "Remove a host named test-1",
      "body": [
        "- name: Remove a host named test-1",
        "\tstacki_host:",
        "\t\tname: test-1",
        "\t\tstacki_user: usr",
        "\t\tstacki_password: pwd",
        "\t\tstacki_endpoint: url",
        "\t\tstate: absent",
        ""
      ]
    },
    "stat": {
      "prefix": "stat-1",
      "body": [
        "- stat:",
        "\t\tpath: /etc/foo.conf",
        "\tregister: st",
        ""
      ]
    },
    "statusio_maintenance": {
      "prefix": "statusio_maintenance-4",
      "description": "Delete a maintenance window",
      "body": [
        "- name: Delete a maintenance window",
        "\tstatusio_maintenance:",
        "\t\ttitle: Remove a maintenance window",
        "\t\tmaintenance_id: 561f90faf74bc94a4700087b",
        "\t\tstatuspage: statuspage_id",
        "\t\tapi_id: api_id",
        "\t\tapi_key: api_key",
        "\t\tstate: absent",
        ""
      ]
    },
    "subversion": {
      "prefix": "subversion-3",
      "body": [
        "- subversion:",
        "\t\trepo: 'svn+ssh://an.example.org/path/to/repo'",
        "\t\tdest: /srv/checkout",
        "\t\tcheckout: 'no'",
        "\t\tupdate: 'no'",
        ""
      ]
    },
    "supervisorctl": {
      "prefix": "supervisorctl-4",
      "body": [
        "- supervisorctl:",
        "\t\tname: my_app",
        "\t\tstate: restarted",
        "\t\tusername: test",
        "\t\tpassword: testpass",
        "\t\tserver_url: 'http://localhost:9001'",
        ""
      ]
    },
    "svr4pkg": {
      "prefix": "svr4pkg-5",
      "body": [
        "- svr4pkg:",
        "\t\tname: FIREFOX",
        "\t\tstate: absent",
        "\t\tcategory: true",
        ""
      ]
    },
    "swdepot": {
      "prefix": "swdepot-3",
      "body": [
        "- swdepot:",
        "\t\tname: unzip",
        "\t\tstate: absent",
        ""
      ]
    },
    "swupd": {
      "prefix": "swupd-5",
      "description": "Downgrade OS to release 12920",
      "body": [
        "- name: Downgrade OS to release 12920",
        "\tswupd:",
        "\t\tverify: 'yes'",
        "\t\tmanifest: 12920",
        ""
      ]
    },
    "synchronize": {
      "prefix": "synchronize-15",
      "body": [
        "- synchronize:",
        "\t\tsrc: some/relative/path",
        "\t\tdest: /some/absolute/path",
        "\t\trsync_path: su -c rsync",
        ""
      ]
    },
    "sysctl": {
      "prefix": "sysctl-5",
      "body": [
        "- sysctl:",
        "\t\tname: net.ipv4.ip_forward",
        "\t\tvalue: 1",
        "\t\tsysctl_set: 'yes'",
        "\t\tstate: present",
        "\t\treload: 'yes'",
        ""
      ]
    },
    "syslogger": {
      "prefix": "syslogger-2",
      "description": "Simple Usage",
      "body": [
        "- name: Simple Usage",
        "\tsyslogger:",
        "\t\tmsg: I will end up as daemon.info",
        ""
      ]
    },
    "systemd": {
      "prefix": "systemd-7",
      "description": "just force systemd to reread configs (2.4 and above)",
      "body": [
        "- name: just force systemd to reread configs (2.4 and above)",
        "\tsystemd: daemon_reload=yes",
        ""
      ]
    },
    "taiga_issue": {
      "prefix": "taiga_issue-2",
      "body": [
        "- taiga_issue:",
        "\t\ttaiga_host: 'https://mytaigahost.example.com'",
        "\t\tproject: myproject",
        "\t\tsubject: An error has been found",
        "\t\tissue_type: Bug",
        "\t\tstate: absent",
        ""
      ]
    },
    "telegram": {
      "prefix": "telegram-1",
      "description": "send a message to chat in playbook",
      "body": [
        "- name: send a message to chat in playbook",
        "\ttelegram:",
        "\t\ttoken: '9999999:XXXXXXXXXXXXXXXXXXXXXXX'",
        "\t\tchat_id: 0",
        "\t\tmsg: Ansible task finished",
        ""
      ]
    },
    "telnet": {
      "prefix": "telnet-2",
      "description": "run show commands",
      "body": [
        "- name: run show commands",
        "\ttelnet:",
        "\t\tuser: cisco",
        "\t\tpassword: cisco",
        "\t\tlogin_prompt: 'Username: '",
        "\t\tprompts:",
        "\t\t\t- '[>|#]'",
        "\t\tcommand:",
        "\t\t\t- terminal length 0",
        "\t\t\t- show version",
        ""
      ]
    },
    "tempfile": {
      "prefix": "tempfile-2",
      "description": "create temporary file",
      "body": [
        "- name: create temporary file",
        "\ttempfile:",
        "\t\tstate: file",
        "\t\tsuffix: temp",
        ""
      ]
    },
    "template": {
      "prefix": "template-5",
      "body": [
        "- template:",
        "\t\tsrc: etc/ssh/sshd_config.j2",
        "\t\tdest: /etc/ssh/sshd_config",
        "\t\towner: root",
        "\t\tgroup: root",
        "\t\tmode: '0600'",
        "\t\tvalidate: /usr/sbin/sshd -t -f %s",
        "\t\tbackup: 'yes'",
        ""
      ]
    },
    "timezone": {
      "prefix": "timezone-1",
      "description": "set timezone to Asia/Tokyo",
      "body": [
        "- name: set timezone to Asia/Tokyo",
        "\ttimezone:",
        "\t\tname: Asia/Tokyo",
        ""
      ]
    },
    "tower_credential": {
      "prefix": "tower_credential-1",
      "description": "Add tower credential",
      "body": [
        "- name: Add tower credential",
        "\ttower_credential:",
        "\t\tname: Team Name",
        "\t\tdescription: Team Description",
        "\t\torganization: test-org",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_group": {
      "prefix": "tower_group-1",
      "description": "Add tower group",
      "body": [
        "- name: Add tower group",
        "\ttower_group:",
        "\t\tname: localhost",
        "\t\tdescription: Local Host Group",
        "\t\tinventory: Local Inventory",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_host": {
      "prefix": "tower_host-1",
      "description": "Add tower host",
      "body": [
        "- name: Add tower host",
        "\ttower_host:",
        "\t\tname: localhost",
        "\t\tdescription: Local Host Group",
        "\t\tinventory: Local Inventory",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_inventory": {
      "prefix": "tower_inventory-1",
      "description": "Add tower inventory",
      "body": [
        "- name: Add tower inventory",
        "\ttower_inventory:",
        "\t\tname: Foo Inventory",
        "\t\tdescription: Our Foo Cloud Servers",
        "\t\torganization: Bar Org",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_job_cancel": {
      "prefix": "tower_job_cancel-1",
      "description": "Cancel job",
      "body": [
        "- name: Cancel job",
        "\ttower_job_cancel:",
        "\t\tjob_id: job.id",
        ""
      ]
    },
    "tower_job_launch": {
      "prefix": "tower_job_launch-1",
      "description": "Launch a job",
      "body": [
        "- name: Launch a job",
        "\ttower_job_launch:",
        "\t\tjob_template: My Job Template",
        "\tregister: job",
        ""
      ]
    },
    "tower_job_list": {
      "prefix": "tower_job_list-1",
      "description": "List running jobs for the testing.yml playbook",
      "body": [
        "- name: List running jobs for the testing.yml playbook",
        "\ttower_job_list:",
        "\t\tstatus: running",
        "\t\tquery:",
        "\t\t\tplaybook: testing.yml",
        "\t\tregister: testing_jobs",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_job_template": {
      "prefix": "tower_job_template-1",
      "description": "Create tower Ping job template",
      "body": [
        "- name: Create tower Ping job template",
        "\ttower_job_template:",
        "\t\tname: Ping",
        "\t\tjob_type: run",
        "\t\tinventory: Local",
        "\t\tproject: Demo",
        "\t\tplaybook: ping.yml",
        "\t\tmachine_credential: Local",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_job_wait": {
      "prefix": "tower_job_wait-1",
      "description": "Launch a job",
      "body": [
        "- name: Launch a job",
        "\ttower_job_launch:",
        "\t\tjob_template: My Job Template",
        "\t\tregister: job",
        ""
      ]
    },
    "tower_label": {
      "prefix": "tower_label-1",
      "description": "Add label to tower organization",
      "body": [
        "- name: Add label to tower organization",
        "\ttower_label:",
        "\t\tname: Custom Label",
        "\t\torganization: My Organization",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_organization": {
      "prefix": "tower_organization-1",
      "description": "Create tower organization",
      "body": [
        "- name: Create tower organization",
        "\ttower_organization:",
        "\t\tname: Foo",
        "\t\tdescription: Foo bar organization",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_project": {
      "prefix": "tower_project-1",
      "description": "Add tower project",
      "body": [
        "- name: Add tower project",
        "\ttower_project:",
        "\t\tname: Foo",
        "\t\tdescription: Foo bar project",
        "\t\torganization: test",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_role": {
      "prefix": "tower_role-1",
      "description": "Add jdoe to the member role of My Team",
      "body": [
        "- name: Add jdoe to the member role of My Team",
        "\ttower_role:",
        "\t\tuser: jdoe",
        "\t\ttarget_team: My Team",
        "\t\trole: member",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_team": {
      "prefix": "tower_team-1",
      "description": "Create tower team",
      "body": [
        "- name: Create tower team",
        "\ttower_team:",
        "\t\tname: Team Name",
        "\t\tdescription: Team Description",
        "\t\torganization: test-org",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "tower_user": {
      "prefix": "tower_user-1",
      "description": "Add tower user",
      "body": [
        "- name: Add tower user",
        "\ttower_user:",
        "\t\tusername: jdoe",
        "\t\tpassword: foobarbaz",
        "\t\temail: jdoe@example.org",
        "\t\tfirst_name: John",
        "\t\tlast_name: Doe",
        "\t\tstate: present",
        "\t\ttower_config_file: ~/tower_cli.cfg",
        ""
      ]
    },
    "twilio": {
      "prefix": "twilio-3",
      "body": [
        "- twilio:",
        "\t\tmsg: Deployment complete!",
        "\t\taccount_sid: ACXXXXXXXXXXXXXXXXX",
        "\t\tauth_token: ACXXXXXXXXXXXXXXXXX",
        "\t\tfrom_number: 15552014545",
        "\t\tto_number: 15553035681",
        "\t\tmedia_url: 'https://demo.twilio.com/logo.png'",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "typetalk": {
      "prefix": "typetalk-1",
      "body": [
        "- typetalk:",
        "\t\tclient_id: 12345",
        "\t\tclient_secret: 12345",
        "\t\ttopic: 1",
        "\t\tmsg: install completed",
        ""
      ]
    },
    "udm_dns_record": {
      "prefix": "udm_dns_record-1",
      "body": [
        "- udm_dns_zone:",
        "\t\tname: www",
        "\t\tzone: example.com",
        "\t\ttype: host_record",
        "\t\tdata:",
        "\t\t\t- a: 192.0.2.1",
        ""
      ]
    },
    "udm_dns_zone": {
      "prefix": "udm_dns_zone-1",
      "body": [
        "- udm_dns_zone:",
        "\t\tzone: example.com",
        "\t\ttype: forward_zone",
        "\t\tnameserver:",
        "\t\t\t- ucs.example.com",
        "\t\tinterfaces:",
        "\t\t\t- 192.0.2.1",
        ""
      ]
    },
    "udm_group": {
      "prefix": "udm_group-3",
      "body": [
        "- udm_group:",
        "\t\tname: g123m-1A",
        "\t\tposition: 'cn=classes,cn=students,cn=groups,ou=school,dc=school,dc=example,dc=com'",
        ""
      ]
    },
    "udm_share": {
      "prefix": "udm_share-1",
      "body": [
        "- udm_share:",
        "\t\tname: home",
        "\t\tpath: /home",
        "\t\thost: ucs.example.com",
        "\t\tsambaName: Home",
        ""
      ]
    },
    "udm_user": {
      "prefix": "udm_user-3",
      "body": [
        "- udm_user:",
        "\t\tname: foo",
        "\t\tpassword: secure_password",
        "\t\tfirstname: Foo",
        "\t\tlastname: Bar",
        "\t\tposition: 'cn=teachers,cn=users,ou=school,dc=school,dc=example,dc=com'",
        ""
      ]
    },
    "ufw": {
      "prefix": "ufw-14",
      "body": [
        "- ufw:",
        "\t\trule: deny",
        "\t\troute: 'yes'",
        "\t\tsrc: 1.2.3.0/24",
        "\t\tdest: 4.5.6.0/24",
        ""
      ]
    },
    "unarchive": {
      "prefix": "unarchive-3",
      "description": "Unarchive a file that needs to be downloaded (added in 2.0)",
      "body": [
        "- name: Unarchive a file that needs to be downloaded (added in 2.0)",
        "\tunarchive:",
        "\t\tsrc: 'https://example.com/example.zip'",
        "\t\tdest: /usr/local/bin",
        "\t\tremote_src: 'yes'",
        ""
      ]
    },
    "uptimerobot": {
      "prefix": "uptimerobot-2",
      "body": [
        "- uptimerobot:",
        "\t\tmonitorid: 12345",
        "\t\tapikey: 12345-1234512345",
        "\t\tstate: started",
        ""
      ]
    },
    "uri": {
      "prefix": "uri-3",
      "description": "Fail if AWESOME is not in the page content",
      "body": [
        "- name: Fail if AWESOME is not in the page content",
        "\tfail: null",
        "\twhen: '''AWESOME'' not in webpage.content'",
        ""
      ]
    },
    "urpmi": {
      "prefix": "urpmi-4",
      "body": [
        "- urpmi:",
        "\t\tname: bar",
        "\t\tstate: present",
        "\t\tupdate_cache: 'yes'",
        ""
      ]
    },
    "user": {
      "prefix": "user-5",
      "body": [
        "- user:",
        "\t\tname: james18",
        "\t\tshell: /bin/zsh",
        "\t\tgroups: developers",
        "\t\texpires: 1422403387",
        ""
      ]
    },
    "vca_vapp": {
      "prefix": "vca_vapp-1",
      "description": "Creates a new vApp in a VCA instance",
      "body": [
        "- name: Creates a new vApp in a VCA instance",
        "\tvca_vapp:",
        "\t\tvapp_name: tower",
        "\t\tstate: present",
        "\t\ttemplate_name: Ubuntu Server 12.04 LTS (amd64 20150127)",
        "\t\tvdc_name: VDC1",
        "\t\tinstance_id: <your instance id here>",
        "\t\tusername: <your username here>",
        "\t\tpassword: <your password here>",
        ""
      ]
    },
    "vcenter_license": {
      "prefix": "vcenter_license-2",
      "description": "Remove an (unused) vCenter license",
      "body": [
        "- name: Remove an (unused) vCenter license",
        "\tvmware_license:",
        "\t\thostname: '{{ vcenter_hostname }}'",
        "\t\tusername: '{{ vcenter_username }}'",
        "\t\tpassword: '{{ vcenter_password }}'",
        "\t\tlicense: f600d-21ae3-5592b-249e0-cc341",
        "\t\tstate: absent",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "vdirect_file": {
      "prefix": "vdirect_file-1",
      "description": "vdirect_file",
      "body": [
        "- name: vdirect_file",
        "\tvdirect_file:",
        "\t\tvdirect_primary_ip: 10.10.10.10",
        "\t\tvdirect_user: vDirect",
        "\t\tvdirect_password: radware",
        "\t\tfile_name: /tmp/get_vlans.vm",
        ""
      ]
    },
    "vertica_configuration": {
      "prefix": "vertica_configuration-1",
      "description": "updating load_balance_policy",
      "body": [
        "- name: updating load_balance_policy",
        "\tvertica_configuration: name=failovertostandbyafter value='8 hours'",
        ""
      ]
    },
    "vertica_facts": {
      "prefix": "vertica_facts-1",
      "description": "gathering vertica facts",
      "body": [
        "- name: gathering vertica facts",
        "\tvertica_facts: db=db_name",
        ""
      ]
    },
    "vertica_role": {
      "prefix": "vertica_role-2",
      "description": "creating a new vertica role with other role assigned",
      "body": [
        "- name: creating a new vertica role with other role assigned",
        "\tvertica_role: name=role_name assigned_role=other_role_name state=present",
        ""
      ]
    },
    "vertica_schema": {
      "prefix": "vertica_schema-3",
      "description": "creating a new schema with roles",
      "body": [
        "- name: creating a new schema with roles",
        "\tvertica_schema: >-",
        "\t\tname=schema_name create_roles=schema_name_all",
        "\t\tusage_roles=schema_name_ro,schema_name_rw db=db_name state=present",
        ""
      ]
    },
    "vertica_user": {
      "prefix": "vertica_user-2",
      "description": "creating a new vertica user authenticated via ldap with roles assigned",
      "body": [
        "- name: creating a new vertica user authenticated via ldap with roles assigned",
        "\tvertica_user: name=user_name ldap=true db=db_name roles=schema_name_ro state=present",
        ""
      ]
    },
    "virt": {
      "prefix": "virt-1",
      "body": [
        "- virt:",
        "\t\tname: alpha",
        "\t\tstate: running",
        ""
      ]
    },
    "virt_net": {
      "prefix": "virt_net-12",
      "body": [
        "- virt_net:",
        "\t\tautostart: 'no'",
        "\t\tname: br_nat",
        ""
      ]
    },
    "virt_pool": {
      "prefix": "virt_pool-14",
      "body": [
        "- virt_pool:",
        "\t\tautostart: 'no'",
        "\t\tname: vms",
        ""
      ]
    },
    "vmadm": {
      "prefix": "vmadm-3",
      "description": "Stop all zones",
      "body": [
        "- name: Stop all zones",
        "\tvmadm:",
        "\t\tuuid: '*'",
        "\t\tstate: stopped",
        ""
      ]
    },
    "vmware_cluster": {
      "prefix": "vmware_cluster-1",
      "description": "Create Cluster",
      "body": [
        "- name: Create Cluster",
        "\tlocal_action:",
        "\t\tmodule: vmware_cluster",
        "\t\thostname: '{{ ansible_ssh_host }}'",
        "\t\tusername: root",
        "\t\tpassword: vmware",
        "\t\tdatacenter_name: datacenter",
        "\t\tcluster_name: cluster",
        "\t\tenable_ha: 'yes'",
        "\t\tenable_drs: 'yes'",
        "\t\tenable_vsan: 'yes'",
        ""
      ]
    },
    "vmware_datacenter": {
      "prefix": "vmware_datacenter-1",
      "description": "Create Datacenter",
      "body": [
        "- name: Create Datacenter",
        "\tlocal_action:",
        "\t\tmodule: vmware_datacenter",
        "\t\thostname: '{{ ansible_ssh_host }}'",
        "\t\tusername: root",
        "\t\tpassword: vmware",
        "\t\tdatacenter_name: datacenter",
        "\t\tstate: present",
        ""
      ]
    },
    "vmware_dns_config": {
      "prefix": "vmware_dns_config-1",
      "description": "Configure ESXi hostname and DNS servers",
      "body": [
        "- name: Configure ESXi hostname and DNS servers",
        "\tlocal_action:",
        "\t\tmodule: vmware_dns_config",
        "\t\thostname: esxi_hostname",
        "\t\tusername: root",
        "\t\tpassword: your_password",
        "\t\tchange_hostname_to: esx01",
        "\t\tdomainname: foo.org",
        "\t\tdns_servers:",
        "\t\t\t- 8.8.8.8",
        "\t\t\t- 8.8.4.4",
        ""
      ]
    },
    "vmware_dvs_host": {
      "prefix": "vmware_dvs_host-1",
      "description": "Add Host to dVS",
      "body": [
        "- name: Add Host to dVS",
        "\tlocal_action:",
        "\t\tmodule: vmware_dvs_host",
        "\t\thostname: vcenter_ip_or_hostname",
        "\t\tusername: vcenter_username",
        "\t\tpassword: vcenter_password",
        "\t\tesxi_hostname: esxi_hostname_as_listed_in_vcenter",
        "\t\tswitch_name: dvSwitch",
        "\t\tvmnics:",
        "\t\t\t- vmnic0",
        "\t\t\t- vmnic1",
        "\t\tstate: present",
        ""
      ]
    },
    "vmware_dvs_portgroup": {
      "prefix": "vmware_dvs_portgroup-1",
      "description": "",
      "body": [
        "- name: Create Management portgroup",
        "     local_action:",
        "        module: vmware_dvs_portgroup",
        "        hostname: vcenter_ip_or_hostname",
        "        username: vcenter_username",
        "        password: vcenter_password",
        "        portgroup_name: Management",
        "        switch_name: dvSwitch",
        "        vlan_id: 123",
        "        num_ports: 120",
        "        portgroup_type: earlyBinding",
        "        state: present"
      ]
    },
    "vmware_dvswitch": {
      "prefix": "vmware_dvswitch-1",
      "description": "Create dvswitch",
      "body": [
        "- name: Create dvswitch",
        "\tlocal_action:",
        "\t\tmodule: vmware_dvswitch",
        "\t\thostname: vcenter_ip_or_hostname",
        "\t\tusername: vcenter_username",
        "\t\tpassword: vcenter_password",
        "\t\tdatacenter_name: datacenter",
        "\t\tswitch_name: dvSwitch",
        "\t\tmtu: 9000",
        "\t\tuplink_quantity: 2",
        "\t\tdiscovery_proto: lldp",
        "\t\tdiscovery_operation: both",
        "\t\tstate: present",
        ""
      ]
    },
    "vmware_guest": {
      "prefix": "vmware_guest-5",
      "description": "Remove a VM by uuid",
      "body": [
        "- name: Remove a VM by uuid",
        "\tvmware_guest:",
        "\t\thostname: 192.168.1.209",
        "\t\tusername: administrator@vsphere.local",
        "\t\tpassword: vmware",
        "\t\tuuid: 421e4592-c069-924d-ce20-7e7533fab926",
        "\t\tstate: absent",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "vmware_guest_facts": {
      "prefix": "vmware_guest_facts-1",
      "description": "Gather facts from standalone ESXi server having datacenter as 'ha-datacenter'",
      "body": [
        "- name: >-",
        "\t\tGather facts from standalone ESXi server having datacenter as",
        "\t\t'ha-datacenter'",
        "\tvmware_guest_facts:",
        "\t\thostname: 192.168.1.209",
        "\t\tusername: administrator@vsphere.local",
        "\t\tpassword: vmware",
        "\t\tdatacenter: ha-datacenter",
        "\t\tvalidate_certs: 'no'",
        "\t\tuuid: 421e4592-c069-924d-ce20-7e7533fab926",
        "\tdelegate_to: localhost",
        "\tregister: facts",
        ""
      ]
    },
    "vmware_guest_find": {
      "prefix": "vmware_guest_find-2",
      "description": "Find Guest's Folder using UUID",
      "body": [
        "- name: Find Guest's Folder using UUID",
        "\tvmware_guest_find:",
        "\t\thostname: 192.168.1.209",
        "\t\tusername: administrator@vsphere.local",
        "\t\tpassword: vmware",
        "\t\tvalidate_certs: 'no'",
        "\t\tuuid: 38c4c89c-b3d7-4ae6-ae4e-43c5118eae49",
        "\tregister: vm_folder",
        ""
      ]
    },
    "vmware_guest_snapshot": {
      "prefix": "vmware_guest_snapshot-1",
      "description": "",
      "body": [
        "- name: Create snapshot",
        "    vmware_guest_snapshot:",
        "      hostname: 192.168.1.209",
        "      username: administrator@vsphere.local",
        "      password: vmware",
        "      datacenter: datacenter_name",
        "      folder: /myfolder",
        "      name: dummy_vm",
        "      state: present",
        "      snapshot_name: snap1",
        "      description: snap1_description",
        "    delegate_to: localhost"
      ]
    },
    "vmware_guest_tools_wait": {
      "prefix": "vmware_guest_tools_wait-2",
      "description": "Wait for VMware tools to become available by name",
      "body": [
        "- name: Wait for VMware tools to become available by name",
        "\tvmware_guest_tools_wait:",
        "\t\thostname: 192.168.1.209",
        "\t\tusername: administrator@vsphere.local",
        "\t\tpassword: vmware",
        "\t\tvalidate_certs: 'no'",
        "\t\tname: test-vm",
        "\t\tfolder: /datacenter1/vm",
        "\tdelegate_to: localhost",
        "\tregister: facts",
        ""
      ]
    },
    "vmware_host": {
      "prefix": "vmware_host-1",
      "description": "Add ESXi Host to vCenter",
      "body": [
        "- name: Add ESXi Host to vCenter",
        "\tvmware_host:",
        "\t\thostname: '{{ vcenter_hostname }}'",
        "\t\tusername: '{{ vcenter_username }}'",
        "\t\tpassword: '{{ vcenter_password }}'",
        "\t\tdatacenter_name: datacenter_name",
        "\t\tcluster_name: cluster_name",
        "\t\tesxi_hostname: '{{ esxi_hostname }}'",
        "\t\tesxi_username: '{{ esxi_username }}'",
        "\t\tesxi_password: '{{ esxi_password }}'",
        "\t\tstate: present",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "vmware_local_user_manager": {
      "prefix": "vmware_local_user_manager-1",
      "description": "Add local user to ESXi",
      "body": [
        "- name: Add local user to ESXi",
        "\tlocal_action:",
        "\t\tmodule: vmware_local_user_manager",
        "\t\thostname: esxi_hostname",
        "\t\tusername: root",
        "\t\tpassword: vmware",
        "\t\tlocal_user_name: foo",
        ""
      ]
    },
    "vmware_maintenancemode": {
      "prefix": "vmware_maintenancemode-1",
      "description": "Enter VSAN-Compliant Maintenance Mode",
      "body": [
        "- name: Enter VSAN-Compliant Maintenance Mode",
        "\tlocal_action:",
        "\t\tmodule: vmware_maintenancemode",
        "\t\thostname: vc_host",
        "\t\tusername: vc_user",
        "\t\tpassword: vc_pass",
        "\t\tesxi_hostname: esxi.host.example",
        "\t\tvsan: ensureObjectAccessibility",
        "\t\tevacuate: 'yes'",
        "\t\ttimeout: 3600",
        "\t\tstate: present",
        ""
      ]
    },
    "vmware_target_canonical_facts": {
      "prefix": "vmware_target_canonical_facts-1",
      "description": "Get Canonical name",
      "body": [
        "- name: Get Canonical name",
        "\tlocal_action:",
        "\t\tmodule: vmware_target_canonical_facts",
        "\t\thostname: '{{ ansible_ssh_host }}'",
        "\t\tusername: root",
        "\t\tpassword: vmware",
        "\t\ttarget_id: 7",
        ""
      ]
    },
    "vmware_vm_facts": {
      "prefix": "vmware_vm_facts-2",
      "body": [
        "- debug:",
        "\t\tvar: vmfacts.virtual_machines",
        ""
      ]
    },
    "vmware_vm_shell": {
      "prefix": "vmware_vm_shell-1",
      "description": "shell execution",
      "body": [
        "- name: shell execution",
        "\tlocal_action:",
        "\t\tmodule: vmware_vm_shell",
        "\t\thostname: myVSphere",
        "\t\tusername: myUsername",
        "\t\tpassword: mySecret",
        "\t\tdatacenter: myDatacenter",
        "\t\tfolder: /vm",
        "\t\tvm_id: NameOfVM",
        "\t\tvm_username: root",
        "\t\tvm_password: superSecret",
        "\t\tvm_shell: /bin/echo",
        "\t\tvm_shell_args: ' $var >> myFile '",
        "\t\tvm_shell_env:",
        "\t\t\t- PATH=/bin",
        "\t\t\t- VAR=test",
        "\t\tvm_shell_cwd: /tmp",
        ""
      ]
    },
    "vmware_vm_vss_dvs_migrate": {
      "prefix": "vmware_vm_vss_dvs_migrate-1",
      "description": "Migrate VCSA to vDS",
      "body": [
        "- name: Migrate VCSA to vDS",
        "\tlocal_action:",
        "\t\tmodule: vmware_vm_vss_dvs_migrate",
        "\t\thostname: vcenter_ip_or_hostname",
        "\t\tusername: vcenter_username",
        "\t\tpassword: vcenter_password",
        "\t\tvm_name: virtual_machine_name",
        "\t\tdvportgroup_name: distributed_portgroup_name",
        ""
      ]
    },
    "vmware_vswitch": {
      "prefix": "vmware_vswitch-3",
      "description": "Add a VMWare vSwitch with multiple NICs",
      "body": [
        "- name: Add a VMWare vSwitch with multiple NICs",
        "\tvmware_vswitch:",
        "\t\thostname: esxi_hostname",
        "\t\tusername: esxi_username",
        "\t\tpassword: esxi_password",
        "\t\tswitch: vmware_vswitch_0004",
        "\t\tnics:",
        "\t\t\t- vmnic1",
        "\t\t\t- vmnic2",
        "\t\tmtu: 9000",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "vsphere_copy": {
      "prefix": "vsphere_copy-1",
      "body": [
        "- vsphere_copy:",
        "\t\thost: vhost",
        "\t\tlogin: vuser",
        "\t\tpassword: vpass",
        "\t\tsrc: /some/local/file",
        "\t\tdatacenter: DC1 Someplace",
        "\t\tdatastore: datastore1",
        "\t\tpath: some/remote/file",
        "\ttransport: local",
        ""
      ]
    },
    "vsphere_guest": {
      "prefix": "vsphere_guest-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "vyos_banner": {
      "prefix": "vyos_banner-1",
      "description": "configure the pre-login banner",
      "body": [
        "- name: configure the pre-login banner",
        "\tvyos_banner:",
        "\t\tbanner: pre-login",
        "\t\ttext: |",
        "\t\t\tthis is my pre-login banner",
        "\t\t\tthat contains a multiline",
        "\t\t\tstring",
        "\t\tstate: present",
        ""
      ]
    },
    "vyos_config": {
      "prefix": "vyos_config-2",
      "description": "backup and load from file",
      "body": [
        "- name: backup and load from file",
        "\tvyos_config:",
        "\t\tsrc: vyos.cfg",
        "\t\tbackup: 'yes'",
        ""
      ]
    },
    "vyos_facts": {
      "prefix": "vyos_facts-3",
      "description": "collect everything exception the config",
      "body": [
        "- name: collect everything exception the config",
        "\tvyos_facts:",
        "\t\tgather_subset: '!config'",
        ""
      ]
    },
    "vyos_interface": {
      "prefix": "vyos_interface-10",
      "description": "Config + intent",
      "body": [
        "- name: Config + intent",
        "\tvyos_interface:",
        "\t\tname: eth1",
        "\t\tenabled: false",
        "\t\tstate: down",
        ""
      ]
    },
    "vyos_l3_interface": {
      "prefix": "vyos_l3_interface-4",
      "description": "Remove IP addresses on aggregate",
      "body": [
        "- name: Remove IP addresses on aggregate",
        "\tvyos_l3_interface:",
        "\t\taggregate:",
        "\t\t\t- name: eth1",
        "\t\t\t\tipv4: 192.168.2.10/24",
        "\t\t\t- name: eth2",
        "\t\t\t\tipv4: 192.168.3.10/24",
        "\t\t\t\tipv6: 'fd5d:12c9:2201:1::1/64'",
        "\t\tstate: absent",
        ""
      ]
    },
    "vyos_linkagg": {
      "prefix": "vyos_linkagg-4",
      "description": "Remove aggregate of linkagg definitions",
      "body": [
        "- name: Remove aggregate of linkagg definitions",
        "\tvyos_linkagg:",
        "\t\taggregate:",
        "\t\t\t- name: bond0",
        "\t\t\t- name: bond1",
        "\t\tstate: absent",
        ""
      ]
    },
    "vyos_lldp": {
      "prefix": "vyos_lldp-2",
      "description": "Disable LLDP service",
      "body": [
        "- name: Disable LLDP service",
        "\tvyos_lldp:",
        "\t\tstate: absent",
        ""
      ]
    },
    "vyos_lldp_interface": {
      "prefix": "vyos_lldp_interface-5",
      "description": "Delete aggregate of LLDP interface configurations",
      "body": [
        "- name: Delete aggregate of LLDP interface configurations",
        "\tvyos_lldp_interface:",
        "\t\taggregate:",
        "\t\t\t- name: eth1",
        "\t\t\t- name: eth2",
        "\t\tstate: absent",
        ""
      ]
    },
    "vyos_logging": {
      "prefix": "vyos_logging-5",
      "description": "Remove logging aggregate",
      "body": [
        "- name: Remove logging aggregate",
        "\tvyos_logging:",
        "\t\taggregate:",
        "\t\t\t- dest: console",
        "\t\t\t\tfacility: all",
        "\t\t\t\tlevel: info",
        "\t\t\t- dest: console",
        "\t\t\t\tfacility: daemon",
        "\t\t\t\tlevel: warning",
        "\t\t\t- dest: file",
        "\t\t\t\tname: test2",
        "\t\t\t\tfacility: news",
        "\t\t\t\tlevel: debug",
        "\t\tstate: absent",
        ""
      ]
    },
    "vyos_static_route": {
      "prefix": "vyos_static_route-5",
      "description": "Remove static route collections",
      "body": [
        "- name: Remove static route collections",
        "\tvyos_static_route:",
        "\t\taggregate:",
        "\t\t\t- prefix: 172.24.1.0/24",
        "\t\t\t\tnext_hop: 192.168.42.64",
        "\t\t\t- prefix: 172.24.3.0/24",
        "\t\t\t\tnext_hop: 192.168.42.64",
        "\t\tstate: absent",
        ""
      ]
    },
    "vyos_system": {
      "prefix": "vyos_system-4",
      "description": "configure domain search suffixes",
      "body": [
        "- name: configure domain search suffixes",
        "\tvyos_system:",
        "\t\tdomain_search:",
        "\t\t\t- sub1.example.com",
        "\t\t\t- sub2.example.com",
        ""
      ]
    },
    "vyos_user": {
      "prefix": "vyos_user-1",
      "description": "create a new user",
      "body": [
        "- name: create a new user",
        "\tvyos_user:",
        "\t\tname: ansible",
        "\t\tconfigured_password: password",
        "\t\tstate: present",
        ""
      ]
    },
    "wait_for": {
      "prefix": "wait_for-11",
      "description": "Wait 300 seconds for port 22 to become open and contain \"OpenSSH\"",
      "body": [
        "- name: Wait 300 seconds for port 22 to become open and contain \"OpenSSH\"",
        "\twait_for:",
        "\t\tport: 22",
        "\t\thost: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'",
        "\t\tsearch_regex: OpenSSH",
        "\t\tdelay: 10",
        "\tvars:",
        "\t\tansible_connection: local",
        ""
      ]
    },
    "wait_for_connection": {
      "prefix": "wait_for_connection-3",
      "body": [
        "- hosts: all",
        "\tgather_facts: 'no'",
        "\ttasks:",
        "\t\t- name: Send magic Wake-On-Lan packet to turn on individual systems",
        "\t\t\twakeonlan:",
        "\t\t\t\tmac: '{{ mac }}'",
        "\t\t\t\tbroadcast: 192.168.0.255",
        "\t\t\tdelegate_to: localhost",
        ""
      ]
    },
    "wakeonlan": {
      "prefix": "wakeonlan-2",
      "body": [
        "- wakeonlan:",
        "\t\tmac: '00:00:5E:00:53:66'",
        "\t\tport: 9",
        "\tdelegate_to: localhost",
        ""
      ]
    },
    "webfaction_app": {
      "prefix": "webfaction_app-1",
      "description": "",
      "body": [
        "- name: Create a test app",
        "    webfaction_app:",
        "      name=\"my_wsgi_app1\"",
        "      state=present",
        "      type=mod_wsgi35-python27",
        "      login_name={{webfaction_user}}",
        "      login_password={{webfaction_passwd}}",
        "      machine={{webfaction_machine}}"
      ]
    },
    "webfaction_domain": {
      "prefix": "webfaction_domain-1",
      "description": "",
      "body": [
        "- name: Create a test domain",
        "    webfaction_domain:",
        "      name: mydomain.com",
        "      state: present",
        "      subdomains:",
        "       - www",
        "       - blog",
        "      login_name: \"{{webfaction_user}}\"",
        "      login_password: \"{{webfaction_passwd}}\""
      ]
    },
    "webfaction_mailbox": {
      "prefix": "webfaction_mailbox-1",
      "description": "",
      "body": [
        "- name: Create a mailbox",
        "    webfaction_mailbox:",
        "      mailbox_name=\"mybox\"",
        "      mailbox_password=\"myboxpw\"",
        "      state=present",
        "      login_name={{webfaction_user}}",
        "      login_password={{webfaction_passwd}}"
      ]
    },
    "webfaction_site": {
      "prefix": "webfaction_site-1",
      "description": "",
      "body": [
        "- name: create website",
        "    webfaction_site:",
        "      name: testsite1",
        "      state: present",
        "      host: myhost.webfaction.com",
        "      subdomains:",
        "        - 'testsite1.my_domain.org'",
        "      site_apps:",
        "        - ['testapp1', '/']",
        "      https: no",
        "      login_name: \"{{webfaction_user}}\"",
        "      login_password: \"{{webfaction_passwd}}\""
      ]
    },
    "win_acl": {
      "prefix": "win_acl-5",
      "description": "Deny Intern",
      "body": [
        "- name: Deny Intern",
        "\twin_acl:",
        "\t\tpath: 'C:\\Administrator\\Documents'",
        "\t\tuser: Intern",
        "\t\trights: 'Read,Write,Modify,FullControl,Delete'",
        "\t\ttype: deny",
        "\t\tstate: present",
        ""
      ]
    },
    "win_acl_inheritance": {
      "prefix": "win_acl_inheritance-3",
      "description": "Enable and remove dedicated ACE's",
      "body": [
        "- name: Enable and remove dedicated ACE's",
        "\twin_acl_inheritance:",
        "\t\tpath: 'C:\\apache'",
        "\t\tstate: present",
        "\t\treorganize: true",
        ""
      ]
    },
    "win_chocolatey": {
      "prefix": "win_chocolatey-9",
      "description": "Install curl with proxy credentials that contain quotes",
      "body": [
        "- name: Install curl with proxy credentials that contain quotes",
        "\twin_chocolatey:",
        "\t\tname: curl",
        "\t\tproxy_url: 'http://proxy-server:8080/'",
        "\t\tproxy_username: user with \\\"escaped\\\" double quotes",
        "\t\tproxy_password: pass with \\\"escaped\\\" double quotes",
        ""
      ]
    },
    "win_command": {
      "prefix": "win_command-2",
      "description": "Run command that only runs if folder exists and runs from a specific folder",
      "body": [
        "- name: Run command that only runs if folder exists and runs from a specific folder",
        "\twin_command: 'wbadmin -backupTarget:C:\\backup\\'",
        "\targs:",
        "\t\tchdir: 'C:\\somedir\\'",
        "\t\tcreates: 'C:\\backup\\'",
        ""
      ]
    },
    "win_copy": {
      "prefix": "win_copy-7",
      "description": "Set the contents of a file",
      "body": [
        "- name: Set the contents of a file",
        "\twin_copy:",
        "\t\tdest: 'C:\\temp\\foo.txt'",
        "\t\tcontent: abc123",
        ""
      ]
    },
    "win_defrag": {
      "prefix": "win_defrag-4",
      "description": "Consolidate free space (useful when reducing volumes)",
      "body": [
        "- name: Consolidate free space (useful when reducing volumes)",
        "\twin_defrag:",
        "\t\tfreespace_consolidation: 'yes'",
        ""
      ]
    },
    "win_disk_image": {
      "prefix": "win_disk_image-3",
      "body": [
        "- win_disk_image:",
        "\t\timage_path: 'C:\\install.iso'",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_domain": {
      "prefix": "win_domain-1",
      "body": [
        "- win_domain:",
        "\t\tdns_domain_name: ansible.vagrant",
        "\t\tsafe_mode_password: password123!",
        ""
      ]
    },
    "win_domain_controller": {
      "prefix": "win_domain_controller-2",
      "body": [
        "- hosts: winclient",
        "\tgather_facts: 'no'",
        "\ttasks:",
        "\t\t- win_domain_controller:",
        "\t\t\t\tdomain_admin_user: testguy@ansible.vagrant",
        "\t\t\t\tdomain_admin_password: password123!",
        "\t\t\t\tlocal_admin_password: password123!",
        "\t\t\t\tstate: member_server",
        "\t\t\t\tlog_path: 'c:\\ansible_win_domain_controller.txt'",
        ""
      ]
    },
    "win_domain_group": {
      "prefix": "win_domain_group-6",
      "description": "add managed_by user",
      "body": [
        "- name: add managed_by user",
        "\twin_domain_group:",
        "\t\tname: Group Name Here",
        "\t\tmanaged_by: Domain Admins",
        ""
      ]
    },
    "win_domain_membership": {
      "prefix": "win_domain_membership-1",
      "body": [
        "- hosts: winclient",
        "\tgather_facts: 'no'",
        "\ttasks:",
        "\t\t- win_domain_membership:",
        "\t\t\t\tdns_domain_name: ansible.vagrant",
        "\t\t\t\thostname: mydomainclient",
        "\t\t\t\tdomain_admin_user: testguy@ansible.vagrant",
        "\t\t\t\tdomain_admin_password: password123!",
        "\t\t\t\tdomain_ou_path: 'OU=Windows,OU=Servers,DC=ansible,DC=vagrant'",
        "\t\t\t\tstate: domain",
        "\t\t\tregister: domain_state",
        ""
      ]
    },
    "win_domain_user": {
      "prefix": "win_domain_user-3",
      "description": "Ensure user bob is absent",
      "body": [
        "- name: Ensure user bob is absent",
        "\twin_domain_user:",
        "\t\tname: bob",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_environment": {
      "prefix": "win_environment-2",
      "description": "Remove an environment variable for the current user",
      "body": [
        "- name: Remove an environment variable for the current user",
        "\twin_environment:",
        "\t\tstate: absent",
        "\t\tname: TestVariable",
        "\t\tlevel: user",
        ""
      ]
    },
    "win_eventlog": {
      "prefix": "win_eventlog-6",
      "description": "Remove MyNewLog and all remaining sources",
      "body": [
        "- name: Remove MyNewLog and all remaining sources",
        "\twin_eventlog:",
        "\t\tname: MyNewLog",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_eventlog_entry": {
      "prefix": "win_eventlog_entry-2",
      "description": "Write another entry to a different Windows event log",
      "body": [
        "- name: Write another entry to a different Windows event log",
        "\twin_eventlog_entry:",
        "\t\tlog: AnotherLog",
        "\t\tsource: MyAppSource",
        "\t\tevent_id: 5000",
        "\t\tmessage: An error has occurred.",
        "\t\tentry_type: Error",
        "\t\tcategory: 5",
        "\t\traw_data: '10,20'",
        ""
      ]
    },
    "win_feature": {
      "prefix": "win_feature-4",
      "description": "Install IIS Web-Server with sub features and management tools",
      "body": [
        "- name: Install IIS Web-Server with sub features and management tools",
        "\twin_feature:",
        "\t\tname: Web-Server",
        "\t\tstate: present",
        "\t\trestart: true",
        "\t\tinclude_sub_features: true",
        "\t\tinclude_management_tools: true",
        ""
      ]
    },
    "win_file": {
      "prefix": "win_file-4",
      "description": "Remove directory structure",
      "body": [
        "- name: Remove directory structure",
        "\twin_file:",
        "\t\tpath: 'C:\\Temp'",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_file_version": {
      "prefix": "win_file_version-2",
      "body": [
        "- debug:",
        "\t\tmsg: '{{ exe_file_version }}'",
        ""
      ]
    },
    "win_find": {
      "prefix": "win_find-19",
      "body": [
        "- win_find:",
        "\t\tpath: 'C:\\temp'",
        "\t\tget_checksum: false",
        ""
      ]
    },
    "win_firewall": {
      "prefix": "win_firewall-2",
      "description": "Disable Domain firewall",
      "body": [
        "- name: Disable Domain firewall",
        "\twin_firewall:",
        "\t\tstate: disabled",
        "\t\tprofiles:",
        "\t\t\t- Domain",
        "\ttags: disable_firewall",
        ""
      ]
    },
    "win_firewall_rule": {
      "prefix": "win_firewall_rule-2",
      "description": "Firewall rule to allow RDP on TCP port 3389",
      "body": [
        "- name: Firewall rule to allow RDP on TCP port 3389",
        "\twin_firewall_rule:",
        "\t\tname: Remote Desktop",
        "\t\tlocalport: 3389",
        "\t\taction: allow",
        "\t\tdirection: in",
        "\t\tprotocol: tcp",
        "\t\tprofiles: private",
        "\t\tstate: present",
        "\t\tenabled: 'yes'",
        ""
      ]
    },
    "win_get_url": {
      "prefix": "win_get_url-3",
      "description": "Download earthrise.jpg to specified path through a proxy server.",
      "body": [
        "- name: Download earthrise.jpg to specified path through a proxy server.",
        "\twin_get_url:",
        "\t\turl: 'http://www.example.com/earthrise.jpg'",
        "\t\tdest: 'C:\\Users\\RandomUser\\earthrise.jpg'",
        "\t\tproxy_url: 'http://10.0.0.1:8080'",
        "\t\tproxy_username: username",
        "\t\tproxy_password: password",
        ""
      ]
    },
    "win_group": {
      "prefix": "win_group-2",
      "description": "Remove a group",
      "body": [
        "- name: Remove a group",
        "\twin_group:",
        "\t\tname: deploy",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_group_membership": {
      "prefix": "win_group_membership-2",
      "description": "Remove a domain group and service user from a local group",
      "body": [
        "- name: Remove a domain group and service user from a local group",
        "\twin_group_membership:",
        "\t\tname: Backup Operators",
        "\t\tmembers:",
        "\t\t\t- DOMAIN\\TestGroup",
        "\t\t\t- NT AUTHORITY\\SYSTEM",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_hotfix": {
      "prefix": "win_hotfix-11",
      "body": [
        "- win_reboot: null",
        "\twhen: hotfix_uninstall.reboot_required",
        ""
      ]
    },
    "win_iis_virtualdirectory": {
      "prefix": "win_iis_virtualdirectory-3",
      "description": "Create a virtual directory on an application if it does not exist",
      "body": [
        "- name: Create a virtual directory on an application if it does not exist",
        "\twin_iis_virtualdirectory:",
        "\t\tname: somedirectory",
        "\t\tsite: somesite",
        "\t\tapplication: someapp",
        "\t\tstate: present",
        "\t\tphysical_path: 'c:\\virtualdirectory\\some'",
        ""
      ]
    },
    "win_iis_webapplication": {
      "prefix": "win_iis_webapplication-1",
      "description": "Add ACME webapplication on IIS.",
      "body": [
        "- name: Add ACME webapplication on IIS.",
        "\twin_iis_webapplication:",
        "\t\tname: api",
        "\t\tsite: acme",
        "\t\tstate: present",
        "\t\tphysical_path: 'C:\\apps\\acme\\api'",
        ""
      ]
    },
    "win_iis_webapppool": {
      "prefix": "win_iis_webapppool-9",
      "description": "manage a timespan attribute",
      "body": [
        "- name: manage a timespan attribute",
        "\twin_iis_webapppool:",
        "\t\tname: TimespanAppPool",
        "\t\tstate: started",
        "\t\tattributes:",
        "\t\t\trecycling.periodicRestart.time: '00:00:05:00.000000'",
        "\t\t\tprocessModel.pingResponseTime: '00:03:00'",
        ""
      ]
    },
    "win_iis_webbinding": {
      "prefix": "win_iis_webbinding-7",
      "description": "Website https biding to specific port",
      "body": [
        "- name: Website https biding to specific port",
        "\twin_iis_webbinding:",
        "\t\tname: Default Web Site",
        "\t\tprotocol: https",
        "\t\tport: 443",
        "\t\tcertificate_hash: D1A3AF8988FD32D1A3AF8988FD323792DA73F4C",
        "\t\tstate: present",
        ""
      ]
    },
    "win_lineinfile": {
      "prefix": "win_lineinfile-8",
      "body": [
        "- win_lineinfile:",
        "\t\tpath: 'C:\\temp\\example.conf'",
        "\t\tbackrefs: 'yes'",
        "\t\tregexp: (^name=)",
        "\t\tline: $1JohnDoe",
        ""
      ]
    },
    "win_mapped_drive": {
      "prefix": "win_mapped_drive-5",
      "description": "create mapped drive with domain credentials",
      "body": [
        "- name: create mapped drive with domain credentials",
        "\twin_mapped_drive:",
        "\t\tletter: M",
        "\t\tpath: \\\\domain\\appdata\\it",
        "\t\tusername: DOMAIN\\IT",
        "\t\tpassword: Password",
        ""
      ]
    },
    "win_msg": {
      "prefix": "win_msg-1",
      "description": "Warn logged in users of impending upgrade",
      "body": [
        "- name: Warn logged in users of impending upgrade",
        "\twin_msg:",
        "\t\tdisplay_seconds: 60",
        "\t\tmsg: >-",
        "\t\t\tAutomated upgrade about to start.\tPlease save your work and log off",
        "\t\t\tbefore {{ deployment_start_time }}",
        ""
      ]
    },
    "win_msi": {
      "prefix": "win_msi-3",
      "description": "Uninstall an MSI file",
      "body": [
        "- name: Uninstall an MSI file",
        "\twin_msi:",
        "\t\tpath: 'C:\\7z920-x64.msi'",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_nssm": {
      "prefix": "win_nssm-11",
      "body": [
        "- win_nssm:",
        "\t\tname: foo",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_owner": {
      "prefix": "win_owner-2",
      "description": "Set the owner of root directory",
      "body": [
        "- name: Set the owner of root directory",
        "\twin_owner:",
        "\t\tpath: 'C:\\apache'",
        "\t\tuser: SYSTEM",
        "\t\trecurse: false",
        ""
      ]
    },
    "win_package": {
      "prefix": "win_package-10",
      "description": "Install application and override expected return codes",
      "body": [
        "- name: Install application and override expected return codes",
        "\twin_package:",
        "\t\tpath: >-",
        "\t\t\thttps://download.microsoft.com/download/1/6/7/167F0D79-9317-48AE-AEDB-17120579F8E2/NDP451-KB2858728-x86-x64-AllOS-ENU.exe",
        "\t\tproduct_id: '{7DEBE4EB-6B40-3766-BB35-5CBBC385DA37}'",
        "\t\targuments: /q /norestart",
        "\t\tstate: present",
        "\t\texpected_return_code:",
        "\t\t\t- 0",
        "\t\t\t- 666",
        "\t\t\t- 3010",
        ""
      ]
    },
    "win_pagefile": {
      "prefix": "win_pagefile-8",
      "description": "Set D pagefile, override if exists",
      "body": [
        "- name: 'Set D pagefile, override if exists'",
        "\twin_pagefile:",
        "\t\tdrive: d",
        "\t\tinitial_size: 1024",
        "\t\tmaximum_size: 1024",
        "\t\tstate: present",
        ""
      ]
    },
    "win_path": {
      "prefix": "win_path-2",
      "description": "Ensure that C:\\Program Files\\MyJavaThing is not on the current user's CLASSPATH",
      "body": [
        "- name: >-",
        "\t\tEnsure that C:\\Program Files\\MyJavaThing is not on the current user's",
        "\t\tCLASSPATH",
        "\twin_path:",
        "\t\tname: CLASSPATH",
        "\t\telements: 'C:\\Program Files\\MyJavaThing'",
        "\t\tscope: user",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_power_plan": {
      "prefix": "win_power_plan-1",
      "description": "change power plan to high performance",
      "body": [
        "- name: change power plan to high performance",
        "\twin_power_plan:",
        "\t\tname: high performance",
        ""
      ]
    },
    "win_psexec": {
      "prefix": "win_psexec-4",
      "description": "Run PsExec from custom location C:\\Program Files\\sysinternals\\",
      "body": [
        "- name: 'Run PsExec from custom location C:\\Program Files\\sysinternals\\'",
        "\twin_psexec:",
        "\t\tcommand: netsh advfirewall set allprofiles state off",
        "\t\texecutable: 'C:\\Program Files\\sysinternals\\psexec.exe'",
        "\t\thostnames:",
        "\t\t\t- remote_server",
        "\t\tpassword: some_password",
        "\t\tpriority: low",
        ""
      ]
    },
    "win_psmodule": {
      "prefix": "win_psmodule-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "win_rabbitmq_plugin": {
      "prefix": "win_rabbitmq_plugin-1",
      "description": "Enables the rabbitmq_management plugin",
      "body": [
        "- name: Enables the rabbitmq_management plugin",
        "\twin_rabbitmq_plugin:",
        "\t\tnames: rabbitmq_management",
        "\t\tstate: enabled",
        ""
      ]
    },
    "win_reboot": {
      "prefix": "win_reboot-2",
      "body": [
        "- win_updates: null",
        "\tregister: update_result",
        ""
      ]
    },
    "win_reg_stat": {
      "prefix": "win_reg_stat-2",
      "body": [
        "- win_reg_stat:",
        "\t\tpath: 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion'",
        "\t\tname: CommonFilesDir",
        "\tregister: common_files_dir",
        ""
      ]
    },
    "win_regedit": {
      "prefix": "win_regedit-13",
      "description": "Remove entry 'hello' from registry path MyCompany",
      "body": [
        "- name: Remove entry 'hello' from registry path MyCompany",
        "\twin_regedit:",
        "\t\tpath: 'HKCU:\\Software\\MyCompany'",
        "\t\tname: hello",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_region": {
      "prefix": "win_region-7",
      "body": [
        "- win_reboot: null",
        "\twhen: result.restart_required",
        ""
      ]
    },
    "win_robocopy": {
      "prefix": "win_robocopy-5",
      "description": "Sync two directories in recursive and purging mode, specifying additional special flags",
      "body": [
        "- name: >-",
        "\t\tSync two directories in recursive and purging mode, specifying additional",
        "\t\tspecial flags",
        "\twin_robocopy:",
        "\t\tsrc: 'C:\\DirectoryOne'",
        "\t\tdest: 'C:\\DirectoryTwo'",
        "\t\tflags: '/E /PURGE /XD SOME_DIR /XF SOME_FILE /MT:32'",
        ""
      ]
    },
    "win_route": {
      "prefix": "win_route-3",
      "description": "Remove a network static route",
      "body": [
        "- name: Remove a network static route",
        "\twin_route:",
        "\t\tdestination: 192.168.2.10/32",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_say": {
      "prefix": "win_say-4",
      "description": "Text from file example",
      "body": [
        "- name: Text from file example",
        "\twin_say:",
        "\t\tstart_sound_path: 'C:\\Windows\\Media\\Windows Balloon.wav'",
        "\t\tmsg_file: AppData\\Local\\Temp\\morning_report.txt",
        "\t\tend_sound_path: 'C:\\Windows\\Media\\chimes.wav'",
        ""
      ]
    },
    "win_scheduled_task": {
      "prefix": "win_scheduled_task-7",
      "description": "disable a task that already exists",
      "body": [
        "- name: disable a task that already exists",
        "\twin_scheduled_task:",
        "\t\tname: TaskToDisable",
        "\t\tenabled: 'no'",
        ""
      ]
    },
    "win_scheduled_task_stat": {
      "prefix": "win_scheduled_task_stat-3",
      "description": "get information about a task in a custom folder",
      "body": [
        "- name: get information about a task in a custom folder",
        "\twin_scheduled_task_stat:",
        "\t\tpath: \\folder name",
        "\t\tname: task name",
        "\tregister: task_stat",
        ""
      ]
    },
    "win_security_policy": {
      "prefix": "win_security_policy-4",
      "description": "enable system events",
      "body": [
        "- name: enable system events",
        "\twin_security_policy:",
        "\t\tsection: Event Audit",
        "\t\tkey: AuditSystemEvents",
        "\t\tvalue: 1",
        ""
      ]
    },
    "win_service": {
      "prefix": "win_service-16",
      "description": "remove dependencies from existing dependencies",
      "body": [
        "- name: remove dependencies from existing dependencies",
        "\twin_service:",
        "\t\tname: service name",
        "\t\tdependencies:",
        "\t\t\t- service1",
        "\t\t\t- service2",
        "\t\tdependency_action: remove",
        ""
      ]
    },
    "win_share": {
      "prefix": "win_share-1",
      "description": "# Playbook example# Add share and set permissions",
      "body": [
        "null",
        ""
      ]
    },
    "win_shell": {
      "prefix": "win_shell-4",
      "body": [
        "- win_shell: echo %HOMEDIR%",
        "\targs:",
        "\t\texecutable: cmd",
        "\tregister: homedir_out",
        ""
      ]
    },
    "win_shortcut": {
      "prefix": "win_shortcut-5",
      "description": "Create a URL shortcut for the Ansible website",
      "body": [
        "- name: Create a URL shortcut for the Ansible website",
        "\twin_shortcut:",
        "\t\tsrc: 'https://ansible.com/'",
        "\t\tdest: '%Public%\\Desktop\\Ansible website.url'",
        ""
      ]
    },
    "win_stat": {
      "prefix": "win_stat-8",
      "body": [
        "- debug:",
        "\t\tvar: sha256_checksum.stat.checksum",
        ""
      ]
    },
    "win_tempfile": {
      "prefix": "win_tempfile-2",
      "description": "Create temporary file",
      "body": [
        "- name: Create temporary file",
        "\twin_tempfile:",
        "\t\tstate: file",
        "\t\tsuffix: temp",
        ""
      ]
    },
    "win_template": {
      "prefix": "win_template-2",
      "description": "Create a Unix-style file from a Jinja2 template",
      "body": [
        "- name: Create a Unix-style file from a Jinja2 template",
        "\twin_template:",
        "\t\tsrc: unix/config.conf.j2",
        "\t\tdest: 'C:\\share\\unix\\config.conf'",
        "\t\tnewline_sequence: \\n",
        ""
      ]
    },
    "win_timezone": {
      "prefix": "win_timezone-3",
      "description": "Set timezone to 'Central Standard Time' (GMT-06:00)",
      "body": [
        "- name: 'Set timezone to ''Central Standard Time'' (GMT-06:00)'",
        "\twin_timezone:",
        "\t\ttimezone: Central Standard Time",
        ""
      ]
    },
    "win_toast": {
      "prefix": "win_toast-1",
      "description": "Warn logged in users of impending upgrade (note use of async to stop the module from waiting until notification expires).",
      "body": [
        "- name: >-",
        "\t\tWarn logged in users of impending upgrade (note use of async to stop the",
        "\t\tmodule from waiting until notification expires).",
        "\twin_toast:",
        "\t\texpire: 60",
        "\t\ttitle: System Upgrade Notification",
        "\t\tmsg: >-",
        "\t\t\tAutomated upgrade about to start.\tPlease save your work and log off",
        "\t\t\tbefore {{ deployment_start_time }}",
        "\tasync: 60",
        "\tpoll: 0",
        ""
      ]
    },
    "win_updates": {
      "prefix": "win_updates-3",
      "body": [
        "- win_updates:",
        "\t\tcategory_names: SecurityUpdates",
        "\t\tstate: searched",
        "\t\tlog_path: 'c:\\ansible_wu.txt'",
        ""
      ]
    },
    "win_uri": {
      "prefix": "win_uri-4",
      "description": "POST a Body to an Endpoint",
      "body": [
        "- name: POST a Body to an Endpoint",
        "\twin_uri:",
        "\t\turl: 'http://www.somesite.com/'",
        "\t\tmethod: POST",
        "\t\tbody: '{ ''some'': ''json'' }'",
        ""
      ]
    },
    "win_user": {
      "prefix": "win_user-2",
      "description": "Ensure user bob is absent",
      "body": [
        "- name: Ensure user bob is absent",
        "\twin_user:",
        "\t\tname: bob",
        "\t\tstate: absent",
        ""
      ]
    },
    "win_user_right": {
      "prefix": "win_user_right-1",
      "description": "",
      "body": [
        "null",
        ""
      ]
    },
    "win_wait_for": {
      "prefix": "win_wait_for-7",
      "description": "wait until port 1234 is offline but try every 10 seconds",
      "body": [
        "- name: wait until port 1234 is offline but try every 10 seconds",
        "\twin_wait_for:",
        "\t\tport: 1234",
        "\t\tstate: absent",
        "\t\tsleep: 10",
        ""
      ]
    },
    "win_wakeonlan": {
      "prefix": "win_wakeonlan-2",
      "description": "Send a magic Wake-On-LAN packet on port 9 to 00-00-5E-00-53-66",
      "body": [
        "- name: Send a magic Wake-On-LAN packet on port 9 to 00-00-5E-00-53-66",
        "\twin_wakeonlan:",
        "\t\tmac: 00-00-5E-00-53-66",
        "\t\tport: 9",
        "\tdelegate_to: remote_system",
        ""
      ]
    },
    "xattr": {
      "prefix": "xattr-3",
      "description": "Removes the key 'foo'",
      "body": [
        "- name: Removes the key 'foo'",
        "\txattr:",
        "\t\tpath: /etc/foo.conf",
        "\t\tkey: user.foo",
        "\t\tstate: absent",
        ""
      ]
    },
    "xbps": {
      "prefix": "xbps-6",
      "body": [
        "- xbps: upgrade=yes",
        ""
      ]
    },
    "xenserver_facts": {
      "prefix": "xenserver_facts-2",
      "description": "Print running VMs",
      "body": [
        "- name: Print running VMs",
        "\tdebug:",
        "\t\tmsg: '{{ item }}'",
        "\twith_items: '{{ xs_vms.keys() }}'",
        "\twhen: 'xs_vms[item][''power_state''] == \"Running\"'",
        ""
      ]
    },
    "xml": {
      "prefix": "xml-13",
      "description": "Remove all children from the website element (option 2)",
      "body": [
        "- name: Remove all children from the website element (option 2)",
        "\txml:",
        "\t\tpath: /foo/bar.xml",
        "\t\txpath: /business/website",
        "\t\tchildren: []",
        ""
      ]
    },
    "yum": {
      "prefix": "yum-11",
      "description": "List ansible packages and register result to print with debug later.",
      "body": [
        "- name: List ansible packages and register result to print with debug later.",
        "\tyum:",
        "\t\tlist: ansible",
        "\tregister: result",
        ""
      ]
    },
    "yum_repository": {
      "prefix": "yum_repository-7",
      "description": "Add Some repo",
      "body": [
        "- name: Add Some repo",
        "\tyum_repository:",
        "\t\tname: somerepo",
        "\t\tdescription: Some YUM repo",
        "\t\tbaseurl: 'http://server.com/path/to/the/repo'",
        "\t\tgpgkey: 'http://server.com/keys/somerepo.pub'",
        "\t\tgpgcheck: 'yes'",
        "\t\tparams: '{{ my_role_somerepo_params }}'",
        ""
      ]
    },
    "zabbix_group": {
      "prefix": "zabbix_group-2",
      "description": "Create host groups",
      "body": [
        "- name: Create host groups",
        "\tlocal_action:",
        "\t\tmodule: zabbix_group",
        "\t\tserver_url: 'http://monitor.example.com'",
        "\t\tlogin_user: username",
        "\t\tlogin_password: password",
        "\t\tstate: present",
        "\t\thost_groups:",
        "\t\t\t- Example group1",
        "\t\t\t- Example group2",
        "\twhen: 'inventory_hostname==groups[''group_name''][0]'",
        ""
      ]
    },
    "zabbix_host": {
      "prefix": "zabbix_host-2",
      "description": "Create a new host or update an existing host's tls settings",
      "body": [
        "- name: Create a new host or update an existing host's tls settings",
        "\tlocal_action:",
        "\t\tmodule: zabbix_host",
        "\t\tserver_url: 'http://monitor.example.com'",
        "\t\tlogin_user: username",
        "\t\tlogin_password: password",
        "\t\thost_name: ExampleHost",
        "\t\tvisible_name: ExampleName",
        "\t\thost_groups:",
        "\t\t\t- Example group1",
        "\t\ttls_psk_identity: test",
        "\t\ttls_connect: 2",
        "\t\ttls_psk: 123456789abcdef123456789abcdef12",
        ""
      ]
    },
    "zabbix_hostmacro": {
      "prefix": "zabbix_hostmacro-1",
      "description": "Create a new host macro or update an existing macro's value",
      "body": [
        "- name: Create a new host macro or update an existing macro's value",
        "\tlocal_action:",
        "\t\tmodule: zabbix_hostmacro",
        "\t\tserver_url: 'http://monitor.example.com'",
        "\t\tlogin_user: username",
        "\t\tlogin_password: password",
        "\t\thost_name: ExampleHost",
        "\t\tmacro_name: Example macro",
        "\t\tmacro_value: Example value",
        "\t\tstate: present",
        ""
      ]
    },
    "zabbix_maintenance": {
      "prefix": "zabbix_maintenance-4",
      "description": "Remove maintenance window by name",
      "body": [
        "- name: Remove maintenance window by name",
        "\tzabbix_maintenance:",
        "\t\tname: Test1",
        "\t\tstate: absent",
        "\t\tserver_url: 'https://monitoring.example.com'",
        "\t\tlogin_user: ansible",
        "\t\tlogin_password: pAsSwOrD",
        ""
      ]
    },
    "zabbix_screen": {
      "prefix": "zabbix_screen-3",
      "description": "Create a new screen or update an existing screen's items",
      "body": [
        "- name: Create a new screen or update an existing screen's items",
        "\tlocal_action:",
        "\t\tmodule: zabbix_screen",
        "\t\tserver_url: 'http://monitor.example.com'",
        "\t\tlogin_user: username",
        "\t\tlogin_password: password",
        "\t\tstate: present",
        "\t\tscreens:",
        "\t\t\t- screen_name: ExampleScreen",
        "\t\t\t\thost_group: Example group",
        "\t\t\t\tstate: present",
        "\t\t\t\tgraph_names:",
        "\t\t\t\t\t- Example graph1",
        "\t\t\t\t\t- Example graph2",
        "\t\t\t\tgraph_width: 200",
        "\t\t\t\tgraph_height: 100",
        "\twhen: 'inventory_hostname==groups[''group_name''][0]'",
        ""
      ]
    },
    "zfs": {
      "prefix": "zfs-6",
      "body": [
        "- zfs:",
        "\t\tname: rpool/myfs",
        "\t\tstate: absent",
        ""
      ]
    },
    "zfs_facts": {
      "prefix": "zfs_facts-3",
      "body": [
        "- debug:",
        "\t\tmsg: 'ZFS dataset {{ item.name }} consumes {{ item.used }} of disk space.'",
        "\twith_items: '{{ ansible_zfs_datasets }}'",
        ""
      ]
    },
    "znode": {
      "prefix": "znode-6",
      "body": [
        "- znode:",
        "\t\thosts: 'my-zookeeper-node:2181'",
        "\t\tname: /mypath",
        "\t\tvalue: myvalue",
        "\t\tstate: present",
        "\tdelegate_to: 127.0.0.1",
        ""
      ]
    },
    "zypper": {
      "prefix": "zypper-12",
      "body": [
        "- zypper:",
        "\t\tname: mosh",
        "\t\tstate: present",
        "\tenvironment:",
        "\t\tZYPP_LOCK_TIMEOUT: 20",
        ""
      ]
    },
    "zypper_repository": {
      "prefix": "zypper_repository-6",
      "body": [
        "- zypper_repository:",
        "\t\trepo: 'http://my_internal_ci_repo/repo'",
        "\t\tname: my_ci_repo",
        "\t\tstate: present",
        "\t\trunrefresh: 'yes'",
        ""
      ]
    }
  }